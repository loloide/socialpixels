{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-203c5736028de437.js","public/database.js","node_modules/firebase/app/dist/index.esm.js","node_modules/firebase/app/index.ts","node_modules/@firebase/app/dist/esm/index.esm2017.js","node_modules/@firebase/app/src/platformLoggerService.ts","node_modules/@firebase/app/src/logger.ts","node_modules/@firebase/app/src/constants.ts","node_modules/@firebase/app/src/internal.ts","node_modules/@firebase/app/src/errors.ts","node_modules/@firebase/app/src/firebaseApp.ts","node_modules/@firebase/app/src/api.ts","node_modules/@firebase/app/src/registerCoreComponents.ts","node_modules/@firebase/app/src/index.ts","node_modules/@firebase/component/dist/esm/index.esm2017.js","node_modules/@firebase/component/src/component.ts","node_modules/@firebase/component/src/constants.ts","node_modules/@firebase/component/src/provider.ts","node_modules/@firebase/component/src/component_container.ts","node_modules/@firebase/util/dist/index.esm2017.js","node_modules/@firebase/util/src/constants.ts","node_modules/@firebase/util/src/assert.ts","node_modules/@firebase/util/src/crypt.ts","node_modules/@firebase/util/src/deepCopy.ts","node_modules/@firebase/util/src/deferred.ts","node_modules/@firebase/util/src/emulator.ts","node_modules/@firebase/util/src/environment.ts","node_modules/@firebase/util/src/errors.ts","node_modules/@firebase/util/src/json.ts","node_modules/@firebase/util/src/jwt.ts","node_modules/@firebase/util/src/obj.ts","node_modules/@firebase/util/src/query.ts","node_modules/@firebase/util/src/sha1.ts","node_modules/@firebase/util/src/subscribe.ts","node_modules/@firebase/util/src/validation.ts","node_modules/@firebase/util/src/utf8.ts","node_modules/@firebase/util/src/exponential_backoff.ts","node_modules/@firebase/util/src/formatters.ts","node_modules/@firebase/util/src/compat.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/@firebase/logger/dist/esm/index.esm2017.js","node_modules/@firebase/logger/src/logger.ts","node_modules/firebase/database/dist/index.esm.js","node_modules/@firebase/database/dist/index.esm2017.js","node_modules/@firebase/database/src/core/version.ts","node_modules/@firebase/database/src/core/storage/DOMStorageWrapper.ts","node_modules/@firebase/database/src/core/storage/MemoryStorage.ts","node_modules/@firebase/database/src/core/storage/storage.ts","node_modules/@firebase/database/src/core/util/util.ts","node_modules/@firebase/database/src/core/AppCheckTokenProvider.ts","node_modules/@firebase/database/src/core/AuthTokenProvider.ts","node_modules/@firebase/database/src/realtime/Constants.ts","node_modules/@firebase/database/src/core/RepoInfo.ts","node_modules/@firebase/database/src/core/stats/StatsCollection.ts","node_modules/@firebase/database/src/core/stats/StatsManager.ts","node_modules/@firebase/database/src/realtime/polling/PacketReceiver.ts","node_modules/@firebase/database/src/realtime/BrowserPollConnection.ts","node_modules/@firebase/database/src/realtime/WebSocketConnection.ts","node_modules/@firebase/database/src/realtime/TransportManager.ts","node_modules/@firebase/database/src/realtime/Connection.ts","node_modules/@firebase/database/src/core/ServerActions.ts","node_modules/@firebase/database/src/core/util/EventEmitter.ts","node_modules/@firebase/database/src/core/util/OnlineMonitor.ts","node_modules/@firebase/database/src/core/util/Path.ts","node_modules/@firebase/database/src/core/util/VisibilityMonitor.ts","node_modules/@firebase/database/src/core/PersistentConnection.ts","node_modules/@firebase/database/src/core/snap/Node.ts","node_modules/@firebase/database/src/core/snap/indexes/Index.ts","node_modules/@firebase/database/src/core/snap/indexes/KeyIndex.ts","node_modules/@firebase/database/src/core/util/SortedMap.ts","node_modules/@firebase/database/src/core/snap/comparators.ts","node_modules/@firebase/database/src/core/snap/snap.ts","node_modules/@firebase/database/src/core/snap/LeafNode.ts","node_modules/@firebase/database/src/core/snap/indexes/PriorityIndex.ts","node_modules/@firebase/database/src/core/snap/childSet.ts","node_modules/@firebase/database/src/core/snap/IndexMap.ts","node_modules/@firebase/database/src/core/snap/ChildrenNode.ts","node_modules/@firebase/database/src/core/snap/nodeFromJSON.ts","node_modules/@firebase/database/src/core/snap/indexes/PathIndex.ts","node_modules/@firebase/database/src/core/snap/indexes/ValueIndex.ts","node_modules/@firebase/database/src/core/util/NextPushId.ts","node_modules/@firebase/database/src/core/view/Change.ts","node_modules/@firebase/database/src/core/view/filter/IndexedFilter.ts","node_modules/@firebase/database/src/core/view/filter/RangedFilter.ts","node_modules/@firebase/database/src/core/view/filter/LimitedFilter.ts","node_modules/@firebase/database/src/core/view/QueryParams.ts","node_modules/@firebase/database/src/core/ReadonlyRestClient.ts","node_modules/@firebase/database/src/core/SnapshotHolder.ts","node_modules/@firebase/database/src/core/SparseSnapshotTree.ts","node_modules/@firebase/database/src/core/stats/StatsListener.ts","node_modules/@firebase/database/src/core/stats/StatsReporter.ts","node_modules/@firebase/database/src/core/operation/Operation.ts","node_modules/@firebase/database/src/core/operation/AckUserWrite.ts","node_modules/@firebase/database/src/core/operation/ListenComplete.ts","node_modules/@firebase/database/src/core/operation/Overwrite.ts","node_modules/@firebase/database/src/core/operation/Merge.ts","node_modules/@firebase/database/src/core/view/CacheNode.ts","node_modules/@firebase/database/src/core/view/EventGenerator.ts","node_modules/@firebase/database/src/core/view/ViewCache.ts","node_modules/@firebase/database/src/core/util/ImmutableTree.ts","node_modules/@firebase/database/src/core/CompoundWrite.ts","node_modules/@firebase/database/src/core/WriteTree.ts","node_modules/@firebase/database/src/core/view/ChildChangeAccumulator.ts","node_modules/@firebase/database/src/core/view/CompleteChildSource.ts","node_modules/@firebase/database/src/core/view/ViewProcessor.ts","node_modules/@firebase/database/src/core/view/View.ts","node_modules/@firebase/database/src/core/SyncPoint.ts","node_modules/@firebase/database/src/core/SyncTree.ts","node_modules/@firebase/database/src/core/util/ServerValues.ts","node_modules/@firebase/database/src/core/util/Tree.ts","node_modules/@firebase/database/src/core/util/validation.ts","node_modules/@firebase/database/src/core/view/EventQueue.ts","node_modules/@firebase/database/src/core/Repo.ts","node_modules/@firebase/database/src/core/util/libs/parser.ts","node_modules/@firebase/database/src/core/view/Event.ts","node_modules/@firebase/database/src/core/view/EventRegistration.ts","node_modules/@firebase/database/src/api/OnDisconnect.ts","node_modules/@firebase/database/src/api/Reference_impl.ts","node_modules/@firebase/database/src/api/Database.ts","node_modules/@firebase/database/src/register.ts","node_modules/@firebase/database/src/api/ServerValue.ts","node_modules/@firebase/database/src/api/Transaction.ts","node_modules/@firebase/database/src/api/test_access.ts","node_modules/@firebase/database/src/index.ts","node_modules/process/browser.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"4a236f9275d0a351\";module.bundle.HMR_BUNDLE_ID = \"48aa6d48036e810b\";\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function accept(fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function dispose(fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // $FlowFixMe\n\n  ws.onmessage = function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      var assets = data.assets.filter(function (asset) {\n        return asset.envHash === HMR_ENV_HASH;\n      }); // Handle HMR Update\n\n      var handled = assets.every(function (asset) {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear();\n        assets.forEach(function (asset) {\n          hmrApply(module.bundle.root, asset);\n        });\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      var _iterator = _createForOfIteratorHelper(data.diagnostics.ansi),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var ansiDiagnostic = _step.value;\n          var stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n          console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  var errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  var _iterator2 = _createForOfIteratorHelper(diagnostics),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var diagnostic = _step2.value;\n      var stack = diagnostic.codeframe ? diagnostic.codeframe : diagnostic.stack;\n      errorHTML += \"\\n      <div>\\n        <div style=\\\"font-size: 18px; font-weight: bold; margin-top: 20px;\\\">\\n          \\uD83D\\uDEA8 \".concat(diagnostic.message, \"\\n        </div>\\n        <pre>\").concat(stack, \"</pre>\\n        <div>\\n          \").concat(diagnostic.hints.map(function (hint) {\n        return '<div>💡 ' + hint + '</div>';\n      }).join(''), \"\\n        </div>\\n        \").concat(diagnostic.documentation ? \"<div>\\uD83D\\uDCDD <a style=\\\"color: violet\\\" href=\\\"\".concat(diagnostic.documentation, \"\\\" target=\\\"_blank\\\">Learn more</a></div>\") : '', \"\\n      </div>\\n    \");\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(window.location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    var deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      var fn = new Function('require', 'module', 'exports', asset.output);\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  var parents = getParents(module.bundle.root, id); // If no parents, the asset is new. Prevent reloading the page.\n\n  if (!parents.length) {\n    return true;\n  }\n\n  return parents.some(function (v) {\n    return hmrAcceptCheck(v[0], v[1], null);\n  });\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","import { initializeApp } from \"firebase/app\";\nimport { getDatabase, ref, push, set, child, get } from \"firebase/database\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDstHMTKDX10g3A0sv_1kEXqpvdgKONPUE\",\n  authDomain: \"socialpixels-2e86f.firebaseapp.com\",\n  databaseURL: \"https://socialpixels-2e86f-default-rtdb.firebaseio.com/\",\n  projectId: \"socialpixels-2e86f\",\n  storageBucket: \"socialpixels-2e86f.appspot.com\",\n  messagingSenderId: \"514242334673\",\n  appId: \"1:514242334673:web:cb1132c6cf0c2aa0121af0\",\n  measurementId: \"G-MLB27VF9WG\"\n};\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n//write database\nwindow.database = {};\nwindow.database.writepixel = function(xpos, ypos) {\n  const db = getDatabase();\n  const postListRef = ref(db, 'pixels');\n  const newPostRef = push(postListRef);\n  set(newPostRef, {\n    x: xpos,\n    y: ypos,\n    h: hex\n  });\n  console.log(\"sent to database \" + xpos + \",\" + ypos + \",\" + hex)\n};\n\n//read database\nwindow.database.readpixels = function() {\n  const dbRef = ref(getDatabase());\n  get(child(dbRef, 'pixels')).then((pixels) => {\n    //log pixels information\n    //get individual pixels\n    pixels.forEach(function(pixel) {\n      var pixelData = pixel.val();\n      console.log(\"Got from database: \" + pixelData.x + \",\" + pixelData.y + \",\" + pixelData.h)\n      fill(pixelData.h)\n      noStroke()\n      rect(pixelData.x, pixelData.y, 1, 1)\n    }\n    );}\n  );}\n",null,"/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nregisterVersion(name, version, 'app');\nexport * from '@firebase/app';\n",null,"/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  ComponentContainer,\n  ComponentType,\n  Provider,\n  Name\n} from '@firebase/component';\nimport { PlatformLoggerService, VersionService } from './types';\n\nexport class PlatformLoggerServiceImpl implements PlatformLoggerService {\n  constructor(private readonly container: ComponentContainer) {}\n  // In initial implementation, this will be called by installations on\n  // auth token refresh, and installations will send this string.\n  getPlatformInfoString(): string {\n    const providers = this.container.getProviders();\n    // Loop through providers and get library/version pairs from any that are\n    // version components.\n    return providers\n      .map(provider => {\n        if (isVersionServiceProvider(provider)) {\n          const service = provider.getImmediate() as VersionService;\n          return `${service.library}/${service.version}`;\n        } else {\n          return null;\n        }\n      })\n      .filter(logString => logString)\n      .join(' ');\n  }\n}\n/**\n *\n * @param provider check if this provider provides a VersionService\n *\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\n * provides VersionService. The provider is not necessarily a 'app-version'\n * provider.\n */\nfunction isVersionServiceProvider(provider: Provider<Name>): boolean {\n  const component = provider.getComponent();\n  return component?.type === ComponentType.VERSION;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger } from '@firebase/logger';\n\nexport const logger = new Logger('@firebase/app');\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name as appName } from '../package.json';\nimport { name as appCompatName } from '../../app-compat/package.json';\nimport { name as analyticsCompatName } from '../../../packages/analytics-compat/package.json';\nimport { name as analyticsName } from '../../../packages/analytics/package.json';\nimport { name as appCheckCompatName } from '../../../packages/app-check-compat/package.json';\nimport { name as appCheckName } from '../../../packages/app-check/package.json';\nimport { name as authName } from '../../../packages/auth/package.json';\nimport { name as authCompatName } from '../../../packages/auth-compat/package.json';\nimport { name as databaseName } from '../../../packages/database/package.json';\nimport { name as databaseCompatName } from '../../../packages/database-compat/package.json';\nimport { name as functionsName } from '../../../packages/functions/package.json';\nimport { name as functionsCompatName } from '../../../packages/functions-compat/package.json';\nimport { name as installationsName } from '../../../packages/installations/package.json';\nimport { name as installationsCompatName } from '../../../packages/installations-compat/package.json';\nimport { name as messagingName } from '../../../packages/messaging/package.json';\nimport { name as messagingCompatName } from '../../../packages/messaging-compat/package.json';\nimport { name as performanceName } from '../../../packages/performance/package.json';\nimport { name as performanceCompatName } from '../../../packages/performance-compat/package.json';\nimport { name as remoteConfigName } from '../../../packages/remote-config/package.json';\nimport { name as remoteConfigCompatName } from '../../../packages/remote-config-compat/package.json';\nimport { name as storageName } from '../../../packages/storage/package.json';\nimport { name as storageCompatName } from '../../../packages/storage-compat/package.json';\nimport { name as firestoreName } from '../../../packages/firestore/package.json';\nimport { name as firestoreCompatName } from '../../../packages/firestore-compat/package.json';\nimport { name as packageName } from '../../../packages/firebase/package.json';\n\n/**\n * The default app name\n *\n * @internal\n */\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nexport const PLATFORM_LOG_STRING = {\n  [appName]: 'fire-core',\n  [appCompatName]: 'fire-core-compat',\n  [analyticsName]: 'fire-analytics',\n  [analyticsCompatName]: 'fire-analytics-compat',\n  [appCheckName]: 'fire-app-check',\n  [appCheckCompatName]: 'fire-app-check-compat',\n  [authName]: 'fire-auth',\n  [authCompatName]: 'fire-auth-compat',\n  [databaseName]: 'fire-rtdb',\n  [databaseCompatName]: 'fire-rtdb-compat',\n  [functionsName]: 'fire-fn',\n  [functionsCompatName]: 'fire-fn-compat',\n  [installationsName]: 'fire-iid',\n  [installationsCompatName]: 'fire-iid-compat',\n  [messagingName]: 'fire-fcm',\n  [messagingCompatName]: 'fire-fcm-compat',\n  [performanceName]: 'fire-perf',\n  [performanceCompatName]: 'fire-perf-compat',\n  [remoteConfigName]: 'fire-rc',\n  [remoteConfigCompatName]: 'fire-rc-compat',\n  [storageName]: 'fire-gcs',\n  [storageCompatName]: 'fire-gcs-compat',\n  [firestoreName]: 'fire-fst',\n  [firestoreCompatName]: 'fire-fst-compat',\n  'fire-js': 'fire-js', // Platform identifier for JS SDK.\n  [packageName]: 'fire-js-all'\n} as const;\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp } from './public-types';\nimport { Component, Provider, Name } from '@firebase/component';\nimport { logger } from './logger';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport { FirebaseAppImpl } from './firebaseApp';\n\n/**\n * @internal\n */\nexport const _apps = new Map<string, FirebaseApp>();\n\n/**\n * Registered components.\n *\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const _components = new Map<string, Component<any>>();\n\n/**\n * @param component - the component being added to this app's container\n *\n * @internal\n */\nexport function _addComponent<T extends Name>(\n  app: FirebaseApp,\n  component: Component<T>\n): void {\n  try {\n    (app as FirebaseAppImpl).container.addComponent(component);\n  } catch (e) {\n    logger.debug(\n      `Component ${component.name} failed to register with FirebaseApp ${app.name}`,\n      e\n    );\n  }\n}\n\n/**\n *\n * @internal\n */\nexport function _addOrOverwriteComponent(\n  app: FirebaseApp,\n  component: Component\n): void {\n  (app as FirebaseAppImpl).container.addOrOverwriteComponent(component);\n}\n\n/**\n *\n * @param component - the component to register\n * @returns whether or not the component is registered successfully\n *\n * @internal\n */\nexport function _registerComponent<T extends Name>(\n  component: Component<T>\n): boolean {\n  const componentName = component.name;\n  if (_components.has(componentName)) {\n    logger.debug(\n      `There were multiple attempts to register component ${componentName}.`\n    );\n\n    return false;\n  }\n\n  _components.set(componentName, component);\n\n  // add the component to existing app instances\n  for (const app of _apps.values()) {\n    _addComponent(app as FirebaseAppImpl, component);\n  }\n\n  return true;\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n *\n * @returns the provider for the service with the matching name\n *\n * @internal\n */\nexport function _getProvider<T extends Name>(\n  app: FirebaseApp,\n  name: T\n): Provider<T> {\n  return (app as FirebaseAppImpl).container.getProvider(name);\n}\n\n/**\n *\n * @param app - FirebaseApp instance\n * @param name - service name\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\n *\n * @internal\n */\nexport function _removeServiceInstance<T extends Name>(\n  app: FirebaseApp,\n  name: T,\n  instanceIdentifier: string = DEFAULT_ENTRY_NAME\n): void {\n  _getProvider(app, name).clearInstance(instanceIdentifier);\n}\n\n/**\n * Test only\n *\n * @internal\n */\nexport function _clearComponents(): void {\n  _components.clear();\n}\n\n/**\n * Exported in order to be used in app-compat package\n */\nexport { DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum AppError {\n  NO_APP = 'no-app',\n  BAD_APP_NAME = 'bad-app-name',\n  DUPLICATE_APP = 'duplicate-app',\n  APP_DELETED = 'app-deleted',\n  INVALID_APP_ARGUMENT = 'invalid-app-argument',\n  INVALID_LOG_ARGUMENT = 'invalid-log-argument'\n}\n\nconst ERRORS: ErrorMap<AppError> = {\n  [AppError.NO_APP]:\n    \"No Firebase App '{$appName}' has been created - \" +\n    'call Firebase App.initializeApp()',\n  [AppError.BAD_APP_NAME]: \"Illegal App name: '{$appName}\",\n  [AppError.DUPLICATE_APP]:\n    \"Firebase App named '{$appName}' already exists with different options or config\",\n  [AppError.APP_DELETED]: \"Firebase App named '{$appName}' already deleted\",\n  [AppError.INVALID_APP_ARGUMENT]:\n    'firebase.{$appName}() takes either no argument or a ' +\n    'Firebase App instance.',\n  [AppError.INVALID_LOG_ARGUMENT]:\n    'First argument to `onLog` must be null or a function.'\n};\n\ninterface ErrorParams {\n  [AppError.NO_APP]: { appName: string };\n  [AppError.BAD_APP_NAME]: { appName: string };\n  [AppError.DUPLICATE_APP]: { appName: string };\n  [AppError.APP_DELETED]: { appName: string };\n  [AppError.INVALID_APP_ARGUMENT]: { appName: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<AppError, ErrorParams>(\n  'app',\n  'Firebase',\n  ERRORS\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport {\n  ComponentContainer,\n  Component,\n  ComponentType\n} from '@firebase/component';\nimport { ERROR_FACTORY, AppError } from './errors';\n\nexport class FirebaseAppImpl implements FirebaseApp {\n  private readonly _options: FirebaseOptions;\n  private readonly _name: string;\n  /**\n   * Original config values passed in as a constructor parameter.\n   * It is only used to compare with another config object to support idempotent initializeApp().\n   *\n   * Updating automaticDataCollectionEnabled on the App instance will not change its value in _config.\n   */\n  private readonly _config: Required<FirebaseAppSettings>;\n  private _automaticDataCollectionEnabled: boolean;\n  private _isDeleted = false;\n  private readonly _container: ComponentContainer;\n\n  constructor(\n    options: FirebaseOptions,\n    config: Required<FirebaseAppSettings>,\n    container: ComponentContainer\n  ) {\n    this._options = { ...options };\n    this._config = { ...config };\n    this._name = config.name;\n    this._automaticDataCollectionEnabled =\n      config.automaticDataCollectionEnabled;\n    this._container = container;\n    this.container.addComponent(\n      new Component('app', () => this, ComponentType.PUBLIC)\n    );\n  }\n\n  get automaticDataCollectionEnabled(): boolean {\n    this.checkDestroyed();\n    return this._automaticDataCollectionEnabled;\n  }\n\n  set automaticDataCollectionEnabled(val: boolean) {\n    this.checkDestroyed();\n    this._automaticDataCollectionEnabled = val;\n  }\n\n  get name(): string {\n    this.checkDestroyed();\n    return this._name;\n  }\n\n  get options(): FirebaseOptions {\n    this.checkDestroyed();\n    return this._options;\n  }\n\n  get config(): Required<FirebaseAppSettings> {\n    this.checkDestroyed();\n    return this._config;\n  }\n\n  get container(): ComponentContainer {\n    return this._container;\n  }\n\n  get isDeleted(): boolean {\n    return this._isDeleted;\n  }\n\n  set isDeleted(val: boolean) {\n    this._isDeleted = val;\n  }\n\n  /**\n   * This function will throw an Error if the App has already been deleted -\n   * use before performing API actions on the App.\n   */\n  private checkDestroyed(): void {\n    if (this.isDeleted) {\n      throw ERROR_FACTORY.create(AppError.APP_DELETED, { appName: this._name });\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp,\n  FirebaseOptions,\n  FirebaseAppSettings\n} from './public-types';\nimport { DEFAULT_ENTRY_NAME, PLATFORM_LOG_STRING } from './constants';\nimport { ERROR_FACTORY, AppError } from './errors';\nimport {\n  ComponentContainer,\n  Component,\n  Name,\n  ComponentType\n} from '@firebase/component';\nimport { version } from '../../firebase/package.json';\nimport { FirebaseAppImpl } from './firebaseApp';\nimport { _apps, _components, _registerComponent } from './internal';\nimport { logger } from './logger';\nimport {\n  LogLevelString,\n  setLogLevel as setLogLevelImpl,\n  LogCallback,\n  LogOptions,\n  setUserLogHandler\n} from '@firebase/logger';\nimport { deepEqual } from '@firebase/util';\n\nexport { FirebaseError } from '@firebase/util';\n\n/**\n * The current SDK version.\n *\n * @public\n */\nexport const SDK_VERSION = version;\n\n/**\n * Creates and initializes a {@link @firebase/app#FirebaseApp} instance.\n *\n * See\n * {@link\n *   https://firebase.google.com/docs/web/setup#add_firebase_to_your_app\n *   | Add Firebase to your app} and\n * {@link\n *   https://firebase.google.com/docs/web/setup#multiple-projects\n *   | Initialize multiple projects} for detailed documentation.\n *\n * @example\n * ```javascript\n *\n * // Initialize default app\n * // Retrieve your own options values by adding a web app on\n * // https://console.firebase.google.com\n * initializeApp({\n *   apiKey: \"AIza....\",                             // Auth / General Use\n *   authDomain: \"YOUR_APP.firebaseapp.com\",         // Auth with popup/redirect\n *   databaseURL: \"https://YOUR_APP.firebaseio.com\", // Realtime Database\n *   storageBucket: \"YOUR_APP.appspot.com\",          // Storage\n *   messagingSenderId: \"123456789\"                  // Cloud Messaging\n * });\n * ```\n *\n * @example\n * ```javascript\n *\n * // Initialize another app\n * const otherApp = initializeApp({\n *   databaseURL: \"https://<OTHER_DATABASE_NAME>.firebaseio.com\",\n *   storageBucket: \"<OTHER_STORAGE_BUCKET>.appspot.com\"\n * }, \"otherApp\");\n * ```\n *\n * @param options - Options to configure the app's services.\n * @param name - Optional name of the app to initialize. If no name\n *   is provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The initialized app.\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  name?: string\n): FirebaseApp;\n/**\n * Creates and initializes a FirebaseApp instance.\n *\n * @param options - Options to configure the app's services.\n * @param config - FirebaseApp Configuration\n *\n * @public\n */\nexport function initializeApp(\n  options: FirebaseOptions,\n  config?: FirebaseAppSettings\n): FirebaseApp;\nexport function initializeApp(\n  options: FirebaseOptions,\n  rawConfig = {}\n): FirebaseApp {\n  if (typeof rawConfig !== 'object') {\n    const name = rawConfig;\n    rawConfig = { name };\n  }\n\n  const config: Required<FirebaseAppSettings> = {\n    name: DEFAULT_ENTRY_NAME,\n    automaticDataCollectionEnabled: false,\n    ...rawConfig\n  };\n  const name = config.name;\n\n  if (typeof name !== 'string' || !name) {\n    throw ERROR_FACTORY.create(AppError.BAD_APP_NAME, {\n      appName: String(name)\n    });\n  }\n\n  const existingApp = _apps.get(name) as FirebaseAppImpl;\n  if (existingApp) {\n    // return the existing app if options and config deep equal the ones in the existing app.\n    if (\n      deepEqual(options, existingApp.options) &&\n      deepEqual(config, existingApp.config)\n    ) {\n      return existingApp;\n    } else {\n      throw ERROR_FACTORY.create(AppError.DUPLICATE_APP, { appName: name });\n    }\n  }\n\n  const container = new ComponentContainer(name);\n  for (const component of _components.values()) {\n    container.addComponent(component);\n  }\n\n  const newApp = new FirebaseAppImpl(options, config, container);\n\n  _apps.set(name, newApp);\n\n  return newApp;\n}\n\n/**\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\n *\n * When called with no arguments, the default app is returned. When an app name\n * is provided, the app corresponding to that name is returned.\n *\n * An exception is thrown if the app being retrieved has not yet been\n * initialized.\n *\n * @example\n * ```javascript\n * // Return the default app\n * const app = getApp();\n * ```\n *\n * @example\n * ```javascript\n * // Return a named app\n * const otherApp = getApp(\"otherApp\");\n * ```\n *\n * @param name - Optional name of the app to return. If no name is\n *   provided, the default is `\"[DEFAULT]\"`.\n *\n * @returns The app corresponding to the provided app name.\n *   If no app name is provided, the default app is returned.\n *\n * @public\n */\nexport function getApp(name: string = DEFAULT_ENTRY_NAME): FirebaseApp {\n  const app = _apps.get(name);\n  if (!app) {\n    throw ERROR_FACTORY.create(AppError.NO_APP, { appName: name });\n  }\n\n  return app;\n}\n\n/**\n * A (read-only) array of all initialized apps.\n * @public\n */\nexport function getApps(): FirebaseApp[] {\n  return Array.from(_apps.values());\n}\n\n/**\n * Renders this app unusable and frees the resources of all associated\n * services.\n *\n * @example\n * ```javascript\n * deleteApp(app)\n *   .then(function() {\n *     console.log(\"App deleted successfully\");\n *   })\n *   .catch(function(error) {\n *     console.log(\"Error deleting app:\", error);\n *   });\n * ```\n *\n * @public\n */\nexport async function deleteApp(app: FirebaseApp): Promise<void> {\n  const name = app.name;\n  if (_apps.has(name)) {\n    _apps.delete(name);\n    await Promise.all(\n      (app as FirebaseAppImpl).container\n        .getProviders()\n        .map(provider => provider.delete())\n    );\n    (app as FirebaseAppImpl).isDeleted = true;\n  }\n}\n\n/**\n * Registers a library's name and version for platform logging purposes.\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\n * @param version - Current version of that library.\n * @param variant - Bundle variant, e.g., node, rn, etc.\n *\n * @public\n */\nexport function registerVersion(\n  libraryKeyOrName: string,\n  version: string,\n  variant?: string\n): void {\n  // TODO: We can use this check to whitelist strings when/if we set up\n  // a good whitelist system.\n  let library = PLATFORM_LOG_STRING[libraryKeyOrName] ?? libraryKeyOrName;\n  if (variant) {\n    library += `-${variant}`;\n  }\n  const libraryMismatch = library.match(/\\s|\\//);\n  const versionMismatch = version.match(/\\s|\\//);\n  if (libraryMismatch || versionMismatch) {\n    const warning = [\n      `Unable to register library \"${library}\" with version \"${version}\":`\n    ];\n    if (libraryMismatch) {\n      warning.push(\n        `library name \"${library}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    if (libraryMismatch && versionMismatch) {\n      warning.push('and');\n    }\n    if (versionMismatch) {\n      warning.push(\n        `version name \"${version}\" contains illegal characters (whitespace or \"/\")`\n      );\n    }\n    logger.warn(warning.join(' '));\n    return;\n  }\n  _registerComponent(\n    new Component(\n      `${library}-version` as Name,\n      () => ({ library, version }),\n      ComponentType.VERSION\n    )\n  );\n}\n\n/**\n * Sets log handler for all Firebase SDKs.\n * @param logCallback - An optional custom log handler that executes user code whenever\n * the Firebase SDK makes a logging call.\n *\n * @public\n */\nexport function onLog(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  if (logCallback !== null && typeof logCallback !== 'function') {\n    throw ERROR_FACTORY.create(AppError.INVALID_LOG_ARGUMENT);\n  }\n  setUserLogHandler(logCallback, options);\n}\n\n/**\n * Sets log level for all Firebase SDKs.\n *\n * All of the log types above the current log level are captured (i.e. if\n * you set the log level to `info`, errors are logged, but `debug` and\n * `verbose` logs are not).\n *\n * @public\n */\nexport function setLogLevel(logLevel: LogLevelString): void {\n  setLogLevelImpl(logLevel);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ComponentType } from '@firebase/component';\nimport { PlatformLoggerServiceImpl } from './platformLoggerService';\nimport { name, version } from '../package.json';\nimport { _registerComponent } from './internal';\nimport { registerVersion } from './api';\n\nexport function registerCoreComponents(variant?: string): void {\n  _registerComponent(\n    new Component(\n      'platform-logger',\n      container => new PlatformLoggerServiceImpl(container),\n      ComponentType.PRIVATE\n    )\n  );\n\n  // Register `app` package.\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n  // Register platform SDK identifier (no version).\n  registerVersion('fire-js', '');\n}\n","/**\n * Firebase App\n *\n * @remarks This package coordinates the communication between the different Firebase components\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerCoreComponents } from './registerCoreComponents';\n\nexport * from './api';\nexport * from './internal';\nexport * from './public-types';\n\nregisterCoreComponents('__RUNTIME_ENV__');\n",null,"/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  InstantiationMode,\n  InstanceFactory,\n  ComponentType,\n  Dictionary,\n  Name,\n  onInstanceCreatedCallback\n} from './types';\n\n/**\n * Component for service name T, e.g. `auth`, `auth-internal`\n */\nexport class Component<T extends Name = Name> {\n  multipleInstances = false;\n  /**\n   * Properties to be added to the service namespace\n   */\n  serviceProps: Dictionary = {};\n\n  instantiationMode = InstantiationMode.LAZY;\n\n  onInstanceCreated: onInstanceCreatedCallback<T> | null = null;\n\n  /**\n   *\n   * @param name The public service name, e.g. app, auth, firestore, database\n   * @param instanceFactory Service factory responsible for creating the public interface\n   * @param type whether the service provided by the component is public or private\n   */\n  constructor(\n    readonly name: T,\n    readonly instanceFactory: InstanceFactory<T>,\n    readonly type: ComponentType\n  ) {}\n\n  setInstantiationMode(mode: InstantiationMode): this {\n    this.instantiationMode = mode;\n    return this;\n  }\n\n  setMultipleInstances(multipleInstances: boolean): this {\n    this.multipleInstances = multipleInstances;\n    return this;\n  }\n\n  setServiceProps(props: Dictionary): this {\n    this.serviceProps = props;\n    return this;\n  }\n\n  setInstanceCreatedCallback(callback: onInstanceCreatedCallback<T>): this {\n    this.onInstanceCreated = callback;\n    return this;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_ENTRY_NAME = '[DEFAULT]';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\nimport { ComponentContainer } from './component_container';\nimport { DEFAULT_ENTRY_NAME } from './constants';\nimport {\n  InitializeOptions,\n  InstantiationMode,\n  Name,\n  NameServiceMapping,\n  OnInitCallBack\n} from './types';\nimport { Component } from './component';\n\n/**\n * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\n * NameServiceMapping[T] is an alias for the type of the instance\n */\nexport class Provider<T extends Name> {\n  private component: Component<T> | null = null;\n  private readonly instances: Map<string, NameServiceMapping[T]> = new Map();\n  private readonly instancesDeferred: Map<\n    string,\n    Deferred<NameServiceMapping[T]>\n  > = new Map();\n  private readonly instancesOptions: Map<string, Record<string, unknown>> =\n    new Map();\n  private onInitCallbacks: Map<string, Set<OnInitCallBack<T>>> = new Map();\n\n  constructor(\n    private readonly name: T,\n    private readonly container: ComponentContainer\n  ) {}\n\n  /**\n   * @param identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   */\n  get(identifier?: string): Promise<NameServiceMapping[T]> {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n\n    if (!this.instancesDeferred.has(normalizedIdentifier)) {\n      const deferred = new Deferred<NameServiceMapping[T]>();\n      this.instancesDeferred.set(normalizedIdentifier, deferred);\n\n      if (\n        this.isInitialized(normalizedIdentifier) ||\n        this.shouldAutoInitialize()\n      ) {\n        // initialize the service if it can be auto-initialized\n        try {\n          const instance = this.getOrInitializeService({\n            instanceIdentifier: normalizedIdentifier\n          });\n          if (instance) {\n            deferred.resolve(instance);\n          }\n        } catch (e) {\n          // when the instance factory throws an exception during get(), it should not cause\n          // a fatal error. We just return the unresolved promise in this case.\n        }\n      }\n    }\n\n    return this.instancesDeferred.get(normalizedIdentifier)!.promise;\n  }\n\n  /**\n   *\n   * @param options.identifier A provider can provide mulitple instances of a service\n   * if this.component.multipleInstances is true.\n   * @param options.optional If optional is false or not provided, the method throws an error when\n   * the service is not immediately available.\n   * If optional is true, the method returns null if the service is not immediately available.\n   */\n  getImmediate(options: {\n    identifier?: string;\n    optional: true;\n  }): NameServiceMapping[T] | null;\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: false;\n  }): NameServiceMapping[T];\n  getImmediate(options?: {\n    identifier?: string;\n    optional?: boolean;\n  }): NameServiceMapping[T] | null {\n    // if multipleInstances is not supported, use the default name\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      options?.identifier\n    );\n    const optional = options?.optional ?? false;\n\n    if (\n      this.isInitialized(normalizedIdentifier) ||\n      this.shouldAutoInitialize()\n    ) {\n      try {\n        return this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        });\n      } catch (e) {\n        if (optional) {\n          return null;\n        } else {\n          throw e;\n        }\n      }\n    } else {\n      // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\n      if (optional) {\n        return null;\n      } else {\n        throw Error(`Service ${this.name} is not available`);\n      }\n    }\n  }\n\n  getComponent(): Component<T> | null {\n    return this.component;\n  }\n\n  setComponent(component: Component<T>): void {\n    if (component.name !== this.name) {\n      throw Error(\n        `Mismatching Component ${component.name} for Provider ${this.name}.`\n      );\n    }\n\n    if (this.component) {\n      throw Error(`Component for ${this.name} has already been provided`);\n    }\n\n    this.component = component;\n\n    // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\n    if (!this.shouldAutoInitialize()) {\n      return;\n    }\n\n    // if the service is eager, initialize the default instance\n    if (isComponentEager(component)) {\n      try {\n        this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\n      } catch (e) {\n        // when the instance factory for an eager Component throws an exception during the eager\n        // initialization, it should not cause a fatal error.\n        // TODO: Investigate if we need to make it configurable, because some component may want to cause\n        // a fatal error in this case?\n      }\n    }\n\n    // Create service instances for the pending promises and resolve them\n    // NOTE: if this.multipleInstances is false, only the default instance will be created\n    // and all promises with resolve with it regardless of the identifier.\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n\n      try {\n        // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\n        const instance = this.getOrInitializeService({\n          instanceIdentifier: normalizedIdentifier\n        })!;\n        instanceDeferred.resolve(instance);\n      } catch (e) {\n        // when the instance factory throws an exception, it should not cause\n        // a fatal error. We just leave the promise unresolved.\n      }\n    }\n  }\n\n  clearInstance(identifier: string = DEFAULT_ENTRY_NAME): void {\n    this.instancesDeferred.delete(identifier);\n    this.instancesOptions.delete(identifier);\n    this.instances.delete(identifier);\n  }\n\n  // app.delete() will call this method on every provider to delete the services\n  // TODO: should we mark the provider as deleted?\n  async delete(): Promise<void> {\n    const services = Array.from(this.instances.values());\n\n    await Promise.all([\n      ...services\n        .filter(service => 'INTERNAL' in service) // legacy services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any).INTERNAL!.delete()),\n      ...services\n        .filter(service => '_delete' in service) // modularized services\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .map(service => (service as any)._delete())\n    ]);\n  }\n\n  isComponentSet(): boolean {\n    return this.component != null;\n  }\n\n  isInitialized(identifier: string = DEFAULT_ENTRY_NAME): boolean {\n    return this.instances.has(identifier);\n  }\n\n  getOptions(identifier: string = DEFAULT_ENTRY_NAME): Record<string, unknown> {\n    return this.instancesOptions.get(identifier) || {};\n  }\n\n  initialize(opts: InitializeOptions = {}): NameServiceMapping[T] {\n    const { options = {} } = opts;\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(\n      opts.instanceIdentifier\n    );\n    if (this.isInitialized(normalizedIdentifier)) {\n      throw Error(\n        `${this.name}(${normalizedIdentifier}) has already been initialized`\n      );\n    }\n\n    if (!this.isComponentSet()) {\n      throw Error(`Component ${this.name} has not been registered yet`);\n    }\n\n    const instance = this.getOrInitializeService({\n      instanceIdentifier: normalizedIdentifier,\n      options\n    })!;\n\n    // resolve any pending promise waiting for the service instance\n    for (const [\n      instanceIdentifier,\n      instanceDeferred\n    ] of this.instancesDeferred.entries()) {\n      const normalizedDeferredIdentifier =\n        this.normalizeInstanceIdentifier(instanceIdentifier);\n      if (normalizedIdentifier === normalizedDeferredIdentifier) {\n        instanceDeferred.resolve(instance);\n      }\n    }\n\n    return instance;\n  }\n\n  /**\n   *\n   * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\n   * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\n   *\n   * @param identifier An optional instance identifier\n   * @returns a function to unregister the callback\n   */\n  onInit(callback: OnInitCallBack<T>, identifier?: string): () => void {\n    const normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\n    const existingCallbacks =\n      this.onInitCallbacks.get(normalizedIdentifier) ??\n      new Set<OnInitCallBack<T>>();\n    existingCallbacks.add(callback);\n    this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\n\n    const existingInstance = this.instances.get(normalizedIdentifier);\n    if (existingInstance) {\n      callback(existingInstance, normalizedIdentifier);\n    }\n\n    return () => {\n      existingCallbacks.delete(callback);\n    };\n  }\n\n  /**\n   * Invoke onInit callbacks synchronously\n   * @param instance the service instance`\n   */\n  private invokeOnInitCallbacks(\n    instance: NameServiceMapping[T],\n    identifier: string\n  ): void {\n    const callbacks = this.onInitCallbacks.get(identifier);\n    if (!callbacks) {\n      return;\n    }\n    for (const callback of callbacks) {\n      try {\n        callback(instance, identifier);\n      } catch {\n        // ignore errors in the onInit callback\n      }\n    }\n  }\n\n  private getOrInitializeService({\n    instanceIdentifier,\n    options = {}\n  }: {\n    instanceIdentifier: string;\n    options?: Record<string, unknown>;\n  }): NameServiceMapping[T] | null {\n    let instance = this.instances.get(instanceIdentifier);\n    if (!instance && this.component) {\n      instance = this.component.instanceFactory(this.container, {\n        instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\n        options\n      });\n      this.instances.set(instanceIdentifier, instance);\n      this.instancesOptions.set(instanceIdentifier, options);\n\n      /**\n       * Invoke onInit listeners.\n       * Note this.component.onInstanceCreated is different, which is used by the component creator,\n       * while onInit listeners are registered by consumers of the provider.\n       */\n      this.invokeOnInitCallbacks(instance, instanceIdentifier);\n\n      /**\n       * Order is important\n       * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\n       * makes `isInitialized()` return true.\n       */\n      if (this.component.onInstanceCreated) {\n        try {\n          this.component.onInstanceCreated(\n            this.container,\n            instanceIdentifier,\n            instance\n          );\n        } catch {\n          // ignore errors in the onInstanceCreatedCallback\n        }\n      }\n    }\n\n    return instance || null;\n  }\n\n  private normalizeInstanceIdentifier(\n    identifier: string = DEFAULT_ENTRY_NAME\n  ): string {\n    if (this.component) {\n      return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\n    } else {\n      return identifier; // assume multiple instances are supported before the component is provided.\n    }\n  }\n\n  private shouldAutoInitialize(): boolean {\n    return (\n      !!this.component &&\n      this.component.instantiationMode !== InstantiationMode.EXPLICIT\n    );\n  }\n}\n\n// undefined should be passed to the service factory for the default instance\nfunction normalizeIdentifierForFactory(identifier: string): string | undefined {\n  return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\n}\n\nfunction isComponentEager<T extends Name>(component: Component<T>): boolean {\n  return component.instantiationMode === InstantiationMode.EAGER;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from './provider';\nimport { Component } from './component';\nimport { Name } from './types';\n\n/**\n * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\n */\nexport class ComponentContainer {\n  private readonly providers = new Map<string, Provider<Name>>();\n\n  constructor(private readonly name: string) {}\n\n  /**\n   *\n   * @param component Component being added\n   * @param overwrite When a component with the same name has already been registered,\n   * if overwrite is true: overwrite the existing component with the new component and create a new\n   * provider with the new component. It can be useful in tests where you want to use different mocks\n   * for different tests.\n   * if overwrite is false: throw an exception\n   */\n  addComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      throw new Error(\n        `Component ${component.name} has already been registered with ${this.name}`\n      );\n    }\n\n    provider.setComponent(component);\n  }\n\n  addOrOverwriteComponent<T extends Name>(component: Component<T>): void {\n    const provider = this.getProvider(component.name);\n    if (provider.isComponentSet()) {\n      // delete the existing provider from the container, so we can register the new component\n      this.providers.delete(component.name);\n    }\n\n    this.addComponent(component);\n  }\n\n  /**\n   * getProvider provides a type safe interface where it can only be called with a field name\n   * present in NameServiceMapping interface.\n   *\n   * Firebase SDKs providing services should extend NameServiceMapping interface to register\n   * themselves.\n   */\n  getProvider<T extends Name>(name: T): Provider<T> {\n    if (this.providers.has(name)) {\n      return this.providers.get(name) as unknown as Provider<T>;\n    }\n\n    // create a Provider for a service that hasn't registered with Firebase\n    const provider = new Provider<T>(name, this);\n    this.providers.set(name, provider as unknown as Provider<Name>);\n\n    return provider as Provider<T>;\n  }\n\n  getProviders(): Array<Provider<Name>> {\n    return Array.from(this.providers.values());\n  }\n}\n",null,"/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.\n */\n\nexport const CONSTANTS = {\n  /**\n   * @define {boolean} Whether this is the client Node.js SDK.\n   */\n  NODE_CLIENT: false,\n  /**\n   * @define {boolean} Whether this is the Admin Node.js SDK.\n   */\n  NODE_ADMIN: false,\n\n  /**\n   * Firebase SDK Version\n   */\n  SDK_VERSION: '${JSCORE_VERSION}'\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Throws an error if the provided assertion is falsy\n */\nexport const assert = function (assertion: unknown, message: string): void {\n  if (!assertion) {\n    throw assertionError(message);\n  }\n};\n\n/**\n * Returns an Error object suitable for throwing.\n */\nexport const assertionError = function (message: string): Error {\n  return new Error(\n    'Firebase Database (' +\n      CONSTANTS.SDK_VERSION +\n      ') INTERNAL ASSERT FAILED: ' +\n      message\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst stringToByteArray = function (str: string): number[] {\n  // TODO(user): Use native implementations if/when available\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (\n      (c & 0xfc00) === 0xd800 &&\n      i + 1 < str.length &&\n      (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00\n    ) {\n      // Surrogate Pair\n      c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Turns an array of numbers into the string given by the concatenation of the\n * characters to which the numbers correspond.\n * @param bytes Array of numbers representing characters.\n * @return Stringification of the array.\n */\nconst byteArrayToString = function (bytes: number[]): string {\n  // TODO(user): Use native implementations if/when available\n  const out: string[] = [];\n  let pos = 0,\n    c = 0;\n  while (pos < bytes.length) {\n    const c1 = bytes[pos++];\n    if (c1 < 128) {\n      out[c++] = String.fromCharCode(c1);\n    } else if (c1 > 191 && c1 < 224) {\n      const c2 = bytes[pos++];\n      out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n    } else if (c1 > 239 && c1 < 365) {\n      // Surrogate Pair\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      const c4 = bytes[pos++];\n      const u =\n        (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n        0x10000;\n      out[c++] = String.fromCharCode(0xd800 + (u >> 10));\n      out[c++] = String.fromCharCode(0xdc00 + (u & 1023));\n    } else {\n      const c2 = bytes[pos++];\n      const c3 = bytes[pos++];\n      out[c++] = String.fromCharCode(\n        ((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63)\n      );\n    }\n  }\n  return out.join('');\n};\n\ninterface Base64 {\n  byteToCharMap_: { [key: number]: string } | null;\n  charToByteMap_: { [key: string]: number } | null;\n  byteToCharMapWebSafe_: { [key: number]: string } | null;\n  charToByteMapWebSafe_: { [key: string]: number } | null;\n  ENCODED_VALS_BASE: string;\n  readonly ENCODED_VALS: string;\n  readonly ENCODED_VALS_WEBSAFE: string;\n  HAS_NATIVE_SUPPORT: boolean;\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string;\n  encodeString(input: string, webSafe?: boolean): string;\n  decodeString(input: string, webSafe: boolean): string;\n  decodeStringToByteArray(input: string, webSafe: boolean): number[];\n  init_(): void;\n}\n\n// We define it as an object literal instead of a class because a class compiled down to es5 can't\n// be treeshaked. https://github.com/rollup/rollup/issues/1691\n// Static lookup maps, lazily populated by init_()\nexport const base64: Base64 = {\n  /**\n   * Maps bytes to characters.\n   */\n  byteToCharMap_: null,\n\n  /**\n   * Maps characters to bytes.\n   */\n  charToByteMap_: null,\n\n  /**\n   * Maps bytes to websafe characters.\n   * @private\n   */\n  byteToCharMapWebSafe_: null,\n\n  /**\n   * Maps websafe characters to bytes.\n   * @private\n   */\n  charToByteMapWebSafe_: null,\n\n  /**\n   * Our default alphabet, shared between\n   * ENCODED_VALS and ENCODED_VALS_WEBSAFE\n   */\n  ENCODED_VALS_BASE:\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',\n\n  /**\n   * Our default alphabet. Value 64 (=) is special; it means \"nothing.\"\n   */\n  get ENCODED_VALS() {\n    return this.ENCODED_VALS_BASE + '+/=';\n  },\n\n  /**\n   * Our websafe alphabet.\n   */\n  get ENCODED_VALS_WEBSAFE() {\n    return this.ENCODED_VALS_BASE + '-_.';\n  },\n\n  /**\n   * Whether this browser supports the atob and btoa functions. This extension\n   * started at Mozilla but is now implemented by many browsers. We use the\n   * ASSUME_* variables to avoid pulling in the full useragent detection library\n   * but still allowing the standard per-browser compilations.\n   *\n   */\n  HAS_NATIVE_SUPPORT: typeof atob === 'function',\n\n  /**\n   * Base64-encode an array of bytes.\n   *\n   * @param input An array of bytes (numbers with\n   *     value in [0, 255]) to encode.\n   * @param webSafe Boolean indicating we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeByteArray(input: number[] | Uint8Array, webSafe?: boolean): string {\n    if (!Array.isArray(input)) {\n      throw Error('encodeByteArray takes an array as a parameter');\n    }\n\n    this.init_();\n\n    const byteToCharMap = webSafe\n      ? this.byteToCharMapWebSafe_!\n      : this.byteToCharMap_!;\n\n    const output = [];\n\n    for (let i = 0; i < input.length; i += 3) {\n      const byte1 = input[i];\n      const haveByte2 = i + 1 < input.length;\n      const byte2 = haveByte2 ? input[i + 1] : 0;\n      const haveByte3 = i + 2 < input.length;\n      const byte3 = haveByte3 ? input[i + 2] : 0;\n\n      const outByte1 = byte1 >> 2;\n      const outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);\n      let outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);\n      let outByte4 = byte3 & 0x3f;\n\n      if (!haveByte3) {\n        outByte4 = 64;\n\n        if (!haveByte2) {\n          outByte3 = 64;\n        }\n      }\n\n      output.push(\n        byteToCharMap[outByte1],\n        byteToCharMap[outByte2],\n        byteToCharMap[outByte3],\n        byteToCharMap[outByte4]\n      );\n    }\n\n    return output.join('');\n  },\n\n  /**\n   * Base64-encode a string.\n   *\n   * @param input A string to encode.\n   * @param webSafe If true, we should use the\n   *     alternative alphabet.\n   * @return The base64 encoded string.\n   */\n  encodeString(input: string, webSafe?: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return btoa(input);\n    }\n    return this.encodeByteArray(stringToByteArray(input), webSafe);\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * @param input to decode.\n   * @param webSafe True if we should use the\n   *     alternative alphabet.\n   * @return string representing the decoded value.\n   */\n  decodeString(input: string, webSafe: boolean): string {\n    // Shortcut for Mozilla browsers that implement\n    // a native base64 encoder in the form of \"btoa/atob\"\n    if (this.HAS_NATIVE_SUPPORT && !webSafe) {\n      return atob(input);\n    }\n    return byteArrayToString(this.decodeStringToByteArray(input, webSafe));\n  },\n\n  /**\n   * Base64-decode a string.\n   *\n   * In base-64 decoding, groups of four characters are converted into three\n   * bytes.  If the encoder did not apply padding, the input length may not\n   * be a multiple of 4.\n   *\n   * In this case, the last group will have fewer than 4 characters, and\n   * padding will be inferred.  If the group has one or two characters, it decodes\n   * to one byte.  If the group has three characters, it decodes to two bytes.\n   *\n   * @param input Input to decode.\n   * @param webSafe True if we should use the web-safe alphabet.\n   * @return bytes representing the decoded value.\n   */\n  decodeStringToByteArray(input: string, webSafe: boolean): number[] {\n    this.init_();\n\n    const charToByteMap = webSafe\n      ? this.charToByteMapWebSafe_!\n      : this.charToByteMap_!;\n\n    const output: number[] = [];\n\n    for (let i = 0; i < input.length; ) {\n      const byte1 = charToByteMap[input.charAt(i++)];\n\n      const haveByte2 = i < input.length;\n      const byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;\n      ++i;\n\n      const haveByte3 = i < input.length;\n      const byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      const haveByte4 = i < input.length;\n      const byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;\n      ++i;\n\n      if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {\n        throw Error();\n      }\n\n      const outByte1 = (byte1 << 2) | (byte2 >> 4);\n      output.push(outByte1);\n\n      if (byte3 !== 64) {\n        const outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);\n        output.push(outByte2);\n\n        if (byte4 !== 64) {\n          const outByte3 = ((byte3 << 6) & 0xc0) | byte4;\n          output.push(outByte3);\n        }\n      }\n    }\n\n    return output;\n  },\n\n  /**\n   * Lazy static initialization function. Called before\n   * accessing any of the static map variables.\n   * @private\n   */\n  init_() {\n    if (!this.byteToCharMap_) {\n      this.byteToCharMap_ = {};\n      this.charToByteMap_ = {};\n      this.byteToCharMapWebSafe_ = {};\n      this.charToByteMapWebSafe_ = {};\n\n      // We want quick mappings back and forth, so we precompute two maps.\n      for (let i = 0; i < this.ENCODED_VALS.length; i++) {\n        this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);\n        this.charToByteMap_[this.byteToCharMap_[i]] = i;\n        this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);\n        this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;\n\n        // Be forgiving when decoding and correctly decode both encodings.\n        if (i >= this.ENCODED_VALS_BASE.length) {\n          this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;\n          this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;\n        }\n      }\n    }\n  }\n};\n\n/**\n * URL-safe base64 encoding\n */\nexport const base64Encode = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  return base64.encodeByteArray(utf8Bytes, true);\n};\n\n/**\n * URL-safe base64 encoding (without \".\" padding in the end).\n * e.g. Used in JSON Web Token (JWT) parts.\n */\nexport const base64urlEncodeWithoutPadding = function (str: string): string {\n  // Use base64url encoding and remove padding in the end (dot characters).\n  return base64Encode(str).replace(/\\./g, '');\n};\n\n/**\n * URL-safe base64 decoding\n *\n * NOTE: DO NOT use the global atob() function - it does NOT support the\n * base64Url variant encoding.\n *\n * @param str To be decoded\n * @return Decoded result, if possible\n */\nexport const base64Decode = function (str: string): string | null {\n  try {\n    return base64.decodeString(str, true);\n  } catch (e) {\n    console.error('base64Decode failed: ', e);\n  }\n  return null;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Do a deep-copy of basic JavaScript Objects or Arrays.\n */\nexport function deepCopy<T>(value: T): T {\n  return deepExtend(undefined, value) as T;\n}\n\n/**\n * Copy properties from source to target (recursively allows extension\n * of Objects and Arrays).  Scalar values in the target are over-written.\n * If target is undefined, an object of the appropriate type will be created\n * (and returned).\n *\n * We recursively copy all child properties of plain Objects in the source- so\n * that namespace- like dictionaries are merged.\n *\n * Note that the target can be a function, in which case the properties in\n * the source Object are copied onto it as static properties of the Function.\n *\n * Note: we don't merge __proto__ to prevent prototype pollution\n */\nexport function deepExtend(target: unknown, source: unknown): unknown {\n  if (!(source instanceof Object)) {\n    return source;\n  }\n\n  switch (source.constructor) {\n    case Date:\n      // Treat Dates like scalars; if the target date object had any child\n      // properties - they will be lost!\n      const dateValue = source as Date;\n      return new Date(dateValue.getTime());\n\n    case Object:\n      if (target === undefined) {\n        target = {};\n      }\n      break;\n    case Array:\n      // Always copy the array source and overwrite the target.\n      target = [];\n      break;\n\n    default:\n      // Not a plain Object - treat it as a scalar.\n      return source;\n  }\n\n  for (const prop in source) {\n    // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202\n    if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {\n      continue;\n    }\n    (target as Record<string, unknown>)[prop] = deepExtend(\n      (target as Record<string, unknown>)[prop],\n      (source as Record<string, unknown>)[prop]\n    );\n  }\n\n  return target;\n}\n\nfunction isValidKey(key: string): boolean {\n  return key !== '__proto__';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class Deferred<R> {\n  promise: Promise<R>;\n  reject: (value?: unknown) => void = () => {};\n  resolve: (value?: unknown) => void = () => {};\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve as (value?: unknown) => void;\n      this.reject = reject as (value?: unknown) => void;\n    });\n  }\n\n  /**\n   * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around\n   * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback\n   * and returns a node-style callback which will resolve or reject the Deferred's promise.\n   */\n  wrapCallback(\n    callback?: (error?: unknown, value?: unknown) => void\n  ): (error: unknown, value?: unknown) => void {\n    return (error, value?) => {\n      if (error) {\n        this.reject(error);\n      } else {\n        this.resolve(value);\n      }\n      if (typeof callback === 'function') {\n        // Attaching noop handler just in case developer wasn't expecting\n        // promises\n        this.promise.catch(() => {});\n\n        // Some of our callbacks don't expect a value and our own tests\n        // assert that the parameter length is 1\n        if (callback.length === 1) {\n          callback(error);\n        } else {\n          callback(error, value);\n        }\n      }\n    };\n  }\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64urlEncodeWithoutPadding } from './crypt';\n\n// Firebase Auth tokens contain snake_case claims following the JWT standard / convention.\n/* eslint-disable camelcase */\n\nexport type FirebaseSignInProvider =\n  | 'custom'\n  | 'email'\n  | 'password'\n  | 'phone'\n  | 'anonymous'\n  | 'google.com'\n  | 'facebook.com'\n  | 'github.com'\n  | 'twitter.com'\n  | 'microsoft.com'\n  | 'apple.com';\n\ninterface FirebaseIdToken {\n  // Always set to https://securetoken.google.com/PROJECT_ID\n  iss: string;\n\n  // Always set to PROJECT_ID\n  aud: string;\n\n  // The user's unique ID\n  sub: string;\n\n  // The token issue time, in seconds since epoch\n  iat: number;\n\n  // The token expiry time, normally 'iat' + 3600\n  exp: number;\n\n  // The user's unique ID. Must be equal to 'sub'\n  user_id: string;\n\n  // The time the user authenticated, normally 'iat'\n  auth_time: number;\n\n  // The sign in provider, only set when the provider is 'anonymous'\n  provider_id?: 'anonymous';\n\n  // The user's primary email\n  email?: string;\n\n  // The user's email verification status\n  email_verified?: boolean;\n\n  // The user's primary phone number\n  phone_number?: string;\n\n  // The user's display name\n  name?: string;\n\n  // The user's profile photo URL\n  picture?: string;\n\n  // Information on all identities linked to this user\n  firebase: {\n    // The primary sign-in provider\n    sign_in_provider: FirebaseSignInProvider;\n\n    // A map of providers to the user's list of unique identifiers from\n    // each provider\n    identities?: { [provider in FirebaseSignInProvider]?: string[] };\n  };\n\n  // Custom claims set by the developer\n  [claim: string]: unknown;\n\n  uid?: never; // Try to catch a common mistake of \"uid\" (should be \"sub\" instead).\n}\n\nexport type EmulatorMockTokenOptions = ({ user_id: string } | { sub: string }) &\n  Partial<FirebaseIdToken>;\n\nexport function createMockUserToken(\n  token: EmulatorMockTokenOptions,\n  projectId?: string\n): string {\n  if (token.uid) {\n    throw new Error(\n      'The \"uid\" field is no longer supported by mockUserToken. Please use \"sub\" instead for Firebase Auth User ID.'\n    );\n  }\n  // Unsecured JWTs use \"none\" as the algorithm.\n  const header = {\n    alg: 'none',\n    type: 'JWT'\n  };\n\n  const project = projectId || 'demo-project';\n  const iat = token.iat || 0;\n  const sub = token.sub || token.user_id;\n  if (!sub) {\n    throw new Error(\"mockUserToken must contain 'sub' or 'user_id' field!\");\n  }\n\n  const payload: FirebaseIdToken = {\n    // Set all required fields to decent defaults\n    iss: `https://securetoken.google.com/${project}`,\n    aud: project,\n    iat,\n    exp: iat + 3600,\n    auth_time: iat,\n    sub,\n    user_id: sub,\n    firebase: {\n      sign_in_provider: 'custom',\n      identities: {}\n    },\n\n    // Override with user options\n    ...token\n  };\n\n  // Unsecured JWTs use the empty string as a signature.\n  const signature = '';\n  return [\n    base64urlEncodeWithoutPadding(JSON.stringify(header)),\n    base64urlEncodeWithoutPadding(JSON.stringify(payload)),\n    signature\n  ].join('.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSTANTS } from './constants';\n\n/**\n * Returns navigator.userAgent string or '' if it's not defined.\n * @return user agent string\n */\nexport function getUA(): string {\n  if (\n    typeof navigator !== 'undefined' &&\n    typeof navigator['userAgent'] === 'string'\n  ) {\n    return navigator['userAgent'];\n  } else {\n    return '';\n  }\n}\n\n/**\n * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.\n *\n * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap\n * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally\n * wait for a callback.\n */\nexport function isMobileCordova(): boolean {\n  return (\n    typeof window !== 'undefined' &&\n    // @ts-ignore Setting up an broadly applicable index signature for Window\n    // just to deal with this case would probably be a bad idea.\n    !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&\n    /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA())\n  );\n}\n\n/**\n * Detect Node.js.\n *\n * @return true if Node.js environment is detected.\n */\n// Node detection logic from: https://github.com/iliakan/detect-node/\nexport function isNode(): boolean {\n  try {\n    return (\n      Object.prototype.toString.call(global.process) === '[object process]'\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Detect Browser Environment\n */\nexport function isBrowser(): boolean {\n  return typeof self === 'object' && self.self === self;\n}\n\n/**\n * Detect browser extensions (Chrome and Firefox at least).\n */\ninterface BrowserRuntime {\n  id?: unknown;\n}\ndeclare const chrome: { runtime?: BrowserRuntime };\ndeclare const browser: { runtime?: BrowserRuntime };\nexport function isBrowserExtension(): boolean {\n  const runtime =\n    typeof chrome === 'object'\n      ? chrome.runtime\n      : typeof browser === 'object'\n      ? browser.runtime\n      : undefined;\n  return typeof runtime === 'object' && runtime.id !== undefined;\n}\n\n/**\n * Detect React Native.\n *\n * @return true if ReactNative environment is detected.\n */\nexport function isReactNative(): boolean {\n  return (\n    typeof navigator === 'object' && navigator['product'] === 'ReactNative'\n  );\n}\n\n/** Detects Electron apps. */\nexport function isElectron(): boolean {\n  return getUA().indexOf('Electron/') >= 0;\n}\n\n/** Detects Internet Explorer. */\nexport function isIE(): boolean {\n  const ua = getUA();\n  return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n}\n\n/** Detects Universal Windows Platform apps. */\nexport function isUWP(): boolean {\n  return getUA().indexOf('MSAppHost/') >= 0;\n}\n\n/**\n * Detect whether the current SDK build is the Node version.\n *\n * @return true if it's the Node SDK build.\n */\nexport function isNodeSdk(): boolean {\n  return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;\n}\n\n/** Returns true if we are running in Safari. */\nexport function isSafari(): boolean {\n  return (\n    !isNode() &&\n    navigator.userAgent.includes('Safari') &&\n    !navigator.userAgent.includes('Chrome')\n  );\n}\n\n/**\n * This method checks if indexedDB is supported by current browser/service worker context\n * @return true if indexedDB is supported by current browser/service worker context\n */\nexport function isIndexedDBAvailable(): boolean {\n  return typeof indexedDB === 'object';\n}\n\n/**\n * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject\n * if errors occur during the database open operation.\n *\n * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox\n * private browsing)\n */\nexport function validateIndexedDBOpenable(): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      let preExist: boolean = true;\n      const DB_CHECK_NAME =\n        'validate-browser-context-for-indexeddb-analytics-module';\n      const request = self.indexedDB.open(DB_CHECK_NAME);\n      request.onsuccess = () => {\n        request.result.close();\n        // delete database only when it doesn't pre-exist\n        if (!preExist) {\n          self.indexedDB.deleteDatabase(DB_CHECK_NAME);\n        }\n        resolve(true);\n      };\n      request.onupgradeneeded = () => {\n        preExist = false;\n      };\n\n      request.onerror = () => {\n        reject(request.error?.message || '');\n      };\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\n/**\n *\n * This method checks whether cookie is enabled within current browser\n * @return true if cookie is enabled within current browser\n */\nexport function areCookiesEnabled(): boolean {\n  if (typeof navigator === 'undefined' || !navigator.cookieEnabled) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Polyfill for `globalThis` object.\n * @returns the `globalThis` object for the given environment.\n */\nexport function getGlobal(): typeof globalThis {\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('Unable to locate global object.');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Standardized Firebase Error.\n *\n * Usage:\n *\n *   // Typescript string literals for type-safe codes\n *   type Err =\n *     'unknown' |\n *     'object-not-found'\n *     ;\n *\n *   // Closure enum for type-safe error codes\n *   // at-enum {string}\n *   var Err = {\n *     UNKNOWN: 'unknown',\n *     OBJECT_NOT_FOUND: 'object-not-found',\n *   }\n *\n *   let errors: Map<Err, string> = {\n *     'generic-error': \"Unknown error\",\n *     'file-not-found': \"Could not find file: {$file}\",\n *   };\n *\n *   // Type-safe function - must pass a valid error code as param.\n *   let error = new ErrorFactory<Err>('service', 'Service', errors);\n *\n *   ...\n *   throw error.create(Err.GENERIC);\n *   ...\n *   throw error.create(Err.FILE_NOT_FOUND, {'file': fileName});\n *   ...\n *   // Service: Could not file file: foo.txt (service/file-not-found).\n *\n *   catch (e) {\n *     assert(e.message === \"Could not find file: foo.txt.\");\n *     if (e.code === 'service/file-not-found') {\n *       console.log(\"Could not read file: \" + e['file']);\n *     }\n *   }\n */\n\nexport type ErrorMap<ErrorCode extends string> = {\n  readonly [K in ErrorCode]: string;\n};\n\nconst ERROR_NAME = 'FirebaseError';\n\nexport interface StringLike {\n  toString(): string;\n}\n\nexport interface ErrorData {\n  [key: string]: unknown;\n}\n\n// Based on code from:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types\nexport class FirebaseError extends Error {\n  readonly name = ERROR_NAME;\n\n  constructor(\n    readonly code: string,\n    message: string,\n    public customData?: Record<string, unknown>\n  ) {\n    super(message);\n\n    // Fix For ES5\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, FirebaseError.prototype);\n\n    // Maintains proper stack trace for where our error was thrown.\n    // Only available on V8.\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ErrorFactory.prototype.create);\n    }\n  }\n}\n\nexport class ErrorFactory<\n  ErrorCode extends string,\n  ErrorParams extends { readonly [K in ErrorCode]?: ErrorData } = {}\n> {\n  constructor(\n    private readonly service: string,\n    private readonly serviceName: string,\n    private readonly errors: ErrorMap<ErrorCode>\n  ) {}\n\n  create<K extends ErrorCode>(\n    code: K,\n    ...data: K extends keyof ErrorParams ? [ErrorParams[K]] : []\n  ): FirebaseError {\n    const customData = (data[0] as ErrorData) || {};\n    const fullCode = `${this.service}/${code}`;\n    const template = this.errors[code];\n\n    const message = template ? replaceTemplate(template, customData) : 'Error';\n    // Service Name: Error message (service/code).\n    const fullMessage = `${this.serviceName}: ${message} (${fullCode}).`;\n\n    const error = new FirebaseError(fullCode, fullMessage, customData);\n\n    return error;\n  }\n}\n\nfunction replaceTemplate(template: string, data: ErrorData): string {\n  return template.replace(PATTERN, (_, key) => {\n    const value = data[key];\n    return value != null ? String(value) : `<${key}?>`;\n  });\n}\n\nconst PATTERN = /\\{\\$([^}]+)}/g;\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Evaluates a JSON string into a javascript object.\n *\n * @param {string} str A string containing JSON.\n * @return {*} The javascript object representing the specified JSON.\n */\nexport function jsonEval(str: string): unknown {\n  return JSON.parse(str);\n}\n\n/**\n * Returns JSON representing a javascript object.\n * @param {*} data Javascript object to be stringified.\n * @return {string} The JSON contents of the object.\n */\nexport function stringify(data: unknown): string {\n  return JSON.stringify(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Decode } from './crypt';\nimport { jsonEval } from './json';\n\ninterface Claims {\n  [key: string]: {};\n}\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token into constituent parts.\n *\n * Notes:\n * - May return with invalid / incomplete claims if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const decode = function (token: string): DecodedToken {\n  let header = {},\n    claims: Claims = {},\n    data = {},\n    signature = '';\n\n  try {\n    const parts = token.split('.');\n    header = jsonEval(base64Decode(parts[0]) || '') as object;\n    claims = jsonEval(base64Decode(parts[1]) || '') as Claims;\n    signature = parts[2];\n    data = claims['d'] || {};\n    delete claims['d'];\n  } catch (e) {}\n\n  return {\n    header,\n    claims,\n    data,\n    signature\n  };\n};\n\ninterface DecodedToken {\n  header: object;\n  claims: Claims;\n  data: object;\n  signature: string;\n}\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the\n * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidTimestamp = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  const now: number = Math.floor(new Date().getTime() / 1000);\n  let validSince: number = 0,\n    validUntil: number = 0;\n\n  if (typeof claims === 'object') {\n    if (claims.hasOwnProperty('nbf')) {\n      validSince = claims['nbf'] as number;\n    } else if (claims.hasOwnProperty('iat')) {\n      validSince = claims['iat'] as number;\n    }\n\n    if (claims.hasOwnProperty('exp')) {\n      validUntil = claims['exp'] as number;\n    } else {\n      // token will expire after 24h by default\n      validUntil = validSince + 86400;\n    }\n  }\n\n  return (\n    !!now &&\n    !!validSince &&\n    !!validUntil &&\n    now >= validSince &&\n    now <= validUntil\n  );\n};\n\n/**\n * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.\n *\n * Notes:\n * - May return null if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const issuedAtTime = function (token: string): number | null {\n  const claims: Claims = decode(token).claims;\n  if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {\n    return claims['iat'] as number;\n  }\n  return null;\n};\n\n/**\n * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isValidFormat = function (token: string): boolean {\n  const decoded = decode(token),\n    claims = decoded.claims;\n\n  return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');\n};\n\n/**\n * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.\n *\n * Notes:\n * - May return a false negative if there's no native base64 decoding support.\n * - Doesn't check if the token is actually valid.\n */\nexport const isAdmin = function (token: string): boolean {\n  const claims: Claims = decode(token).claims;\n  return typeof claims === 'object' && claims['admin'] === true;\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function contains<T extends object>(obj: T, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function safeGet<T extends object, K extends keyof T>(\n  obj: T,\n  key: K\n): T[K] | undefined {\n  if (Object.prototype.hasOwnProperty.call(obj, key)) {\n    return obj[key];\n  } else {\n    return undefined;\n  }\n}\n\nexport function isEmpty(obj: object): obj is {} {\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function map<K extends string, V, U>(\n  obj: { [key in K]: V },\n  fn: (value: V, key: K, obj: { [key in K]: V }) => U,\n  contextObj?: unknown\n): { [key in K]: U } {\n  const res: Partial<{ [key in K]: U }> = {};\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      res[key] = fn.call(contextObj, obj[key], key, obj);\n    }\n  }\n  return res as { [key in K]: U };\n}\n\n/**\n * Deep equal two objects. Support Arrays and Objects.\n */\nexport function deepEqual(a: object, b: object): boolean {\n  if (a === b) {\n    return true;\n  }\n\n  const aKeys = Object.keys(a);\n  const bKeys = Object.keys(b);\n  for (const k of aKeys) {\n    if (!bKeys.includes(k)) {\n      return false;\n    }\n\n    const aProp = (a as Record<string, unknown>)[k];\n    const bProp = (b as Record<string, unknown>)[k];\n    if (isObject(aProp) && isObject(bProp)) {\n      if (!deepEqual(aProp, bProp)) {\n        return false;\n      }\n    } else if (aProp !== bProp) {\n      return false;\n    }\n  }\n\n  for (const k of bKeys) {\n    if (!aKeys.includes(k)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isObject(thing: unknown): thing is object {\n  return thing !== null && typeof thing === 'object';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a\n * params object (e.g. {arg: 'val', arg2: 'val2'})\n * Note: You must prepend it with ? when adding it to a URL.\n */\nexport function querystring(querystringParams: {\n  [key: string]: string | number;\n}): string {\n  const params = [];\n  for (const [key, value] of Object.entries(querystringParams)) {\n    if (Array.isArray(value)) {\n      value.forEach(arrayVal => {\n        params.push(\n          encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal)\n        );\n      });\n    } else {\n      params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    }\n  }\n  return params.length ? '&' + params.join('&') : '';\n}\n\n/**\n * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object\n * (e.g. {arg: 'val', arg2: 'val2'})\n */\nexport function querystringDecode(querystring: string): Record<string, string> {\n  const obj: Record<string, string> = {};\n  const tokens = querystring.replace(/^\\?/, '').split('&');\n\n  tokens.forEach(token => {\n    if (token) {\n      const [key, value] = token.split('=');\n      obj[decodeURIComponent(key)] = decodeURIComponent(value);\n    }\n  });\n  return obj;\n}\n\n/**\n * Extract the query string part of a URL, including the leading question mark (if present).\n */\nexport function extractQuerystring(url: string): string {\n  const queryStart = url.indexOf('?');\n  if (!queryStart) {\n    return '';\n  }\n  const fragmentStart = url.indexOf('#', queryStart);\n  return url.substring(\n    queryStart,\n    fragmentStart > 0 ? fragmentStart : undefined\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview SHA-1 cryptographic hash.\n * Variable names follow the notation in FIPS PUB 180-3:\n * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.\n *\n * Usage:\n *   var sha1 = new sha1();\n *   sha1.update(bytes);\n *   var hash = sha1.digest();\n *\n * Performance:\n *   Chrome 23:   ~400 Mbit/s\n *   Firefox 16:  ~250 Mbit/s\n *\n */\n\n/**\n * SHA-1 cryptographic hash constructor.\n *\n * The properties declared here are discussed in the above algorithm document.\n * @constructor\n * @final\n * @struct\n */\nexport class Sha1 {\n  /**\n   * Holds the previous values of accumulated variables a-e in the compress_\n   * function.\n   * @private\n   */\n  private chain_: number[] = [];\n\n  /**\n   * A buffer holding the partially computed hash result.\n   * @private\n   */\n  private buf_: number[] = [];\n\n  /**\n   * An array of 80 bytes, each a part of the message to be hashed.  Referred to\n   * as the message schedule in the docs.\n   * @private\n   */\n  private W_: number[] = [];\n\n  /**\n   * Contains data needed to pad messages less than 64 bytes.\n   * @private\n   */\n  private pad_: number[] = [];\n\n  /**\n   * @private {number}\n   */\n  private inbuf_: number = 0;\n\n  /**\n   * @private {number}\n   */\n  private total_: number = 0;\n\n  blockSize: number;\n\n  constructor() {\n    this.blockSize = 512 / 8;\n\n    this.pad_[0] = 128;\n    for (let i = 1; i < this.blockSize; ++i) {\n      this.pad_[i] = 0;\n    }\n\n    this.reset();\n  }\n\n  reset(): void {\n    this.chain_[0] = 0x67452301;\n    this.chain_[1] = 0xefcdab89;\n    this.chain_[2] = 0x98badcfe;\n    this.chain_[3] = 0x10325476;\n    this.chain_[4] = 0xc3d2e1f0;\n\n    this.inbuf_ = 0;\n    this.total_ = 0;\n  }\n\n  /**\n   * Internal compress helper function.\n   * @param buf Block to compress.\n   * @param offset Offset of the block in the buffer.\n   * @private\n   */\n  compress_(buf: number[] | Uint8Array | string, offset?: number): void {\n    if (!offset) {\n      offset = 0;\n    }\n\n    const W = this.W_;\n\n    // get 16 big endian words\n    if (typeof buf === 'string') {\n      for (let i = 0; i < 16; i++) {\n        // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS\n        // have a bug that turns the post-increment ++ operator into pre-increment\n        // during JIT compilation.  We have code that depends heavily on SHA-1 for\n        // correctness and which is affected by this bug, so I've removed all uses\n        // of post-increment ++ in which the result value is used.  We can revert\n        // this change once the Safari bug\n        // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and\n        // most clients have been updated.\n        W[i] =\n          (buf.charCodeAt(offset) << 24) |\n          (buf.charCodeAt(offset + 1) << 16) |\n          (buf.charCodeAt(offset + 2) << 8) |\n          buf.charCodeAt(offset + 3);\n        offset += 4;\n      }\n    } else {\n      for (let i = 0; i < 16; i++) {\n        W[i] =\n          (buf[offset] << 24) |\n          (buf[offset + 1] << 16) |\n          (buf[offset + 2] << 8) |\n          buf[offset + 3];\n        offset += 4;\n      }\n    }\n\n    // expand to 80 words\n    for (let i = 16; i < 80; i++) {\n      const t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n      W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;\n    }\n\n    let a = this.chain_[0];\n    let b = this.chain_[1];\n    let c = this.chain_[2];\n    let d = this.chain_[3];\n    let e = this.chain_[4];\n    let f, k;\n\n    // TODO(user): Try to unroll this loop to speed up the computation.\n    for (let i = 0; i < 80; i++) {\n      if (i < 40) {\n        if (i < 20) {\n          f = d ^ (b & (c ^ d));\n          k = 0x5a827999;\n        } else {\n          f = b ^ c ^ d;\n          k = 0x6ed9eba1;\n        }\n      } else {\n        if (i < 60) {\n          f = (b & c) | (d & (b | c));\n          k = 0x8f1bbcdc;\n        } else {\n          f = b ^ c ^ d;\n          k = 0xca62c1d6;\n        }\n      }\n\n      const t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;\n      e = d;\n      d = c;\n      c = ((b << 30) | (b >>> 2)) & 0xffffffff;\n      b = a;\n      a = t;\n    }\n\n    this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;\n    this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;\n    this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;\n    this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;\n    this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;\n  }\n\n  update(bytes?: number[] | Uint8Array | string, length?: number): void {\n    // TODO(johnlenz): tighten the function signature and remove this check\n    if (bytes == null) {\n      return;\n    }\n\n    if (length === undefined) {\n      length = bytes.length;\n    }\n\n    const lengthMinusBlock = length - this.blockSize;\n    let n = 0;\n    // Using local instead of member variables gives ~5% speedup on Firefox 16.\n    const buf = this.buf_;\n    let inbuf = this.inbuf_;\n\n    // The outer while loop should execute at most twice.\n    while (n < length) {\n      // When we have no data in the block to top up, we can directly process the\n      // input buffer (assuming it contains sufficient data). This gives ~25%\n      // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that\n      // the data is provided in large chunks (or in multiples of 64 bytes).\n      if (inbuf === 0) {\n        while (n <= lengthMinusBlock) {\n          this.compress_(bytes, n);\n          n += this.blockSize;\n        }\n      }\n\n      if (typeof bytes === 'string') {\n        while (n < length) {\n          buf[inbuf] = bytes.charCodeAt(n);\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      } else {\n        while (n < length) {\n          buf[inbuf] = bytes[n];\n          ++inbuf;\n          ++n;\n          if (inbuf === this.blockSize) {\n            this.compress_(buf);\n            inbuf = 0;\n            // Jump to the outer loop so we use the full-block optimization.\n            break;\n          }\n        }\n      }\n    }\n\n    this.inbuf_ = inbuf;\n    this.total_ += length;\n  }\n\n  /** @override */\n  digest(): number[] {\n    const digest: number[] = [];\n    let totalBits = this.total_ * 8;\n\n    // Add pad 0x80 0x00*.\n    if (this.inbuf_ < 56) {\n      this.update(this.pad_, 56 - this.inbuf_);\n    } else {\n      this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));\n    }\n\n    // Add # bits.\n    for (let i = this.blockSize - 1; i >= 56; i--) {\n      this.buf_[i] = totalBits & 255;\n      totalBits /= 256; // Don't use bit-shifting here!\n    }\n\n    this.compress_(this.buf_);\n\n    let n = 0;\n    for (let i = 0; i < 5; i++) {\n      for (let j = 24; j >= 0; j -= 8) {\n        digest[n] = (this.chain_[i] >> j) & 255;\n        ++n;\n      }\n    }\n    return digest;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport type NextFn<T> = (value: T) => void;\nexport type ErrorFn = (error: Error) => void;\nexport type CompleteFn = () => void;\n\nexport interface Observer<T> {\n  // Called once for each value in a stream of values.\n  next: NextFn<T>;\n\n  // A stream terminates by a single call to EITHER error() or complete().\n  error: ErrorFn;\n\n  // No events will be sent to next() once complete() is called.\n  complete: CompleteFn;\n}\n\nexport type PartialObserver<T> = Partial<Observer<T>>;\n\n// TODO: Support also Unsubscribe.unsubscribe?\nexport type Unsubscribe = () => void;\n\n/**\n * The Subscribe interface has two forms - passing the inline function\n * callbacks, or a object interface with callback properties.\n */\nexport interface Subscribe<T> {\n  (next?: NextFn<T>, error?: ErrorFn, complete?: CompleteFn): Unsubscribe;\n  (observer: PartialObserver<T>): Unsubscribe;\n}\n\nexport interface Observable<T> {\n  // Subscribe method\n  subscribe: Subscribe<T>;\n}\n\nexport type Executor<T> = (observer: Observer<T>) => void;\n\n/**\n * Helper to make a Subscribe function (just like Promise helps make a\n * Thenable).\n *\n * @param executor Function which can make calls to a single Observer\n *     as a proxy.\n * @param onNoObservers Callback when count of Observers goes to zero.\n */\nexport function createSubscribe<T>(\n  executor: Executor<T>,\n  onNoObservers?: Executor<T>\n): Subscribe<T> {\n  const proxy = new ObserverProxy<T>(executor, onNoObservers);\n  return proxy.subscribe.bind(proxy);\n}\n\n/**\n * Implement fan-out for any number of Observers attached via a subscribe\n * function.\n */\nclass ObserverProxy<T> implements Observer<T> {\n  private observers: Array<Observer<T>> | undefined = [];\n  private unsubscribes: Unsubscribe[] = [];\n  private onNoObservers: Executor<T> | undefined;\n  private observerCount = 0;\n  // Micro-task scheduling by calling task.then().\n  private task = Promise.resolve();\n  private finalized = false;\n  private finalError?: Error;\n\n  /**\n   * @param executor Function which can make calls to a single Observer\n   *     as a proxy.\n   * @param onNoObservers Callback when count of Observers goes to zero.\n   */\n  constructor(executor: Executor<T>, onNoObservers?: Executor<T>) {\n    this.onNoObservers = onNoObservers;\n    // Call the executor asynchronously so subscribers that are called\n    // synchronously after the creation of the subscribe function\n    // can still receive the very first value generated in the executor.\n    this.task\n      .then(() => {\n        executor(this);\n      })\n      .catch(e => {\n        this.error(e);\n      });\n  }\n\n  next(value: T): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.next(value);\n    });\n  }\n\n  error(error: Error): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.error(error);\n    });\n    this.close(error);\n  }\n\n  complete(): void {\n    this.forEachObserver((observer: Observer<T>) => {\n      observer.complete();\n    });\n    this.close();\n  }\n\n  /**\n   * Subscribe function that can be used to add an Observer to the fan-out list.\n   *\n   * - We require that no event is sent to a subscriber sychronously to their\n   *   call to subscribe().\n   */\n  subscribe(\n    nextOrObserver?: NextFn<T> | PartialObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ): Unsubscribe {\n    let observer: Observer<T>;\n\n    if (\n      nextOrObserver === undefined &&\n      error === undefined &&\n      complete === undefined\n    ) {\n      throw new Error('Missing Observer.');\n    }\n\n    // Assemble an Observer object when passed as callback functions.\n    if (\n      implementsAnyMethods(nextOrObserver as { [key: string]: unknown }, [\n        'next',\n        'error',\n        'complete'\n      ])\n    ) {\n      observer = nextOrObserver as Observer<T>;\n    } else {\n      observer = {\n        next: nextOrObserver as NextFn<T>,\n        error,\n        complete\n      } as Observer<T>;\n    }\n\n    if (observer.next === undefined) {\n      observer.next = noop as NextFn<T>;\n    }\n    if (observer.error === undefined) {\n      observer.error = noop as ErrorFn;\n    }\n    if (observer.complete === undefined) {\n      observer.complete = noop as CompleteFn;\n    }\n\n    const unsub = this.unsubscribeOne.bind(this, this.observers!.length);\n\n    // Attempt to subscribe to a terminated Observable - we\n    // just respond to the Observer with the final error or complete\n    // event.\n    if (this.finalized) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.task.then(() => {\n        try {\n          if (this.finalError) {\n            observer.error(this.finalError);\n          } else {\n            observer.complete();\n          }\n        } catch (e) {\n          // nothing\n        }\n        return;\n      });\n    }\n\n    this.observers!.push(observer as Observer<T>);\n\n    return unsub;\n  }\n\n  // Unsubscribe is synchronous - we guarantee that no events are sent to\n  // any unsubscribed Observer.\n  private unsubscribeOne(i: number): void {\n    if (this.observers === undefined || this.observers[i] === undefined) {\n      return;\n    }\n\n    delete this.observers[i];\n\n    this.observerCount -= 1;\n    if (this.observerCount === 0 && this.onNoObservers !== undefined) {\n      this.onNoObservers(this);\n    }\n  }\n\n  private forEachObserver(fn: (observer: Observer<T>) => void): void {\n    if (this.finalized) {\n      // Already closed by previous event....just eat the additional values.\n      return;\n    }\n\n    // Since sendOne calls asynchronously - there is no chance that\n    // this.observers will become undefined.\n    for (let i = 0; i < this.observers!.length; i++) {\n      this.sendOne(i, fn);\n    }\n  }\n\n  // Call the Observer via one of it's callback function. We are careful to\n  // confirm that the observe has not been unsubscribed since this asynchronous\n  // function had been queued.\n  private sendOne(i: number, fn: (observer: Observer<T>) => void): void {\n    // Execute the callback asynchronously\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      if (this.observers !== undefined && this.observers[i] !== undefined) {\n        try {\n          fn(this.observers[i]);\n        } catch (e) {\n          // Ignore exceptions raised in Observers or missing methods of an\n          // Observer.\n          // Log error to console. b/31404806\n          if (typeof console !== 'undefined' && console.error) {\n            console.error(e);\n          }\n        }\n      }\n    });\n  }\n\n  private close(err?: Error): void {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    if (err !== undefined) {\n      this.finalError = err;\n    }\n    // Proxy is no longer needed - garbage collect references\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    this.task.then(() => {\n      this.observers = undefined;\n      this.onNoObservers = undefined;\n    });\n  }\n}\n\n/** Turn synchronous function into one called asynchronously. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(fn: Function, onError?: ErrorFn): Function {\n  return (...args: unknown[]) => {\n    Promise.resolve(true)\n      .then(() => {\n        fn(...args);\n      })\n      .catch((error: Error) => {\n        if (onError) {\n          onError(error);\n        }\n      });\n  };\n}\n\n/**\n * Return true if the object passed in implements any of the named methods.\n */\nfunction implementsAnyMethods(\n  obj: { [key: string]: unknown },\n  methods: string[]\n): boolean {\n  if (typeof obj !== 'object' || obj === null) {\n    return false;\n  }\n\n  for (const method of methods) {\n    if (method in obj && typeof obj[method] === 'function') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction noop(): void {\n  // do nothing\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Check to make sure the appropriate number of arguments are provided for a public function.\n * Throws an error if it fails.\n *\n * @param fnName The function name\n * @param minCount The minimum number of arguments to allow for the function call\n * @param maxCount The maximum number of argument to allow for the function call\n * @param argCount The actual number of arguments provided.\n */\nexport const validateArgCount = function (\n  fnName: string,\n  minCount: number,\n  maxCount: number,\n  argCount: number\n): void {\n  let argError;\n  if (argCount < minCount) {\n    argError = 'at least ' + minCount;\n  } else if (argCount > maxCount) {\n    argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;\n  }\n  if (argError) {\n    const error =\n      fnName +\n      ' failed: Was called with ' +\n      argCount +\n      (argCount === 1 ? ' argument.' : ' arguments.') +\n      ' Expects ' +\n      argError +\n      '.';\n    throw new Error(error);\n  }\n};\n\n/**\n * Generates a string to prefix an error message about failed argument validation\n *\n * @param fnName The function name\n * @param argName The name of the argument\n * @return The prefix to add to the error thrown for validation.\n */\nexport function errorPrefix(fnName: string, argName: string): string {\n  return `${fnName} failed: ${argName} argument `;\n}\n\n/**\n * @param fnName\n * @param argumentNumber\n * @param namespace\n * @param optional\n */\nexport function validateNamespace(\n  fnName: string,\n  namespace: string,\n  optional: boolean\n): void {\n  if (optional && !namespace) {\n    return;\n  }\n  if (typeof namespace !== 'string') {\n    //TODO: I should do more validation here. We only allow certain chars in namespaces.\n    throw new Error(\n      errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.'\n    );\n  }\n}\n\nexport function validateCallback(\n  fnName: string,\n  argumentName: string,\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback: Function,\n  optional: boolean\n): void {\n  if (optional && !callback) {\n    return;\n  }\n  if (typeof callback !== 'function') {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid function.'\n    );\n  }\n}\n\nexport function validateContextObject(\n  fnName: string,\n  argumentName: string,\n  context: unknown,\n  optional: boolean\n): void {\n  if (optional && !context) {\n    return;\n  }\n  if (typeof context !== 'object' || context === null) {\n    throw new Error(\n      errorPrefix(fnName, argumentName) + 'must be a valid context object.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from './assert';\n\n// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they\n// automatically replaced '\\r\\n' with '\\n', and they didn't handle surrogate pairs,\n// so it's been modified.\n\n// Note that not all Unicode characters appear as single characters in JavaScript strings.\n// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters\n// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first\n// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate\n// pair).\n// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3\n\n/**\n * @param {string} str\n * @return {Array}\n */\nexport const stringToByteArray = function (str: string): number[] {\n  const out: number[] = [];\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    let c = str.charCodeAt(i);\n\n    // Is this the lead surrogate in a surrogate pair?\n    if (c >= 0xd800 && c <= 0xdbff) {\n      const high = c - 0xd800; // the high 10 bits.\n      i++;\n      assert(i < str.length, 'Surrogate pair missing trail surrogate.');\n      const low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.\n      c = 0x10000 + (high << 10) + low;\n    }\n\n    if (c < 128) {\n      out[p++] = c;\n    } else if (c < 2048) {\n      out[p++] = (c >> 6) | 192;\n      out[p++] = (c & 63) | 128;\n    } else if (c < 65536) {\n      out[p++] = (c >> 12) | 224;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    } else {\n      out[p++] = (c >> 18) | 240;\n      out[p++] = ((c >> 12) & 63) | 128;\n      out[p++] = ((c >> 6) & 63) | 128;\n      out[p++] = (c & 63) | 128;\n    }\n  }\n  return out;\n};\n\n/**\n * Calculate length without actually converting; useful for doing cheaper validation.\n * @param {string} str\n * @return {number}\n */\nexport const stringLength = function (str: string): number {\n  let p = 0;\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i);\n    if (c < 128) {\n      p++;\n    } else if (c < 2048) {\n      p += 2;\n    } else if (c >= 0xd800 && c <= 0xdbff) {\n      // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.\n      p += 4;\n      i++; // skip trail surrogate.\n    } else {\n      p += 3;\n    }\n  }\n  return p;\n};\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * The amount of milliseconds to exponentially increase.\n */\nconst DEFAULT_INTERVAL_MILLIS = 1000;\n\n/**\n * The factor to backoff by.\n * Should be a number greater than 1.\n */\nconst DEFAULT_BACKOFF_FACTOR = 2;\n\n/**\n * The maximum milliseconds to increase to.\n *\n * <p>Visible for testing\n */\nexport const MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.\n\n/**\n * The percentage of backoff time to randomize by.\n * See\n * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic\n * for context.\n *\n * <p>Visible for testing\n */\nexport const RANDOM_FACTOR = 0.5;\n\n/**\n * Based on the backoff method from\n * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.\n * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.\n */\nexport function calculateBackoffMillis(\n  backoffCount: number,\n  intervalMillis: number = DEFAULT_INTERVAL_MILLIS,\n  backoffFactor: number = DEFAULT_BACKOFF_FACTOR\n): number {\n  // Calculates an exponentially increasing value.\n  // Deviation: calculates value from count and a constant interval, so we only need to save value\n  // and count to restore state.\n  const currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);\n\n  // A random \"fuzz\" to avoid waves of retries.\n  // Deviation: randomFactor is required.\n  const randomWait = Math.round(\n    // A fraction of the backoff value to add/subtract.\n    // Deviation: changes multiplication order to improve readability.\n    RANDOM_FACTOR *\n      currBaseValue *\n      // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines\n      // if we add or subtract.\n      (Math.random() - 0.5) *\n      2\n  );\n\n  // Limits backoff to max to avoid effectively permanent backoff.\n  return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Provide English ordinal letters after a number\n */\nexport function ordinal(i: number): string {\n  if (!Number.isFinite(i)) {\n    return `${i}`;\n  }\n  return i + indicator(i);\n}\n\nfunction indicator(i: number): string {\n  i = Math.abs(i);\n  const cent = i % 100;\n  if (cent >= 10 && cent <= 20) {\n    return 'th';\n  }\n  const dec = i % 10;\n  if (dec === 1) {\n    return 'st';\n  }\n  if (dec === 2) {\n    return 'nd';\n  }\n  if (dec === 3) {\n    return 'rd';\n  }\n  return 'th';\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface Compat<T> {\n  _delegate: T;\n}\n\nexport function getModularInstance<ExpService>(\n  service: Compat<ExpService> | ExpService\n): ExpService {\n  if (service && (service as Compat<ExpService>)._delegate) {\n    return (service as Compat<ExpService>)._delegate;\n  } else {\n    return service as ExpService;\n  }\n}\n","exports.interopDefault = function(a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function(source, dest) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function(dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n",null,"/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport type LogLevelString =\n  | 'debug'\n  | 'verbose'\n  | 'info'\n  | 'warn'\n  | 'error'\n  | 'silent';\n\nexport interface LogOptions {\n  level: LogLevelString;\n}\n\nexport type LogCallback = (callbackParams: LogCallbackParams) => void;\n\nexport interface LogCallbackParams {\n  level: LogLevelString;\n  message: string;\n  args: unknown[];\n  type: string;\n}\n\n/**\n * A container for all of the Logger instances\n */\nexport const instances: Logger[] = [];\n\n/**\n * The JS SDK supports 5 log levels and also allows a user the ability to\n * silence the logs altogether.\n *\n * The order is a follows:\n * DEBUG < VERBOSE < INFO < WARN < ERROR\n *\n * All of the log types above the current log level will be captured (i.e. if\n * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and\n * `VERBOSE` logs will not)\n */\nexport enum LogLevel {\n  DEBUG,\n  VERBOSE,\n  INFO,\n  WARN,\n  ERROR,\n  SILENT\n}\n\nconst levelStringToEnum: { [key in LogLevelString]: LogLevel } = {\n  'debug': LogLevel.DEBUG,\n  'verbose': LogLevel.VERBOSE,\n  'info': LogLevel.INFO,\n  'warn': LogLevel.WARN,\n  'error': LogLevel.ERROR,\n  'silent': LogLevel.SILENT\n};\n\n/**\n * The default log level\n */\nconst defaultLogLevel: LogLevel = LogLevel.INFO;\n\n/**\n * We allow users the ability to pass their own log handler. We will pass the\n * type of log, the current log level, and any other arguments passed (i.e. the\n * messages that the user wants to log) to this function.\n */\nexport type LogHandler = (\n  loggerInstance: Logger,\n  logType: LogLevel,\n  ...args: unknown[]\n) => void;\n\n/**\n * By default, `console.debug` is not displayed in the developer console (in\n * chrome). To avoid forcing users to have to opt-in to these logs twice\n * (i.e. once for firebase, and once in the console), we are sending `DEBUG`\n * logs to the `console.log` function.\n */\nconst ConsoleMethod = {\n  [LogLevel.DEBUG]: 'log',\n  [LogLevel.VERBOSE]: 'log',\n  [LogLevel.INFO]: 'info',\n  [LogLevel.WARN]: 'warn',\n  [LogLevel.ERROR]: 'error'\n};\n\n/**\n * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR\n * messages on to their corresponding console counterparts (if the log method\n * is supported by the current log level)\n */\nconst defaultLogHandler: LogHandler = (instance, logType, ...args): void => {\n  if (logType < instance.logLevel) {\n    return;\n  }\n  const now = new Date().toISOString();\n  const method = ConsoleMethod[logType as keyof typeof ConsoleMethod];\n  if (method) {\n    console[method as 'log' | 'info' | 'warn' | 'error'](\n      `[${now}]  ${instance.name}:`,\n      ...args\n    );\n  } else {\n    throw new Error(\n      `Attempted to log a message with an invalid logType (value: ${logType})`\n    );\n  }\n};\n\nexport class Logger {\n  /**\n   * Gives you an instance of a Logger to capture messages according to\n   * Firebase's logging scheme.\n   *\n   * @param name The name that the logs will be associated with\n   */\n  constructor(public name: string) {\n    /**\n     * Capture the current instance for later use\n     */\n    instances.push(this);\n  }\n\n  /**\n   * The log level of the given Logger instance.\n   */\n  private _logLevel = defaultLogLevel;\n\n  get logLevel(): LogLevel {\n    return this._logLevel;\n  }\n\n  set logLevel(val: LogLevel) {\n    if (!(val in LogLevel)) {\n      throw new TypeError(`Invalid value \"${val}\" assigned to \\`logLevel\\``);\n    }\n    this._logLevel = val;\n  }\n\n  // Workaround for setter/getter having to be the same type.\n  setLogLevel(val: LogLevel | LogLevelString): void {\n    this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;\n  }\n\n  /**\n   * The main (internal) log handler for the Logger instance.\n   * Can be set to a new function in internal package code but not by user.\n   */\n  private _logHandler: LogHandler = defaultLogHandler;\n  get logHandler(): LogHandler {\n    return this._logHandler;\n  }\n  set logHandler(val: LogHandler) {\n    if (typeof val !== 'function') {\n      throw new TypeError('Value assigned to `logHandler` must be a function');\n    }\n    this._logHandler = val;\n  }\n\n  /**\n   * The optional, additional, user-defined log handler for the Logger instance.\n   */\n  private _userLogHandler: LogHandler | null = null;\n  get userLogHandler(): LogHandler | null {\n    return this._userLogHandler;\n  }\n  set userLogHandler(val: LogHandler | null) {\n    this._userLogHandler = val;\n  }\n\n  /**\n   * The functions below are all based on the `console` interface\n   */\n\n  debug(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.DEBUG, ...args);\n    this._logHandler(this, LogLevel.DEBUG, ...args);\n  }\n  log(...args: unknown[]): void {\n    this._userLogHandler &&\n      this._userLogHandler(this, LogLevel.VERBOSE, ...args);\n    this._logHandler(this, LogLevel.VERBOSE, ...args);\n  }\n  info(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.INFO, ...args);\n    this._logHandler(this, LogLevel.INFO, ...args);\n  }\n  warn(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.WARN, ...args);\n    this._logHandler(this, LogLevel.WARN, ...args);\n  }\n  error(...args: unknown[]): void {\n    this._userLogHandler && this._userLogHandler(this, LogLevel.ERROR, ...args);\n    this._logHandler(this, LogLevel.ERROR, ...args);\n  }\n}\n\nexport function setLogLevel(level: LogLevelString | LogLevel): void {\n  instances.forEach(inst => {\n    inst.setLogLevel(level);\n  });\n}\n\nexport function setUserLogHandler(\n  logCallback: LogCallback | null,\n  options?: LogOptions\n): void {\n  for (const instance of instances) {\n    let customLogLevel: LogLevel | null = null;\n    if (options && options.level) {\n      customLogLevel = levelStringToEnum[options.level];\n    }\n    if (logCallback === null) {\n      instance.userLogHandler = null;\n    } else {\n      instance.userLogHandler = (\n        instance: Logger,\n        level: LogLevel,\n        ...args: unknown[]\n      ) => {\n        const message = args\n          .map(arg => {\n            if (arg == null) {\n              return null;\n            } else if (typeof arg === 'string') {\n              return arg;\n            } else if (typeof arg === 'number' || typeof arg === 'boolean') {\n              return arg.toString();\n            } else if (arg instanceof Error) {\n              return arg.message;\n            } else {\n              try {\n                return JSON.stringify(arg);\n              } catch (ignored) {\n                return null;\n              }\n            }\n          })\n          .filter(arg => arg)\n          .join(' ');\n        if (level >= (customLogLevel ?? instance.logLevel)) {\n          logCallback({\n            level: LogLevel[level].toLowerCase() as LogLevelString,\n            message,\n            args,\n            type: instance.name\n          });\n        }\n      };\n    }\n  }\n}\n",null,null,"/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The semver (www.semver.org) version of the SDK. */\nexport let SDK_VERSION = '';\n\n/**\n * SDK_VERSION should be set before any database instance is created\n * @internal\n */\nexport function setSDKVersion(version: string): void {\n  SDK_VERSION = version;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { jsonEval, stringify } from '@firebase/util';\n\n/**\n * Wraps a DOM Storage object and:\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\n *\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\n * and one for localStorage.\n *\n */\nexport class DOMStorageWrapper {\n  // Use a prefix to avoid collisions with other stuff saved by the app.\n  private prefix_ = 'firebase:';\n\n  /**\n   * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\n   */\n  constructor(private domStorage_: Storage) {}\n\n  /**\n   * @param key - The key to save the value under\n   * @param value - The value being stored, or null to remove the key.\n   */\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  }\n\n  /**\n   * @returns The value that was stored under this key, or null\n   */\n  get(key: string): unknown {\n    const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  }\n\n  remove(key: string) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  }\n\n  isInMemoryStorage: boolean;\n\n  prefixedName_(name: string): string {\n    return this.prefix_ + name;\n  }\n\n  toString(): string {\n    return this.domStorage_.toString();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n */\nexport class MemoryStorage {\n  private cache_: { [k: string]: unknown } = {};\n\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  }\n\n  get(key: string): unknown {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n    return null;\n  }\n\n  remove(key: string) {\n    delete this.cache_[key];\n  }\n\n  isInMemoryStorage = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DOMStorageWrapper } from './DOMStorageWrapper';\nimport { MemoryStorage } from './MemoryStorage';\n\ndeclare const window: Window;\n\n/**\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n * to reflect this type\n *\n * @param domStorageName - Name of the underlying storage object\n *   (e.g. 'localStorage' or 'sessionStorage').\n * @returns Turning off type information until a common interface is defined.\n */\nconst createStoragefor = function (\n  domStorageName: string\n): DOMStorageWrapper | MemoryStorage {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window[domStorageName] !== 'undefined'\n    ) {\n      // Need to test cache. Just because it's here doesn't mean it works\n      const domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {}\n\n  // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n  return new MemoryStorage();\n};\n\n/** A storage object that lasts across sessions */\nexport const PersistentStorage = createStoragefor('localStorage');\n\n/** A storage object that only lasts one session */\nexport const SessionStorage = createStoragefor('sessionStorage');\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport {\n  assert,\n  base64,\n  Sha1,\n  stringToByteArray,\n  stringify,\n  isNodeSdk\n} from '@firebase/util';\n\nimport { SessionStorage } from '../storage/storage';\nimport { QueryContext } from '../view/EventRegistration';\n\ndeclare const window: Window;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const Windows: any;\n\nconst logClient = new Logger('@firebase/database');\n\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n */\nexport const LUIDGenerator: () => number = (function () {\n  let id = 1;\n  return function () {\n    return id++;\n  };\n})();\n\n/**\n * Sha1 hash of the input string\n * @param str - The string to hash\n * @returns {!string} The resulting hash\n */\nexport const sha1 = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  const sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  const sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nconst buildLogMessage_ = function (...varArgs: unknown[]): string {\n  let message = '';\n  for (let i = 0; i < varArgs.length; i++) {\n    const arg = varArgs[i];\n    if (\n      Array.isArray(arg) ||\n      (arg &&\n        typeof arg === 'object' &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof (arg as any).length === 'number')\n    ) {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n    message += ' ';\n  }\n\n  return message;\n};\n\n/**\n * Use this for all debug messages in Firebase.\n */\nexport let logger: ((a: string) => void) | null = null;\n\n/**\n * Flag to check for log availability on first log message\n */\nlet firstLog_ = true;\n\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param logger_ - A flag to turn on logging, or a custom logger\n * @param persistent - Whether or not to persist logging settings across refreshes\n */\nexport const enableLogging = function (\n  logger_?: boolean | ((a: string) => void) | null,\n  persistent?: boolean\n) {\n  assert(\n    !persistent || logger_ === true || logger_ === false,\n    \"Can't turn on custom loggers persistently.\"\n  );\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nexport const log = function (...varArgs: unknown[]) {\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    const message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nexport const logWrapper = function (\n  prefix: string\n): (...varArgs: unknown[]) => void {\n  return function (...varArgs: unknown[]) {\n    log(prefix, ...varArgs);\n  };\n};\n\nexport const error = function (...varArgs: string[]) {\n  const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...varArgs);\n  logClient.error(message);\n};\n\nexport const fatal = function (...varArgs: string[]) {\n  const message = `FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;\n  logClient.error(message);\n  throw new Error(message);\n};\n\nexport const warn = function (...varArgs: unknown[]) {\n  const message = 'FIREBASE WARNING: ' + buildLogMessage_(...varArgs);\n  logClient.warn(message);\n};\n\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexport const warnIfPageIsSecure = function () {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (\n    typeof window !== 'undefined' &&\n    window.location &&\n    window.location.protocol &&\n    window.location.protocol.indexOf('https:') !== -1\n  ) {\n    warn(\n      'Insecure Firebase access from a secure page. ' +\n        'Please use https in calls to new Firebase().'\n    );\n  }\n};\n\nexport const warnAboutUnsupportedMethod = function (methodName: string) {\n  warn(\n    methodName +\n      ' is unsupported and will likely change soon.  ' +\n      'Please do not use.'\n  );\n};\n\n/**\n * Returns true if data is NaN, or +/- Infinity.\n */\nexport const isInvalidJSONNumber = function (data: unknown): boolean {\n  return (\n    typeof data === 'number' &&\n    (data !== data || // NaN\n      data === Number.POSITIVE_INFINITY ||\n      data === Number.NEGATIVE_INFINITY)\n  );\n};\n\nexport const executeWhenDOMReady = function (fn: () => void) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n\n    let called = false;\n    const wrappedFn = function () {\n      if (!document.body) {\n        setTimeout(wrappedFn, Math.floor(10));\n        return;\n      }\n\n      if (!called) {\n        called = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn, false);\n      // fallback to onload.\n      window.addEventListener('load', wrappedFn, false);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((document as any).attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (document as any).attachEvent('onreadystatechange', () => {\n        if (document.readyState === 'complete') {\n          wrappedFn();\n        }\n      });\n      // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (window as any).attachEvent('onload', wrappedFn);\n\n      // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n */\nexport const MIN_NAME = '[MIN_NAME]';\n\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n */\nexport const MAX_NAME = '[MAX_NAME]';\n\n/**\n * Compares valid Firebase key names, plus min and max name\n */\nexport const nameCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    const aAsInt = tryParseInt(a),\n      bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n\n/**\n * @returns {!number} comparison result.\n */\nexport const stringCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nexport const requireKey = function (\n  key: string,\n  obj: { [k: string]: unknown }\n): unknown {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error(\n      'Missing required key (' + key + ') in object: ' + stringify(obj)\n    );\n  }\n};\n\nexport const ObjectToUniqueKey = function (obj: unknown): string {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  const keys = [];\n  // eslint-disable-next-line guard-for-in\n  for (const k in obj) {\n    keys.push(k);\n  }\n\n  // Export as json, but with the keys sorted.\n  keys.sort();\n  let key = '{';\n  for (let i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param str - The string\n * @param segsize - The maximum number of chars in the string.\n * @returns The string, split into appropriately-sized chunks\n */\nexport const splitStringBySize = function (\n  str: string,\n  segsize: number\n): string[] {\n  const len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  const dataSegs = [];\n  for (let c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n  return dataSegs;\n};\n\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param obj - The object or array to iterate over\n * @param fn - The function to apply\n */\nexport function each(obj: object, fn: (k: string, v: unknown) => void) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param callback - Callback function.\n * @param context - Optional context to bind to.\n *\n */\nexport const bindCallback = function (\n  callback: (a: unknown) => void,\n  context?: object | null\n): (a: unknown) => void {\n  return context ? callback.bind(context) : callback;\n};\n\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param v - A double\n *\n */\nexport const doubleToIEEE754String = function (v: number): string {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  const ebits = 11,\n    fbits = 52;\n  const bias = (1 << (ebits - 1)) - 1;\n  let s, e, f, ln, i;\n\n  // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  }\n\n  // Pack sign, exponent, fraction\n  const bits = [];\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  const str = bits.join('');\n\n  // Return the data as a hex string. --MJL\n  let hexByteString = '';\n  for (i = 0; i < 64; i += 8) {\n    let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n    hexByteString = hexByteString + hexByte;\n  }\n  return hexByteString.toLowerCase();\n};\n\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n */\nexport const isChromeExtensionContentScript = function (): boolean {\n  return !!(\n    typeof window === 'object' &&\n    window['chrome'] &&\n    window['chrome']['extension'] &&\n    !/^chrome/.test(window.location.href)\n  );\n};\n\n/**\n * Used to detect if we're in a Windows 8 Store app.\n */\nexport const isWindowsStoreApp = function (): boolean {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n\n/**\n * Converts a server error code to a Javascript Error\n */\nexport function errorForServerCode(code: string, query: QueryContext): Error {\n  let reason = 'Unknown Error';\n  if (code === 'too_big') {\n    reason =\n      'The data requested exceeds the maximum size ' +\n      'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  const error = new Error(\n    code + ' at ' + query._path.toString() + ': ' + reason\n  );\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (error as any).code = code.toUpperCase();\n  return error;\n}\n\n/**\n * Used to test for integer-looking strings\n */\nexport const INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n\n/**\n * For use in keys, the minimum possible 32-bit integer.\n */\nexport const INTEGER_32_MIN = -2147483648;\n\n/**\n * For use in kyes, the maximum possible 32-bit integer.\n */\nexport const INTEGER_32_MAX = 2147483647;\n\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n */\nexport const tryParseInt = function (str: string): number | null {\n  if (INTEGER_REGEXP_.test(str)) {\n    const intVal = Number(str);\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n  return null;\n};\n\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param fn - The code to guard.\n */\nexport const exceptionGuard = function (fn: () => void) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(() => {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      const stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param callback - Optional onComplete callback.\n * @param varArgs - Arbitrary args to be passed to opt_onComplete\n */\nexport const callUserCallback = function (\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback?: Function | null,\n  ...varArgs: unknown[]\n) {\n  if (typeof callback === 'function') {\n    exceptionGuard(() => {\n      callback(...varArgs);\n    });\n  }\n};\n\n/**\n * @returns {boolean} true if we think we're currently being crawled.\n */\nexport const beingCrawled = function (): boolean {\n  const userAgent =\n    (typeof window === 'object' &&\n      window['navigator'] &&\n      window['navigator']['userAgent']) ||\n    '';\n\n  // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n  return (\n    userAgent.search(\n      /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i\n    ) >= 0\n  );\n};\n\n/**\n * Export a property of an object using a getter function.\n */\nexport const exportPropGetter = function (\n  object: object,\n  name: string,\n  fnGet: () => unknown\n) {\n  Object.defineProperty(object, name, { get: fnGet });\n};\n\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param fn - Function to run.\n * @param time - Milliseconds to wait before running.\n * @returns The setTimeout() return value.\n */\nexport const setTimeoutNonBlocking = function (\n  fn: () => void,\n  time: number\n): number | object {\n  const timeout: number | object = setTimeout(fn, time);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if (typeof timeout === 'object' && (timeout as any)['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (timeout as any)['unref']();\n  }\n  return timeout;\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AppCheckInternalComponentName,\n  AppCheckTokenListener,\n  AppCheckTokenResult,\n  FirebaseAppCheckInternal\n} from '@firebase/app-check-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { warn } from './util/util';\n\n/**\n * Abstraction around AppCheck's token fetching capabilities.\n */\nexport class AppCheckTokenProvider {\n  private appCheck?: FirebaseAppCheckInternal;\n  constructor(\n    private appName_: string,\n    private appCheckProvider?: Provider<AppCheckInternalComponentName>\n  ) {\n    this.appCheck = appCheckProvider?.getImmediate({ optional: true });\n    if (!this.appCheck) {\n      appCheckProvider?.get().then(appCheck => (this.appCheck = appCheck));\n    }\n  }\n\n  getToken(forceRefresh?: boolean): Promise<AppCheckTokenResult> {\n    if (!this.appCheck) {\n      return new Promise<AppCheckTokenResult>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAppCheck. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // AppCheck and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.appCheck) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n    return this.appCheck.getToken(forceRefresh);\n  }\n\n  addTokenChangeListener(listener: AppCheckTokenListener) {\n    this.appCheckProvider\n      ?.get()\n      .then(appCheck => appCheck.addTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    warn(\n      `Provided AppCheck credentials for the app named \"${this.appName_}\" ` +\n        'are invalid. This usually indicates your app was not initialized correctly.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseAuthTokenData } from '@firebase/app-types/private';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { log, warn } from './util/util';\n\nexport interface AuthTokenProvider {\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData>;\n  addTokenChangeListener(listener: (token: string | null) => void): void;\n  removeTokenChangeListener(listener: (token: string | null) => void): void;\n  notifyForInvalidToken(): void;\n}\n\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nexport class FirebaseAuthTokenProvider implements AuthTokenProvider {\n  private auth_: FirebaseAuthInternal | null = null;\n\n  constructor(\n    private appName_: string,\n    private firebaseOptions_: object,\n    private authProvider_: Provider<FirebaseAuthInternalName>\n  ) {\n    this.auth_ = authProvider_.getImmediate({ optional: true });\n    if (!this.auth_) {\n      authProvider_.onInit(auth => (this.auth_ = auth));\n    }\n  }\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    if (!this.auth_) {\n      return new Promise<FirebaseAuthTokenData>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAuth. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // Auth and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.auth_) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(error => {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      this.authProvider_\n        .get()\n        .then(auth => auth.addAuthTokenListener(listener));\n    }\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {\n    this.authProvider_\n      .get()\n      .then(auth => auth.removeAuthTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    let errorMessage =\n      'Provided authentication credentials for the app named \"' +\n      this.appName_ +\n      '\" are invalid. This usually indicates your app was not ' +\n      'initialized correctly. ';\n    if ('credential' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"credential\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else if ('serviceAccount' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else {\n      errorMessage +=\n        'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\n        'initializeApp() match the values provided for your app at ' +\n        'https://console.firebase.google.com/.';\n    }\n    warn(errorMessage);\n  }\n}\n\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\nexport class EmulatorTokenProvider implements AuthTokenProvider {\n  /** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\n  static OWNER = 'owner';\n\n  constructor(private accessToken: string) {}\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    return Promise.resolve({\n      accessToken: this.accessToken\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(this.accessToken);\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {}\n\n  notifyForInvalidToken(): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PROTOCOL_VERSION = '5';\n\nexport const VERSION_PARAM = 'v';\n\nexport const TRANSPORT_SESSION_PARAM = 's';\n\nexport const REFERER_PARAM = 'r';\n\nexport const FORGE_REF = 'f';\n\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\nexport const FORGE_DOMAIN_RE =\n  /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\n\nexport const LAST_SESSION_PARAM = 'ls';\n\nexport const APPLICATION_ID_PARAM = 'p';\n\nexport const APP_CHECK_TOKEN_PARAM = 'ac';\n\nexport const WEBSOCKET = 'websocket';\n\nexport const LONG_POLLING = 'long_polling';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { LONG_POLLING, WEBSOCKET } from '../realtime/Constants';\n\nimport { PersistentStorage } from './storage/storage';\nimport { each } from './util/util';\n\n/**\n * A class that holds metadata about a Repo object\n */\nexport class RepoInfo {\n  private _host: string;\n  private _domain: string;\n  internalHost: string;\n\n  /**\n   * @param host - Hostname portion of the url for the repo\n   * @param secure - Whether or not this repo is accessed over ssl\n   * @param namespace - The namespace represented by the repo\n   * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\n   * @param nodeAdmin - Whether this instance uses Admin SDK credentials\n   * @param persistenceKey - Override the default session persistence storage key\n   */\n  constructor(\n    host: string,\n    public readonly secure: boolean,\n    public readonly namespace: string,\n    public readonly webSocketOnly: boolean,\n    public readonly nodeAdmin: boolean = false,\n    public readonly persistenceKey: string = '',\n    public readonly includeNamespaceInQueryParams: boolean = false\n  ) {\n    this._host = host.toLowerCase();\n    this._domain = this._host.substr(this._host.indexOf('.') + 1);\n    this.internalHost =\n      (PersistentStorage.get('host:' + host) as string) || this._host;\n  }\n\n  isCacheableHost(): boolean {\n    return this.internalHost.substr(0, 2) === 's-';\n  }\n\n  isCustomHost() {\n    return (\n      this._domain !== 'firebaseio.com' &&\n      this._domain !== 'firebaseio-demo.com'\n    );\n  }\n\n  get host() {\n    return this._host;\n  }\n\n  set host(newHost: string) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this._host, this.internalHost);\n      }\n    }\n  }\n\n  toString(): string {\n    let str = this.toURLString();\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n    return str;\n  }\n\n  toURLString(): string {\n    const protocol = this.secure ? 'https://' : 'http://';\n    const query = this.includeNamespaceInQueryParams\n      ? `?ns=${this.namespace}`\n      : '';\n    return `${protocol}${this.host}/${query}`;\n  }\n}\n\nfunction repoInfoNeedsQueryParam(repoInfo: RepoInfo): boolean {\n  return (\n    repoInfo.host !== repoInfo.internalHost ||\n    repoInfo.isCustomHost() ||\n    repoInfo.includeNamespaceInQueryParams\n  );\n}\n\n/**\n * Returns the websocket URL for this repo\n * @param repoInfo - RepoInfo object\n * @param type - of connection\n * @param params - list\n * @returns The URL for this repo\n */\nexport function repoInfoConnectionURL(\n  repoInfo: RepoInfo,\n  type: string,\n  params: { [k: string]: string }\n): string {\n  assert(typeof type === 'string', 'typeof type must == string');\n  assert(typeof params === 'object', 'typeof params must == object');\n\n  let connURL: string;\n  if (type === WEBSOCKET) {\n    connURL =\n      (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\n  } else if (type === LONG_POLLING) {\n    connURL =\n      (repoInfo.secure ? 'https://' : 'http://') +\n      repoInfo.internalHost +\n      '/.lp?';\n  } else {\n    throw new Error('Unknown connection type: ' + type);\n  }\n  if (repoInfoNeedsQueryParam(repoInfo)) {\n    params['ns'] = repoInfo.namespace;\n  }\n\n  const pairs: string[] = [];\n\n  each(params, (key: string, value: string) => {\n    pairs.push(key + '=' + value);\n  });\n\n  return connURL + pairs.join('&');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deepCopy, contains } from '@firebase/util';\n\n/**\n * Tracks a collection of stats.\n */\nexport class StatsCollection {\n  private counters_: { [k: string]: number } = {};\n\n  incrementCounter(name: string, amount: number = 1) {\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  }\n\n  get() {\n    return deepCopy(this.counters_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport { StatsCollection } from './StatsCollection';\n\nconst collections: { [k: string]: StatsCollection } = {};\nconst reporters: { [k: string]: unknown } = {};\n\nexport function statsManagerGetCollection(repoInfo: RepoInfo): StatsCollection {\n  const hashString = repoInfo.toString();\n\n  if (!collections[hashString]) {\n    collections[hashString] = new StatsCollection();\n  }\n\n  return collections[hashString];\n}\n\nexport function statsManagerGetOrCreateReporter<T>(\n  repoInfo: RepoInfo,\n  creatorFunction: () => T\n): T {\n  const hashString = repoInfo.toString();\n\n  if (!reporters[hashString]) {\n    reporters[hashString] = creatorFunction();\n  }\n\n  return reporters[hashString] as T;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { exceptionGuard } from '../../core/util/util';\n\n/**\n * This class ensures the packets from the server arrive in order\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\n */\nexport class PacketReceiver {\n  pendingResponses: unknown[] = [];\n  currentResponseNum = 0;\n  closeAfterResponse = -1;\n  onClose: (() => void) | null = null;\n\n  /**\n   * @param onMessage_\n   */\n  constructor(private onMessage_: (a: {}) => void) {}\n\n  closeAfter(responseNum: number, callback: () => void) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  }\n\n  /**\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\n   * browsers will respond in the same order as the requests we sent\n   */\n  handleResponse(requestNum: number, data: unknown[]) {\n    this.pendingResponses[requestNum] = data;\n    while (this.pendingResponses[this.currentResponseNum]) {\n      const toProcess = this.pendingResponses[\n        this.currentResponseNum\n      ] as unknown[];\n      delete this.pendingResponses[this.currentResponseNum];\n      for (let i = 0; i < toProcess.length; ++i) {\n        if (toProcess[i]) {\n          exceptionGuard(() => {\n            this.onMessage_(toProcess[i]);\n          });\n        }\n      }\n      if (this.currentResponseNum === this.closeAfterResponse) {\n        if (this.onClose) {\n          this.onClose();\n          this.onClose = null;\n        }\n        break;\n      }\n      this.currentResponseNum++;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Encode, isNodeSdk, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport {\n  executeWhenDOMReady,\n  isChromeExtensionContentScript,\n  isWindowsStoreApp,\n  log,\n  logWrapper,\n  LUIDGenerator,\n  splitStringBySize\n} from '../core/util/util';\n\nimport {\n  APP_CHECK_TOKEN_PARAM,\n  APPLICATION_ID_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  LONG_POLLING,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM\n} from './Constants';\nimport { PacketReceiver } from './polling/PacketReceiver';\nimport { Transport } from './Transport';\n\n// URL query parameters associated with longpolling\nexport const FIREBASE_LONGPOLL_START_PARAM = 'start';\nexport const FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nexport const FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nexport const FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nexport const FIREBASE_LONGPOLL_ID_PARAM = 'id';\nexport const FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nexport const FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nexport const FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nexport const FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nexport const FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nexport const FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nconst MAX_URL_DATA_SIZE = 1870;\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n\n/**\n * Keepalive period\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\n * length of 30 seconds that we can't exceed.\n */\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\n\n/**\n * How long to wait before aborting a long-polling connection attempt.\n */\nconst LP_CONNECT_TIMEOUT = 30000;\n\n/**\n * This class manages a single long-polling connection.\n */\nexport class BrowserPollConnection implements Transport {\n  bytesSent = 0;\n  bytesReceived = 0;\n  urlFn: (params: object) => string;\n  scriptTagHolder: FirebaseIFrameScriptHolder;\n  myDisconnFrame: HTMLIFrameElement;\n  curSegmentNum: number;\n  myPacketOrderer: PacketReceiver;\n  id: string;\n  password: string;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_ = false;\n  private isClosed_: boolean;\n  private connectTimeoutTimer_: number | null;\n  private onDisconnect_: ((a?: boolean) => void) | null;\n\n  /**\n   * @param connId An identifier for this connection, used for logging\n   * @param repoInfo The info for the endpoint to send data to.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The AppCheck token for this client.\n   * @param authToken The AuthToken to use for this connection.\n   * @param transportSessionId Optional transportSessionid if we are\n   * reconnecting for an existing transport session\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has\n   * already created a connection previously\n   */\n  constructor(\n    public connId: string,\n    public repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    public transportSessionId?: string,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.urlFn = (params: { [k: string]: string }) => {\n      // Always add the token if we have one.\n      if (this.appCheckToken) {\n        params[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\n    };\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n\n    this.connectTimeoutTimer_ = setTimeout(() => {\n      this.log_('Timed out trying to connect.');\n      // Make sure we clear the host cache\n      this.onClosed_();\n      this.connectTimeoutTimer_ = null;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)) as any;\n\n    // Ensure we delay the creation of the iframe until the DOM is loaded.\n    executeWhenDOMReady(() => {\n      if (this.isClosed_) {\n        return;\n      }\n\n      //Set up a callback that gets triggered once a connection is set up.\n      this.scriptTagHolder = new FirebaseIFrameScriptHolder(\n        (...args) => {\n          const [command, arg1, arg2, arg3, arg4] = args;\n          this.incrementIncomingBytes_(args);\n          if (!this.scriptTagHolder) {\n            return; // we closed the connection.\n          }\n\n          if (this.connectTimeoutTimer_) {\n            clearTimeout(this.connectTimeoutTimer_);\n            this.connectTimeoutTimer_ = null;\n          }\n          this.everConnected_ = true;\n          if (command === FIREBASE_LONGPOLL_START_PARAM) {\n            this.id = arg1 as string;\n            this.password = arg2 as string;\n          } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n            // Don't clear the host cache. We got a response from the server, so we know it's reachable\n            if (arg1) {\n              // We aren't expecting any more data (other than what the server's already in the process of sending us\n              // through our already open polls), so don't send any more.\n              this.scriptTagHolder.sendNewPolls = false;\n\n              // arg1 in this case is the last response number sent by the server. We should try to receive\n              // all of the responses up to this one before closing\n              this.myPacketOrderer.closeAfter(arg1 as number, () => {\n                this.onClosed_();\n              });\n            } else {\n              this.onClosed_();\n            }\n          } else {\n            throw new Error('Unrecognized command received: ' + command);\n          }\n        },\n        (...args) => {\n          const [pN, data] = args;\n          this.incrementIncomingBytes_(args);\n          this.myPacketOrderer.handleResponse(pN as number, data as unknown[]);\n        },\n        () => {\n          this.onClosed_();\n        },\n        this.urlFn\n      );\n\n      //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(\n        Math.random() * 100000000\n      );\n      if (this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] =\n          this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n      if (this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\n      }\n      if (this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\n      }\n      if (this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = this.applicationId;\n      }\n      if (this.appCheckToken) {\n        urlParams[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      if (\n        typeof location !== 'undefined' &&\n        location.hostname &&\n        FORGE_DOMAIN_RE.test(location.hostname)\n      ) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n      const connectURL = this.urlFn(urlParams);\n      this.log_('Connecting via long-poll to ' + connectURL);\n      this.scriptTagHolder.addTag(connectURL, () => {\n        /* do nothing */\n      });\n    });\n  }\n\n  /**\n   * Call this when a handshake has completed successfully and we want to consider the connection established\n   */\n  start() {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  }\n\n  private static forceAllow_: boolean;\n\n  /**\n   * Forces long polling to be considered as a potential transport\n   */\n  static forceAllow() {\n    BrowserPollConnection.forceAllow_ = true;\n  }\n\n  private static forceDisallow_: boolean;\n\n  /**\n   * Forces longpolling to not be considered as a potential transport\n   */\n  static forceDisallow() {\n    BrowserPollConnection.forceDisallow_ = true;\n  }\n\n  // Static method, use string literal so it can be accessed in a generic way\n  static isAvailable() {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return (\n        !BrowserPollConnection.forceDisallow_ &&\n        typeof document !== 'undefined' &&\n        document.createElement != null &&\n        !isChromeExtensionContentScript() &&\n        !isWindowsStoreApp()\n      );\n    }\n  }\n\n  /**\n   * No-op for polling\n   */\n  markConnectionHealthy() {}\n\n  /**\n   * Stops polling and cleans up the iframe\n   */\n  private shutdown_() {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    }\n\n    //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  }\n\n  /**\n   * Triggered when this transport is closed\n   */\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\n   * that we've left.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\n   * broken into chunks (since URLs have a small maximum length).\n   * @param data - The JSON data to transmit.\n   */\n  send(data: {}) {\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //first, lets get the base64-encoded data\n    const base64data = base64Encode(dataStr);\n\n    //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n    const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\n\n    //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(\n        this.curSegmentNum,\n        dataSegs.length,\n        dataSegs[i]\n      );\n      this.curSegmentNum++;\n    }\n  }\n\n  /**\n   * This is how we notify the server that we're leaving.\n   * We aren't able to send requests with DHTML on a window close event, but we can\n   * trigger XHR requests in some browsers (everything but Opera basically).\n   */\n  addDisconnectPingFrame(id: string, pw: string) {\n    if (isNodeSdk()) {\n      return;\n    }\n    this.myDisconnFrame = document.createElement('iframe');\n    const urlParams: { [k: string]: string } = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n\n    document.body.appendChild(this.myDisconnFrame);\n  }\n\n  /**\n   * Used to track the bytes received by this client\n   */\n  private incrementIncomingBytes_(args: unknown) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    const bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface IFrameElement extends HTMLIFrameElement {\n  doc: Document;\n}\n\n/*********************************************************************************************\n * A wrapper around an iframe that is used as a long-polling script holder.\n *********************************************************************************************/\nexport class FirebaseIFrameScriptHolder {\n  //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n  //problems in some browsers.\n  outstandingRequests = new Set<number>();\n\n  //A queue of the pending segments waiting for transmission to the server.\n  pendingSegs: Array<{ seg: number; ts: number; d: unknown }> = [];\n\n  //A serial number. We use this for two things:\n  // 1) A way to ensure the browser doesn't cache responses to polls\n  // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n  //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n  //    JSONP code in the order it was added to the iframe.\n  currentSerial = Math.floor(Math.random() * 100000000);\n\n  // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n  // incoming data from the server that we're waiting for).\n  sendNewPolls = true;\n\n  uniqueCallbackIdentifier: number;\n  myIFrame: IFrameElement;\n  alive: boolean;\n  myID: string;\n  myPW: string;\n  commandCB: (command: string, ...args: unknown[]) => void;\n  onMessageCB: (...args: unknown[]) => void;\n\n  /**\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\n   */\n  constructor(\n    commandCB: (command: string, ...args: unknown[]) => void,\n    onMessageCB: (...args: unknown[]) => void,\n    public onDisconnect: () => void,\n    public urlFn: (a: object) => string\n  ) {\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[\n        FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier\n      ] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] =\n        onMessageCB;\n\n      //Create an iframe for us to add script tags to.\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n\n      // Set the iframe's contents.\n      let script = '';\n      // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n      if (\n        this.myIFrame.src &&\n        this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:'\n      ) {\n        const currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n      const iframeContents = '<html><body>' + script + '</body></html>';\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n        if (e.stack) {\n          log(e.stack);\n        }\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n\n  /**\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\n   * actually use.\n   */\n  private static createIFrame_(): IFrameElement {\n    const iframe = document.createElement('iframe') as IFrameElement;\n    iframe.style.display = 'none';\n\n    // This is necessary in order to initialize the document inside the iframe\n    if (document.body) {\n      document.body.appendChild(iframe);\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        const a = iframe.contentWindow.document;\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        const domain = document.domain;\n        iframe.src =\n          \"javascript:void((function(){document.open();document.domain='\" +\n          domain +\n          \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    }\n\n    // Get the document of the iframe in a browser-specific way.\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((iframe as any).document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = (iframe as any).document; //others?\n    }\n\n    return iframe;\n  }\n\n  /**\n   * Cancel all outstanding queries and remove the frame.\n   */\n  close() {\n    //Mark this iframe as dead, so no new requests are sent.\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n      this.myIFrame.doc.body.innerHTML = '';\n      setTimeout(() => {\n        if (this.myIFrame !== null) {\n          document.body.removeChild(this.myIFrame);\n          this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    }\n\n    // Protect from being called recursively.\n    const onDisconnect = this.onDisconnect;\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  }\n\n  /**\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\n   * @param id - The ID of this connection\n   * @param pw - The password for this connection\n   */\n  startLongPoll(id: string, pw: string) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true;\n\n    //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n    while (this.newRequest_()) {}\n  }\n\n  /**\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\n   * too many outstanding requests and we are still alive.\n   *\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\n   * needed.\n   */\n  private newRequest_() {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (\n      this.alive &&\n      this.sendNewPolls &&\n      this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)\n    ) {\n      //construct our url\n      this.currentSerial++;\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      let theURL = this.urlFn(urlParams);\n      //Now add as much data as we can.\n      let curDataString = '';\n      let i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        const nextSeg = this.pendingSegs[0];\n        if (\n          (nextSeg.d as unknown[]).length +\n            SEG_HEADER_SIZE +\n            curDataString.length <=\n          MAX_URL_DATA_SIZE\n        ) {\n          //great, the segment will fit. Lets append it.\n          const theSeg = this.pendingSegs.shift();\n          curDataString =\n            curDataString +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\n            i +\n            '=' +\n            theSeg.seg +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\n            i +\n            '=' +\n            theSeg.ts +\n            '&' +\n            FIREBASE_LONGPOLL_DATA_PARAM +\n            i +\n            '=' +\n            theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Queue a packet for transmission to the server.\n   * @param segnum - A sequential id for this packet segment used for reassembly\n   * @param totalsegs - The total number of segments in this packet\n   * @param data - The data for this segment.\n   */\n  enqueueSegment(segnum: number, totalsegs: number, data: unknown) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\n\n    //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n    if (this.alive) {\n      this.newRequest_();\n    }\n  }\n\n  /**\n   * Add a script tag for a regular long-poll request.\n   * @param url - The URL of the script tag.\n   * @param serial - The serial number of the request.\n   */\n  private addLongPollTag_(url: string, serial: number) {\n    //remember that we sent this request.\n    this.outstandingRequests.add(serial);\n\n    const doNewRequest = () => {\n      this.outstandingRequests.delete(serial);\n      this.newRequest_();\n    };\n\n    // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n    const keepaliveTimeout = setTimeout(\n      doNewRequest,\n      Math.floor(KEEPALIVE_REQUEST_INTERVAL)\n    );\n\n    const readyStateCB = () => {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout);\n\n      // Trigger a new request so we can continue receiving data.\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  }\n\n  /**\n   * Add an arbitrary script tag to the iframe.\n   * @param url - The URL for the script tag source.\n   * @param loadCB - A callback to be triggered once the script has loaded.\n   */\n  addTag(url: string, loadCB: () => void) {\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this as any).doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(() => {\n        try {\n          // if we're already closed, don't add this poll\n          if (!this.sendNewPolls) {\n            return;\n          }\n          const newScript = this.myIFrame.doc.createElement('script');\n          newScript.type = 'text/javascript';\n          newScript.async = true;\n          newScript.src = url;\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          newScript.onload = (newScript as any).onreadystatechange =\n            function () {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              const rstate = (newScript as any).readyState;\n              if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                newScript.onload = (newScript as any).onreadystatechange = null;\n                if (newScript.parentNode) {\n                  newScript.parentNode.removeChild(newScript);\n                }\n                loadCB();\n              }\n            };\n          newScript.onerror = () => {\n            log('Long-poll script failed to load: ' + url);\n            this.sendNewPolls = false;\n            this.close();\n          };\n          this.myIFrame.doc.body.appendChild(newScript);\n        } catch (e) {\n          // TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isNodeSdk, jsonEval, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { logWrapper, splitStringBySize } from '../core/util/util';\nimport { SDK_VERSION } from '../core/version';\n\nimport {\n  APP_CHECK_TOKEN_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM,\n  WEBSOCKET\n} from './Constants';\nimport { Transport } from './Transport';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const MozWebSocket: any;\n\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\n\nlet WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n\nexport function setWebSocketImpl(impl) {\n  WebSocketImpl = impl;\n}\n\n/**\n * Create a new websocket connection with the given callbacks.\n */\nexport class WebSocketConnection implements Transport {\n  keepaliveTimer: number | null = null;\n  frames: string[] | null = null;\n  totalFrames = 0;\n  bytesSent = 0;\n  bytesReceived = 0;\n  connURL: string;\n  onDisconnect: (a?: boolean) => void;\n  onMessage: (msg: {}) => void;\n  mySock: WebSocket | null;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_: boolean;\n  private isClosed_: boolean;\n  private nodeAdmin: boolean;\n\n  /**\n   * @param connId identifier for this transport\n   * @param repoInfo The info for the websocket endpoint.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The App Check Token for this client.\n   * @param authToken The Auth Token for this client.\n   * @param transportSessionId Optional transportSessionId if this is connecting\n   * to an existing transport session\n   * @param lastSessionId Optional lastSessionId if there was a previous\n   * connection\n   */\n  constructor(\n    public connId: string,\n    repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(\n      repoInfo,\n      transportSessionId,\n      lastSessionId,\n      appCheckToken\n    );\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n\n  /**\n   * @param repoInfo - The info for the websocket endpoint.\n   * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param lastSessionId - Optional lastSessionId if there was a previous connection\n   * @returns connection url\n   */\n  private static connectionURL_(\n    repoInfo: RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string,\n    appCheckToken?: string\n  ): string {\n    const urlParams: { [k: string]: string } = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (\n      !isNodeSdk() &&\n      typeof location !== 'undefined' &&\n      location.hostname &&\n      FORGE_DOMAIN_RE.test(location.hostname)\n    ) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n    if (appCheckToken) {\n      urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\n    }\n\n    return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n\n    this.log_('Websocket connecting to ' + this.connURL);\n\n    this.everConnected_ = false;\n    // Assume failure until proven otherwise.\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      if (isNodeSdk()) {\n        const device = this.nodeAdmin ? 'AdminNode' : 'Node';\n        // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n        const options: { [k: string]: object } = {\n          headers: {\n            'User-Agent': `Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n\n        // If using Node with admin creds, AppCheck-related checks are unnecessary.\n        // Note that we send the credentials here even if they aren't admin credentials, which is\n        // not a problem.\n        // Note that this header is just used to bypass appcheck, and the token should still be sent\n        // through the websocket connection once it is established.\n        if (this.authToken) {\n          options.headers['Authorization'] = `Bearer ${this.authToken}`;\n        }\n        if (this.appCheckToken) {\n          options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\n        }\n\n        // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n        const env = process['env'];\n        const proxy =\n          this.connURL.indexOf('wss://') === 0\n            ? env['HTTPS_PROXY'] || env['https_proxy']\n            : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = { origin: proxy };\n        }\n\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      } else {\n        const options: { [k: string]: object } = {\n          headers: {\n            'X-Firebase-GMPID': this.applicationId || '',\n            'X-Firebase-AppCheck': this.appCheckToken || ''\n          }\n        };\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      }\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      const error = e.message || e.data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = () => {\n      this.log_('Websocket connected.');\n      this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = () => {\n      this.log_('Websocket connection was disconnected.');\n      this.mySock = null;\n      this.onClosed_();\n    };\n\n    this.mySock.onmessage = m => {\n      this.handleIncomingFrame(m as {});\n    };\n\n    this.mySock.onerror = e => {\n      this.log_('WebSocket error.  Closing connection.');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const error = (e as any).message || (e as any).data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n    };\n  }\n\n  /**\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n   */\n  start() {}\n\n  static forceDisallow_: boolean;\n\n  static forceDisallow() {\n    WebSocketConnection.forceDisallow_ = true;\n  }\n\n  static isAvailable(): boolean {\n    let isOldAndroid = false;\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return (\n      !isOldAndroid &&\n      WebSocketImpl !== null &&\n      !WebSocketConnection.forceDisallow_\n    );\n  }\n\n  /**\n   * Number of response before we consider the connection \"healthy.\"\n   */\n  static responsesRequiredToBeHealthy = 2;\n\n  /**\n   * Time to wait for the connection te become healthy before giving up.\n   */\n  static healthyTimeout = 30000;\n\n  /**\n   * Returns true if we previously failed to connect with this transport.\n   */\n  static previouslyFailed(): boolean {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return (\n      PersistentStorage.isInMemoryStorage ||\n      PersistentStorage.get('previous_websocket_failure') === true\n    );\n  }\n\n  markConnectionHealthy() {\n    PersistentStorage.remove('previous_websocket_failure');\n  }\n\n  private appendFrame_(data: string) {\n    this.frames.push(data);\n    if (this.frames.length === this.totalFrames) {\n      const fullMess = this.frames.join('');\n      this.frames = null;\n      const jsonMess = jsonEval(fullMess) as object;\n\n      //handle the message\n      this.onMessage(jsonMess);\n    }\n  }\n\n  /**\n   * @param frameCount - The number of frames we are expecting from the server\n   */\n  private handleNewFrameCount_(frameCount: number) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  }\n\n  /**\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n   * @returns Any remaining data to be process, or null if there is none\n   */\n  private extractFrameCount_(data: string): string | null {\n    assert(this.frames === null, 'We already have a frame buffer');\n    // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n    if (data.length <= 6) {\n      const frameCount = Number(data);\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n    this.handleNewFrameCount_(1);\n    return data;\n  }\n\n  /**\n   * Process a websocket frame that has arrived from the server.\n   * @param mess - The frame data\n   */\n  handleIncomingFrame(mess: { [k: string]: unknown }) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n    const data = mess['data'] as string;\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      const remainingData = this.extractFrameCount_(data);\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  }\n\n  /**\n   * Send a message to the server\n   * @param data - The JSON object to transmit\n   */\n  send(data: {}) {\n    this.resetKeepAlive();\n\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n\n    //Send the length header\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    }\n\n    //Send the actual data in segments.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  }\n\n  private shutdown_() {\n    this.isClosed_ = true;\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  }\n\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_();\n\n      // since this is an internal close, trigger the close listener\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler.\n   * Close the websocket and kill the connection.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n   * the last activity.\n   */\n  resetKeepAlive() {\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(() => {\n      //If there has been no websocket activity for a while, send a no-op\n      if (this.mySock) {\n        this.sendString_('0');\n      }\n      this.resetKeepAlive();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL)) as any;\n  }\n\n  /**\n   * Send a string over the websocket.\n   *\n   * @param str - String to send.\n   */\n  private sendString_(str: string) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_(\n        'Exception thrown from WebSocket.send():',\n        e.message || e.data,\n        'Closing connection.'\n      );\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { warn } from '../core/util/util';\n\nimport { BrowserPollConnection } from './BrowserPollConnection';\nimport { TransportConstructor } from './Transport';\nimport { WebSocketConnection } from './WebSocketConnection';\n\n/**\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\n * lifecycle.\n *\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\n * they are available.\n */\nexport class TransportManager {\n  private transports_: TransportConstructor[];\n\n  static get ALL_TRANSPORTS() {\n    return [BrowserPollConnection, WebSocketConnection];\n  }\n\n  /**\n   * @param repoInfo - Metadata around the namespace we're connecting to\n   */\n  constructor(repoInfo: RepoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  private initTransports_(repoInfo: RepoInfo) {\n    const isWebSocketsAvailable: boolean =\n      WebSocketConnection && WebSocketConnection['isAvailable']();\n    let isSkipPollConnection =\n      isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\n          \"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\"\n        );\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      const transports = (this.transports_ = [] as TransportConstructor[]);\n      for (const transport of TransportManager.ALL_TRANSPORTS) {\n        if (transport && transport['isAvailable']()) {\n          transports.push(transport);\n        }\n      }\n    }\n  }\n\n  /**\n   * @returns The constructor for the initial transport to use\n   */\n  initialTransport(): TransportConstructor {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  }\n\n  /**\n   * @returns The constructor for the next transport, or null\n   */\n  upgradeTransport(): TransportConstructor | null {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { Indexable } from '../core/util/misc';\nimport {\n  error,\n  logWrapper,\n  requireKey,\n  setTimeoutNonBlocking,\n  warn\n} from '../core/util/util';\n\nimport { PROTOCOL_VERSION } from './Constants';\nimport { Transport, TransportConstructor } from './Transport';\nimport { TransportManager } from './TransportManager';\n\n// Abort upgrade attempt if it takes longer than 60s.\nconst UPGRADE_TIMEOUT = 60000;\n\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\n\nconst enum RealtimeState {\n  CONNECTING,\n  CONNECTED,\n  DISCONNECTED\n}\n\nconst MESSAGE_TYPE = 't';\nconst MESSAGE_DATA = 'd';\nconst CONTROL_SHUTDOWN = 's';\nconst CONTROL_RESET = 'r';\nconst CONTROL_ERROR = 'e';\nconst CONTROL_PONG = 'o';\nconst SWITCH_ACK = 'a';\nconst END_TRANSMISSION = 'n';\nconst PING = 'p';\n\nconst SERVER_HELLO = 'h';\n\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n */\nexport class Connection {\n  connectionCount = 0;\n  pendingDataMessages: unknown[] = [];\n  sessionId: string;\n\n  private conn_: Transport;\n  private healthyTimeout_: number;\n  private isHealthy_: boolean;\n  private log_: (...args: unknown[]) => void;\n  private primaryResponsesRequired_: number;\n  private rx_: Transport;\n  private secondaryConn_: Transport;\n  private secondaryResponsesRequired_: number;\n  private state_ = RealtimeState.CONNECTING;\n  private transportManager_: TransportManager;\n  private tx_: Transport;\n\n  /**\n   * @param id - an id for this connection\n   * @param repoInfo_ - the info for the endpoint to connect to\n   * @param applicationId_ - the Firebase App ID for this project\n   * @param appCheckToken_ - The App Check Token for this device.\n   * @param authToken_ - The auth token for this session.\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n   */\n  constructor(\n    public id: string,\n    private repoInfo_: RepoInfo,\n    private applicationId_: string | undefined,\n    private appCheckToken_: string | undefined,\n    private authToken_: string | undefined,\n    private onMessage_: (a: {}) => void,\n    private onReady_: (a: number, b: string) => void,\n    private onDisconnect_: () => void,\n    private onKill_: (a: string) => void,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n\n  /**\n   * Starts a connection attempt\n   */\n  private start_(): void {\n    const conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      null,\n      this.lastSessionId\n    );\n\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessageReceived = this.connReceiver_(this.conn_);\n    const onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n\n    /*\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n     * still have the context of your originating frame.\n     */\n    setTimeout(() => {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n\n    const healthyTimeoutMS = conn['healthyTimeout'] || 0;\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(() => {\n        this.healthyTimeout_ = null;\n        if (!this.isHealthy_) {\n          if (\n            this.conn_ &&\n            this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has received ' +\n                this.conn_.bytesReceived +\n                ' bytes.  Marking connection healthy.'\n            );\n            this.isHealthy_ = true;\n            this.conn_.markConnectionHealthy();\n          } else if (\n            this.conn_ &&\n            this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has sent ' +\n                this.conn_.bytesSent +\n                ' bytes.  Leaving connection alive.'\n            );\n            // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n          } else {\n            this.log_('Closing unhealthy connection after timeout.');\n            this.close();\n          }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      }, Math.floor(healthyTimeoutMS)) as any;\n    }\n  }\n\n  private nextTransportId_(): string {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  }\n\n  private disconnReceiver_(conn) {\n    return everConnected => {\n      if (conn === this.conn_) {\n        this.onConnectionLost_(everConnected);\n      } else if (conn === this.secondaryConn_) {\n        this.log_('Secondary connection lost.');\n        this.onSecondaryConnectionLost_();\n      } else {\n        this.log_('closing an old connection');\n      }\n    };\n  }\n\n  private connReceiver_(conn: Transport) {\n    return (message: Indexable) => {\n      if (this.state_ !== RealtimeState.DISCONNECTED) {\n        if (conn === this.rx_) {\n          this.onPrimaryMessageReceived_(message);\n        } else if (conn === this.secondaryConn_) {\n          this.onSecondaryMessageReceived_(message);\n        } else {\n          this.log_('message on old connection');\n        }\n      }\n    };\n  }\n\n  /**\n   * @param dataMsg - An arbitrary data message to be sent to the server\n   */\n  sendRequest(dataMsg: object) {\n    // wrap in a data message envelope and send it on\n    const msg = { t: 'd', d: dataMsg };\n    this.sendData_(msg);\n  }\n\n  tryCleanupConnection() {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_(\n        'cleaning up and promoting a connection: ' + this.secondaryConn_.connId\n      );\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null;\n      // the server will shutdown the old connection\n    }\n  }\n\n  private onSecondaryControl_(controlData: { [k: string]: unknown }) {\n    if (MESSAGE_TYPE in controlData) {\n      const cmd = controlData[MESSAGE_TYPE] as string;\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close();\n        // If we were already using this connection for something, than we need to fully close\n        if (\n          this.tx_ === this.secondaryConn_ ||\n          this.rx_ === this.secondaryConn_\n        ) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  }\n\n  private onSecondaryMessageReceived_(parsedData: Indexable) {\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onSecondaryControl_(data as Indexable);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  }\n\n  private upgradeIfSecondaryHealthy_() {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private proceedWithUpgrade_() {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start();\n    // send ack\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n\n    // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n    this.log_('Ending transmission on primary');\n    this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n    this.tx_ = this.secondaryConn_;\n\n    this.tryCleanupConnection();\n  }\n\n  private onPrimaryMessageReceived_(parsedData: { [k: string]: unknown }) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onControl_(data as { [k: string]: unknown });\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  }\n\n  private onDataMessage_(message: unknown) {\n    this.onPrimaryResponse_();\n\n    // We don't do anything with data messages, just kick them up a level\n    this.onMessage_(message);\n  }\n\n  private onPrimaryResponse_() {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  }\n\n  private onControl_(controlData: { [k: string]: unknown }) {\n    const cmd: string = requireKey(MESSAGE_TYPE, controlData) as string;\n    if (MESSAGE_DATA in controlData) {\n      const payload = controlData[MESSAGE_DATA];\n      if (cmd === SERVER_HELLO) {\n        this.onHandshake_(\n          payload as {\n            ts: number;\n            v: string;\n            h: string;\n            s: string;\n          }\n        );\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n        for (let i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload as string);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload as string);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  }\n\n  /**\n   * @param handshake - The handshake data returned from the server\n   */\n  private onHandshake_(handshake: {\n    ts: number;\n    v: string;\n    h: string;\n    s: string;\n  }): void {\n    const timestamp = handshake.ts;\n    const version = handshake.v;\n    const host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.host = host;\n    // if we've already closed the connection, then don't bother trying to progress further\n    if (this.state_ === RealtimeState.CONNECTING) {\n      this.conn_.start();\n      this.onConnectionEstablished_(this.conn_, timestamp);\n      if (PROTOCOL_VERSION !== version) {\n        warn('Protocol version mismatch detected');\n      }\n      // TODO: do we want to upgrade? when? maybe a delay?\n      this.tryStartUpgrade_();\n    }\n  }\n\n  private tryStartUpgrade_() {\n    const conn = this.transportManager_.upgradeTransport();\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  }\n\n  private startUpgrade_(conn: TransportConstructor) {\n    this.secondaryConn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      this.sessionId\n    );\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.secondaryResponsesRequired_ =\n      conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessage = this.connReceiver_(this.secondaryConn_);\n    const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect);\n\n    // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n    setTimeoutNonBlocking(() => {\n      if (this.secondaryConn_) {\n        this.log_('Timed out trying to upgrade.');\n        this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  }\n\n  private onReset_(host: string) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.host = host;\n    // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n    if (this.state_ === RealtimeState.CONNECTED) {\n      this.close();\n    } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  }\n\n  private onConnectionEstablished_(conn: Transport, timestamp: number) {\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = RealtimeState.CONNECTED;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    }\n\n    // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(() => {\n        this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  }\n\n  private sendPingOnPrimaryIfNecessary_() {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === RealtimeState.CONNECTED) {\n      this.log_('sending ping on primary.');\n      this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private onSecondaryConnectionLost_() {\n    const conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  }\n\n  /**\n   * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\n   * we should flush the host cache\n   */\n  private onConnectionLost_(everConnected: boolean) {\n    this.conn_ = null;\n\n    // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n    if (!everConnected && this.state_ === RealtimeState.CONNECTING) {\n      this.log_('Realtime connection failed.');\n      // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n      if (this.repoInfo_.isCacheableHost()) {\n        PersistentStorage.remove('host:' + this.repoInfo_.host);\n        // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n        this.repoInfo_.internalHost = this.repoInfo_.host;\n      }\n    } else if (this.state_ === RealtimeState.CONNECTED) {\n      this.log_('Realtime connection lost.');\n    }\n\n    this.close();\n  }\n\n  private onConnectionShutdown_(reason: string) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    }\n\n    // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n    this.onDisconnect_ = null;\n\n    this.close();\n  }\n\n  private sendData_(data: object) {\n    if (this.state_ !== RealtimeState.CONNECTED) {\n      throw 'Connection is not connected';\n    } else {\n      this.tx_.send(data);\n    }\n  }\n\n  /**\n   * Cleans up this connection, calling the appropriate callbacks\n   */\n  close() {\n    if (this.state_ !== RealtimeState.DISCONNECTED) {\n      this.log_('Closing realtime connection.');\n      this.state_ = RealtimeState.DISCONNECTED;\n\n      this.closeConnections_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_();\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  private closeConnections_() {\n    this.log_('Shutting down all connections');\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { QueryContext } from './view/EventRegistration';\n\n/**\n * Interface defining the set of actions that can be performed against the Firebase server\n * (basically corresponds to our wire protocol).\n *\n * @interface\n */\nexport abstract class ServerActions {\n  abstract listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ): void;\n\n  /**\n   * Remove a listen.\n   */\n  abstract unlisten(query: QueryContext, tag: number | null): void;\n\n  /**\n   * Get the server value satisfying this query.\n   */\n  abstract get(query: QueryContext): Promise<string>;\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {}\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {}\n\n  /**\n   * Refreshes the auth token for the current connection.\n   * @param token - The authentication token\n   */\n  refreshAuthToken(token: string) {}\n\n  /**\n   * Refreshes the app check token for the current connection.\n   * @param token The app check token\n   */\n  refreshAppCheckToken(token: string) {}\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  reportStats(stats: { [k: string]: unknown }) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\n/**\n * Base class to be used if you want to emit events. Call the constructor with\n * the set of allowed event names.\n */\nexport abstract class EventEmitter {\n  private listeners_: {\n    [eventType: string]: Array<{\n      callback(...args: unknown[]): void;\n      context: unknown;\n    }>;\n  } = {};\n\n  constructor(private allowedEvents_: string[]) {\n    assert(\n      Array.isArray(allowedEvents_) && allowedEvents_.length > 0,\n      'Requires a non-empty array'\n    );\n  }\n\n  /**\n   * To be overridden by derived classes in order to fire an initial event when\n   * somebody subscribes for data.\n   *\n   * @returns {Array.<*>} Array of parameters to trigger initial event with.\n   */\n  abstract getInitialEvent(eventType: string): unknown[];\n\n  /**\n   * To be called by derived classes to trigger events.\n   */\n  protected trigger(eventType: string, ...varArgs: unknown[]) {\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      const listeners = [...this.listeners_[eventType]];\n\n      for (let i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  }\n\n  on(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({ callback, context });\n\n    const eventData = this.getInitialEvent(eventType);\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  }\n\n  off(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    const listeners = this.listeners_[eventType] || [];\n    for (let i = 0; i < listeners.length; i++) {\n      if (\n        listeners[i].callback === callback &&\n        (!context || context === listeners[i].context)\n      ) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  private validateEventType_(eventType: string) {\n    assert(\n      this.allowedEvents_.find(et => {\n        return et === eventType;\n      }),\n      'Unknown event: ' + eventType\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isMobileCordova } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\n/**\n * Monitors online state (as reported by window.online/offline events).\n *\n * The expectation is that this could have many false positives (thinks we are online\n * when we're not), but no false negatives.  So we can safely use it to determine when\n * we definitely cannot reach the internet.\n */\nexport class OnlineMonitor extends EventEmitter {\n  private online_ = true;\n\n  static getInstance() {\n    return new OnlineMonitor();\n  }\n\n  constructor() {\n    super(['online']);\n\n    // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window.addEventListener !== 'undefined' &&\n      !isMobileCordova()\n    ) {\n      window.addEventListener(\n        'online',\n        () => {\n          if (!this.online_) {\n            this.online_ = true;\n            this.trigger('online', true);\n          }\n        },\n        false\n      );\n\n      window.addEventListener(\n        'offline',\n        () => {\n          if (this.online_) {\n            this.online_ = false;\n            this.trigger('online', false);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  }\n\n  currentlyOnline(): boolean {\n    return this.online_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringLength } from '@firebase/util';\n\nimport { nameCompare } from './util';\n\n/** Maximum key depth. */\nconst MAX_PATH_DEPTH = 32;\n\n/** Maximum number of (UTF8) bytes in a Firebase path. */\nconst MAX_PATH_LENGTH_BYTES = 768;\n\n/**\n * An immutable object representing a parsed path.  It's immutable so that you\n * can pass them around to other functions without worrying about them changing\n * it.\n */\n\nexport class Path {\n  pieces_: string[];\n  pieceNum_: number;\n\n  /**\n   * @param pathOrString - Path string to parse, or another path, or the raw\n   * tokens array\n   */\n  constructor(pathOrString: string | string[], pieceNum?: number) {\n    if (pieceNum === void 0) {\n      this.pieces_ = (pathOrString as string).split('/');\n\n      // Remove empty pieces.\n      let copyTo = 0;\n      for (let i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n      this.pieces_.length = copyTo;\n\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString as string[];\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  toString(): string {\n    let pathString = '';\n    for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  }\n}\n\nexport function newEmptyPath(): Path {\n  return new Path('');\n}\n\nexport function pathGetFront(path: Path): string | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n\n/**\n * @returns The number of segments in this path\n */\nexport function pathGetLength(path: Path): number {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nexport function pathPopFront(path: Path): Path {\n  let pieceNum = path.pieceNum_;\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n  return new Path(path.pieces_, pieceNum);\n}\n\nexport function pathGetBack(path: Path): string | null {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nexport function pathToUrlEncodedString(path: Path): string {\n  let pathString = '';\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n\n/**\n * Shallow copy of the parts of the path.\n *\n */\nexport function pathSlice(path: Path, begin: number = 0): string[] {\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nexport function pathParent(path: Path): Path | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nexport function pathChild(path: Path, childPathObj: string | Path): Path {\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (let i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    const childPieces = childPathObj.split('/');\n    for (let i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n\n/**\n * @returns True if there are no segments in this path\n */\nexport function pathIsEmpty(path: Path): boolean {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n\n/**\n * @returns The path from outerPath to innerPath\n */\nexport function newRelativePath(outerPath: Path, innerPath: Path): Path {\n  const outer = pathGetFront(outerPath),\n    inner = pathGetFront(innerPath);\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error(\n      'INTERNAL ERROR: innerPath (' +\n        innerPath +\n        ') is not within ' +\n        'outerPath (' +\n        outerPath +\n        ')'\n    );\n  }\n}\n\n/**\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\n */\nexport function pathCompare(left: Path, right: Path): number {\n  const leftKeys = pathSlice(left, 0);\n  const rightKeys = pathSlice(right, 0);\n  for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    const cmp = nameCompare(leftKeys[i], rightKeys[i]);\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n\n/**\n * @returns true if paths are the same.\n */\nexport function pathEquals(path: Path, other: Path): boolean {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (\n    let i = path.pieceNum_, j = other.pieceNum_;\n    i <= path.pieces_.length;\n    i++, j++\n  ) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @returns True if this path is a parent (or the same as) other\n */\nexport function pathContains(path: Path, other: Path): boolean {\n  let i = path.pieceNum_;\n  let j = other.pieceNum_;\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n    ++i;\n    ++j;\n  }\n  return true;\n}\n\n/**\n * Dynamic (mutable) path used to count path lengths.\n *\n * This class is used to efficiently check paths for valid\n * length (in UTF8 bytes) and depth (used in path validation).\n *\n * Throws Error exception if path is ever invalid.\n *\n * The definition of a path always begins with '/'.\n */\nexport class ValidationPath {\n  parts_: string[];\n  /** Initialize to number of '/' chars needed in path. */\n  byteLength_: number;\n\n  /**\n   * @param path - Initial Path.\n   * @param errorPrefix_ - Prefix for any error messages.\n   */\n  constructor(path: Path, public errorPrefix_: string) {\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (let i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n    validationPathCheckValid(this);\n  }\n}\n\nexport function validationPathPush(\n  validationPath: ValidationPath,\n  child: string\n): void {\n  // Count the needed '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ += 1;\n  }\n  validationPath.parts_.push(child);\n  validationPath.byteLength_ += stringLength(child);\n  validationPathCheckValid(validationPath);\n}\n\nexport function validationPathPop(validationPath: ValidationPath): void {\n  const last = validationPath.parts_.pop();\n  validationPath.byteLength_ -= stringLength(last);\n  // Un-count the previous '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ -= 1;\n  }\n}\n\nfunction validationPathCheckValid(validationPath: ValidationPath): void {\n  if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'has a key path longer than ' +\n        MAX_PATH_LENGTH_BYTES +\n        ' bytes (' +\n        validationPath.byteLength_ +\n        ').'\n    );\n  }\n  if (validationPath.parts_.length > MAX_PATH_DEPTH) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'path specified exceeds the maximum depth that can be written (' +\n        MAX_PATH_DEPTH +\n        ') or object contains a cycle ' +\n        validationPathToErrorString(validationPath)\n    );\n  }\n}\n\n/**\n * String for use in error messages - uses '.' notation for path.\n */\nexport function validationPathToErrorString(\n  validationPath: ValidationPath\n): string {\n  if (validationPath.parts_.length === 0) {\n    return '';\n  }\n  return \"in property '\" + validationPath.parts_.join('.') + \"'\";\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\ndeclare const document: Document;\n\nexport class VisibilityMonitor extends EventEmitter {\n  private visible_: boolean;\n\n  static getInstance() {\n    return new VisibilityMonitor();\n  }\n\n  constructor() {\n    super(['visible']);\n    let hidden: string;\n    let visibilityChange: string;\n    if (\n      typeof document !== 'undefined' &&\n      typeof document.addEventListener !== 'undefined'\n    ) {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    }\n\n    // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n    this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(\n        visibilityChange,\n        () => {\n          const visible = !document[hidden];\n          if (visible !== this.visible_) {\n            this.visible_ = visible;\n            this.trigger('visible', visible);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  Deferred,\n  isEmpty,\n  isMobileCordova,\n  isNodeSdk,\n  isReactNative,\n  isValidFormat,\n  safeGet,\n  stringify,\n  isAdmin\n} from '@firebase/util';\n\nimport { Connection } from '../realtime/Connection';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { OnlineMonitor } from './util/OnlineMonitor';\nimport { Path } from './util/Path';\nimport { error, log, logWrapper, warn, ObjectToUniqueKey } from './util/util';\nimport { VisibilityMonitor } from './util/VisibilityMonitor';\nimport { SDK_VERSION } from './version';\nimport { QueryContext } from './view/EventRegistration';\n\nconst RECONNECT_MIN_DELAY = 1000;\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nconst GET_CONNECT_TIMEOUT = 3 * 1000;\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nconst INVALID_TOKEN_THRESHOLD = 3;\n\ninterface ListenSpec {\n  onComplete(s: string, p?: unknown): void;\n\n  hashFn(): string;\n\n  query: QueryContext;\n  tag: number | null;\n}\n\ninterface OnDisconnectRequest {\n  pathString: string;\n  action: string;\n  data: unknown;\n  onComplete?: (a: string, b: string) => void;\n}\n\ninterface OutstandingPut {\n  action: string;\n  request: object;\n  queued?: boolean;\n  onComplete: (a: string, b?: string) => void;\n}\n\ninterface OutstandingGet {\n  request: object;\n  onComplete: (response: { [k: string]: unknown }) => void;\n}\n\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nexport class PersistentConnection extends ServerActions {\n  // Used for diagnostic logging.\n  id = PersistentConnection.nextPersistentConnectionId_++;\n  private log_ = logWrapper('p:' + this.id + ':');\n\n  private interruptReasons_: { [reason: string]: boolean } = {};\n  private readonly listens: Map<\n    /* path */ string,\n    Map</* queryId */ string, ListenSpec>\n  > = new Map();\n  private outstandingPuts_: OutstandingPut[] = [];\n  private outstandingGets_: OutstandingGet[] = [];\n  private outstandingPutCount_ = 0;\n  private outstandingGetCount_ = 0;\n  private onDisconnectRequestQueue_: OnDisconnectRequest[] = [];\n  private connected_ = false;\n  private reconnectDelay_ = RECONNECT_MIN_DELAY;\n  private maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n  private securityDebugCallback_: ((a: object) => void) | null = null;\n  lastSessionId: string | null = null;\n\n  private establishConnectionTimer_: number | null = null;\n\n  private visible_: boolean = false;\n\n  // Before we get connected, we keep a queue of pending messages to send.\n  private requestCBHash_: { [k: number]: (a: unknown) => void } = {};\n  private requestNumber_ = 0;\n\n  private realtime_: {\n    sendRequest(a: object): void;\n    close(): void;\n  } | null = null;\n\n  private authToken_: string | null = null;\n  private appCheckToken_: string | null = null;\n  private forceTokenRefresh_ = false;\n  private invalidAuthTokenCount_ = 0;\n  private invalidAppCheckTokenCount_ = 0;\n\n  private firstConnection_ = true;\n  private lastConnectionAttemptTime_: number | null = null;\n  private lastConnectionEstablishedTime_: number | null = null;\n\n  private static nextPersistentConnectionId_ = 0;\n\n  /**\n   * Counter for number of connections created. Mainly used for tagging in the logs\n   */\n  private static nextConnectionId_ = 0;\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param applicationId_ - The Firebase App ID for this project\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private applicationId_: string,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private onConnectStatus_: (a: boolean) => void,\n    private onServerInfoUpdate_: (a: unknown) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider,\n    private authOverride_?: object | null\n  ) {\n    super();\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error(\n        'Auth override specified in options, but not supported on non Node.js platforms'\n      );\n    }\n\n    VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', this.onOnline_, this);\n    }\n  }\n\n  protected sendRequest(\n    action: string,\n    body: unknown,\n    onResponse?: (a: unknown) => void\n  ) {\n    const curReqNum = ++this.requestNumber_;\n\n    const msg = { r: curReqNum, a: action, b: body };\n    this.log_(stringify(msg));\n    assert(\n      this.connected_,\n      \"sendRequest call when we're not connected not allowed.\"\n    );\n    this.realtime_.sendRequest(msg);\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  }\n\n  get(query: QueryContext): Promise<string> {\n    this.initConnection_();\n\n    const deferred = new Deferred<string>();\n    const request = {\n      p: query._path.toString(),\n      q: query._queryObject\n    };\n    const outstandingGet = {\n      action: 'g',\n      request,\n      onComplete: (message: { [k: string]: unknown }) => {\n        const payload = message['d'] as string;\n        if (message['s'] === 'ok') {\n          this.onDataUpdate_(\n            request['p'],\n            payload,\n            /*isMerge*/ false,\n            /*tag*/ null\n          );\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    const index = this.outstandingGets_.length - 1;\n\n    if (!this.connected_) {\n      setTimeout(() => {\n        const get = this.outstandingGets_[index];\n        if (get === undefined || outstandingGet !== get) {\n          return;\n        }\n        delete this.outstandingGets_[index];\n        this.outstandingGetCount_--;\n        if (this.outstandingGetCount_ === 0) {\n          this.outstandingGets_ = [];\n        }\n        this.log_('get ' + index + ' timed out on connection');\n        deferred.reject(new Error('Client is offline.'));\n      }, GET_CONNECT_TIMEOUT);\n    }\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  }\n\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    this.initConnection_();\n\n    const queryId = query._queryIdentifier;\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'listen() called for non-default but complete query'\n    );\n    assert(\n      !this.listens.get(pathString)!.has(queryId),\n      'listen() called twice for same path/queryId.'\n    );\n    const listenSpec: ListenSpec = {\n      onComplete,\n      hashFn: currentHashFn,\n      query,\n      tag\n    };\n    this.listens.get(pathString)!.set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  }\n\n  private sendGet_(index: number) {\n    const get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, (message: { [k: string]: unknown }) => {\n      delete this.outstandingGets_[index];\n      this.outstandingGetCount_--;\n      if (this.outstandingGetCount_ === 0) {\n        this.outstandingGets_ = [];\n      }\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  }\n\n  private sendListen_(listenSpec: ListenSpec) {\n    const query = listenSpec.query;\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n\n    const action = 'q';\n\n    // Only bother to send query if it's non-default.\n    if (listenSpec.tag) {\n      req['q'] = query._queryObject;\n      req['t'] = listenSpec.tag;\n    }\n\n    req[/*hash*/ 'h'] = listenSpec.hashFn();\n\n    this.sendRequest(action, req, (message: { [k: string]: unknown }) => {\n      const payload: unknown = message[/*data*/ 'd'];\n      const status = message[/*status*/ 's'] as string;\n\n      // print warnings in any case...\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      const currentListenSpec =\n        this.listens.get(pathString) &&\n        this.listens.get(pathString)!.get(queryId);\n      // only trigger actions if the listen hasn't been removed and readded\n      if (currentListenSpec === listenSpec) {\n        this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  }\n\n  private static warnOnListenWarnings_(payload: unknown, query: QueryContext) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const warnings = safeGet(payload as any, 'w');\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        const indexSpec =\n          '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\n        const indexPath = query._path.toString();\n        warn(\n          `Using an unspecified index. Your data will be downloaded and ` +\n            `filtered on the client. Consider adding ${indexSpec} at ` +\n            `${indexPath} to your security rules for better performance.`\n        );\n      }\n    }\n  }\n\n  refreshAuthToken(token: string) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, () => {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  }\n\n  private reduceReconnectDelayIfAdminCredential_(credential: string) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    const isFirebaseSecret = credential && credential.length === 40;\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_(\n        'Admin auth credential detected.  Reducing max reconnect time.'\n      );\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  }\n\n  refreshAppCheckToken(token: string | null) {\n    this.appCheckToken_ = token;\n    this.log_('App check token refreshed');\n    if (this.appCheckToken_) {\n      this.tryAppCheck();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us.\n      //If we're not connected, simply delete the credential so we dont become\n      // authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unappeck', {}, () => {});\n      }\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n   * a auth revoked (the connection is closed).\n   */\n  tryAuth() {\n    if (this.connected_ && this.authToken_) {\n      const token = this.authToken_;\n      const authMethod = isValidFormat(token) ? 'auth' : 'gauth';\n      const requestData: { [k: string]: unknown } = { cred: token };\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n      this.sendRequest(\n        authMethod,\n        requestData,\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n\n          if (this.authToken_ === token) {\n            if (status === 'ok') {\n              this.invalidAuthTokenCount_ = 0;\n            } else {\n              // Triggers reconnect and force refresh for auth token\n              this.onAuthRevoked_(status, data);\n            }\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given token. If the authentication\n   * attempt fails, it's triggered like the token was revoked (the connection is\n   * closed).\n   */\n  tryAppCheck() {\n    if (this.connected_ && this.appCheckToken_) {\n      this.sendRequest(\n        'appcheck',\n        { 'token': this.appCheckToken_ },\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n          if (status === 'ok') {\n            this.invalidAppCheckTokenCount_ = 0;\n          } else {\n            this.onAppCheckRevoked_(status, data);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  unlisten(query: QueryContext, tag: number | null) {\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'unlisten() called for non-default but complete query'\n    );\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\n    }\n  }\n\n  private sendUnlisten_(\n    pathString: string,\n    queryId: string,\n    queryObj: object,\n    tag: number | null\n  ) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n    const action = 'n';\n    // Only bother sending queryId if it's non-default.\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  }\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'o',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'om',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'oc',\n        data: null,\n        onComplete\n      });\n    }\n  }\n\n  private sendOnDisconnect_(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string) => void\n  ) {\n    const request = { /*path*/ p: pathString, /*data*/ d: data };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, (response: { [k: string]: unknown }) => {\n      if (onComplete) {\n        setTimeout(() => {\n          onComplete(\n            response[/*status*/ 's'] as string,\n            response[/* data */ 'd'] as string\n          );\n        }, Math.floor(0));\n      }\n    });\n  }\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  }\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  }\n\n  putInternal(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.initConnection_();\n\n    const request: { [k: string]: unknown } = {\n      /*path*/ p: pathString,\n      /*data*/ d: data\n    };\n\n    if (hash !== undefined) {\n      request[/*hash*/ 'h'] = hash;\n    }\n\n    // TODO: Only keep track of the most recent put for a given path?\n    this.outstandingPuts_.push({\n      action,\n      request,\n      onComplete\n    });\n\n    this.outstandingPutCount_++;\n    const index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  }\n\n  private sendPut_(index: number) {\n    const action = this.outstandingPuts_[index].action;\n    const request = this.outstandingPuts_[index].request;\n    const onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n\n    this.sendRequest(action, request, (message: { [k: string]: unknown }) => {\n      this.log_(action + ' response', message);\n\n      delete this.outstandingPuts_[index];\n      this.outstandingPutCount_--;\n\n      // Clean up array occasionally.\n      if (this.outstandingPutCount_ === 0) {\n        this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(\n          message[/*status*/ 's'] as string,\n          message[/* data */ 'd'] as string\n        );\n      }\n    });\n  }\n\n  reportStats(stats: { [k: string]: unknown }) {\n    // If we're not connected, we just drop the stats.\n    if (this.connected_) {\n      const request = { /*counters*/ c: stats };\n      this.log_('reportStats', request);\n\n      this.sendRequest(/*stats*/ 's', request, result => {\n        const status = result[/*status*/ 's'];\n        if (status !== 'ok') {\n          const errorReason = result[/* data */ 'd'];\n          this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  }\n\n  private onDataMessage_(message: { [k: string]: unknown }) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      const reqNum = message['r'] as string;\n      const onResponse = this.requestCBHash_[reqNum];\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[/*body*/ 'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'] as string, message['b'] as {});\n    }\n  }\n\n  private onDataPush_(action: string, body: { [k: string]: unknown }) {\n    this.log_('handleServerMessage', action, body);\n    if (action === 'd') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge*/ false,\n        body['t'] as number\n      );\n    } else if (action === 'm') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge=*/ true,\n        body['t'] as number\n      );\n    } else if (action === 'c') {\n      this.onListenRevoked_(\n        body[/*path*/ 'p'] as string,\n        body[/*query*/ 'q'] as unknown[]\n      );\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'apc') {\n      this.onAppCheckRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error(\n        'Unrecognized action received from server: ' +\n          stringify(action) +\n          '\\nAre you using the latest client?'\n      );\n    }\n  }\n\n  private onReady_(timestamp: number, sessionId: string) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  }\n\n  private scheduleConnect_(timeout: number) {\n    assert(\n      !this.realtime_,\n      \"Scheduling a connect when we're already connected/ing?\"\n    );\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    }\n\n    // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n    this.establishConnectionTimer_ = setTimeout(() => {\n      this.establishConnectionTimer_ = null;\n      this.establishConnection_();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(timeout)) as any;\n  }\n\n  private initConnection_() {\n    if (!this.realtime_ && this.firstConnection_) {\n      this.scheduleConnect_(0);\n    }\n  }\n\n  private onVisible_(visible: boolean) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (\n      visible &&\n      !this.visible_ &&\n      this.reconnectDelay_ === this.maxReconnectDelay_\n    ) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n    this.visible_ = visible;\n  }\n\n  private onOnline_(online: boolean) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  }\n\n  private onRealtimeDisconnect_() {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null;\n\n    // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n    this.cancelSentTransactions_();\n\n    // Clear out the pending requests.\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        const timeSinceLastConnectSucceeded =\n          new Date().getTime() - this.lastConnectionEstablishedTime_;\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      const timeSinceLastConnectAttempt =\n        new Date().getTime() - this.lastConnectionAttemptTime_;\n      let reconnectDelay = Math.max(\n        0,\n        this.reconnectDelay_ - timeSinceLastConnectAttempt\n      );\n      reconnectDelay = Math.random() * reconnectDelay;\n\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay);\n\n      // Adjust reconnect delay for next time.\n      this.reconnectDelay_ = Math.min(\n        this.maxReconnectDelay_,\n        this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER\n      );\n    }\n    this.onConnectStatus_(false);\n  }\n\n  private async establishConnection_() {\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      const onDataMessage = this.onDataMessage_.bind(this);\n      const onReady = this.onReady_.bind(this);\n      const onDisconnect = this.onRealtimeDisconnect_.bind(this);\n      const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      const lastSessionId = this.lastSessionId;\n      let canceled = false;\n      let connection: Connection | null = null;\n      const closeFn = function () {\n        if (connection) {\n          connection.close();\n        } else {\n          canceled = true;\n          onDisconnect();\n        }\n      };\n      const sendRequestFn = function (msg: object) {\n        assert(\n          connection,\n          \"sendRequest call when we're not connected not allowed.\"\n        );\n        connection.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn,\n        sendRequest: sendRequestFn\n      };\n\n      const forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false;\n\n      try {\n        // First fetch auth and app check token, and establish connection after\n        // fetching the token was successful\n        const [authToken, appCheckToken] = await Promise.all([\n          this.authTokenProvider_.getToken(forceRefresh),\n          this.appCheckTokenProvider_.getToken(forceRefresh)\n        ]);\n\n        if (!canceled) {\n          log('getToken() completed. Creating connection.');\n          this.authToken_ = authToken && authToken.accessToken;\n          this.appCheckToken_ = appCheckToken && appCheckToken.token;\n          connection = new Connection(\n            connId,\n            this.repoInfo_,\n            this.applicationId_,\n            this.appCheckToken_,\n            this.authToken_,\n            onDataMessage,\n            onReady,\n            onDisconnect,\n            /* onKill= */ reason => {\n              warn(reason + ' (' + this.repoInfo_.toString() + ')');\n              this.interrupt(SERVER_KILL_INTERRUPT_REASON);\n            },\n            lastSessionId\n          );\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      } catch (error) {\n        this.log_('Failed to get token: ' + error);\n        if (!canceled) {\n          if (this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n          closeFn();\n        }\n      }\n    }\n  }\n\n  interrupt(reason: string) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  }\n\n  resume(reason: string) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  }\n\n  private handleTimestamp_(timestamp: number) {\n    const delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({ serverTimeOffset: delta });\n  }\n\n  private cancelSentTransactions_() {\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      const put = this.outstandingPuts_[i];\n      if (put && /*hash*/ 'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    }\n\n    // Clean up array occasionally.\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  }\n\n  private onListenRevoked_(pathString: string, query?: unknown[]) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    let queryId;\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\n    }\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  }\n\n  private removeListen_(pathString: string, queryId: string): ListenSpec {\n    const normalizedPathString = new Path(pathString).toString(); // normalize path.\n    let listen;\n    if (this.listens.has(normalizedPathString)) {\n      const map = this.listens.get(normalizedPathString)!;\n      listen = map.get(queryId);\n      map.delete(queryId);\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n    return listen;\n  }\n\n  private onAuthRevoked_(statusCode: string, explanation: string) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n      if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n\n        // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onAppCheckRevoked_(statusCode: string, explanation: string) {\n    log('App check token revoked: ' + statusCode + '/' + explanation);\n    this.appCheckToken_ = null;\n    this.forceTokenRefresh_ = true;\n    // Note: We don't close the connection as the developer may not have\n    // enforcement enabled. The backend closes connections with enforcements.\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAppCheckTokenCount_++;\n      if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        this.appCheckTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onSecurityDebugPacket_(body: { [k: string]: unknown }) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log(\n          'FIREBASE: ' + (body['msg'] as string).replace('\\n', '\\nFIREBASE: ')\n        );\n      }\n    }\n  }\n\n  private restoreState_() {\n    //Re-authenticate ourselves if we have a credential stored.\n    this.tryAuth();\n    this.tryAppCheck();\n\n    // Puts depend on having received the corresponding data update from the server before they complete, so we must\n    // make sure to send listens before puts.\n    for (const queries of this.listens.values()) {\n      for (const listenSpec of queries.values()) {\n        this.sendListen_(listenSpec);\n      }\n    }\n\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      const request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(\n        request.action,\n        request.pathString,\n        request.data,\n        request.onComplete\n      );\n    }\n\n    for (let i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  }\n\n  /**\n   * Sends client stats for first connection\n   */\n  private sendConnectStats_() {\n    const stats: { [k: string]: number } = {};\n\n    let clientName = 'js';\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n    this.reportStats(stats);\n  }\n\n  private shouldReconnect_(): boolean {\n    const online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\nimport { Index } from './indexes/Index';\n\n/**\n * Node is an interface defining the common functionality for nodes in\n * a DataSnapshot.\n *\n * @interface\n */\nexport interface Node {\n  /**\n   * Whether this node is a leaf node.\n   * @returns Whether this is a leaf node.\n   */\n  isLeafNode(): boolean;\n\n  /**\n   * Gets the priority of the node.\n   * @returns The priority of the node.\n   */\n  getPriority(): Node;\n\n  /**\n   * Returns a duplicate node with the new priority.\n   * @param newPriorityNode - New priority to set for the node.\n   * @returns Node with new priority.\n   */\n  updatePriority(newPriorityNode: Node): Node;\n\n  /**\n   * Returns the specified immediate child, or null if it doesn't exist.\n   * @param childName - The name of the child to retrieve.\n   * @returns The retrieved child, or an empty node.\n   */\n  getImmediateChild(childName: string): Node;\n\n  /**\n   * Returns a child by path, or null if it doesn't exist.\n   * @param path - The path of the child to retrieve.\n   * @returns The retrieved child or an empty node.\n   */\n  getChild(path: Path): Node;\n\n  /**\n   * Returns the name of the child immediately prior to the specified childNode, or null.\n   * @param childName - The name of the child to find the predecessor of.\n   * @param childNode - The node to find the predecessor of.\n   * @param index - The index to use to determine the predecessor\n   * @returns The name of the predecessor child, or null if childNode is the first child.\n   */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string | null;\n\n  /**\n   * Returns a duplicate node, with the specified immediate child updated.\n   * Any value in the node will be removed.\n   * @param childName - The name of the child to update.\n   * @param newChildNode - The new child node\n   * @returns The updated node.\n   */\n  updateImmediateChild(childName: string, newChildNode: Node): Node;\n\n  /**\n   * Returns a duplicate node, with the specified child updated.  Any value will\n   * be removed.\n   * @param path - The path of the child to update.\n   * @param newChildNode - The new child node, which may be an empty node\n   * @returns The updated node.\n   */\n  updateChild(path: Path, newChildNode: Node): Node;\n\n  /**\n   * True if the immediate child specified exists\n   */\n  hasChild(childName: string): boolean;\n\n  /**\n   * @returns True if this node has no value or children.\n   */\n  isEmpty(): boolean;\n\n  /**\n   * @returns The number of children of this node.\n   */\n  numChildren(): number;\n\n  /**\n   * Calls action for each child.\n   * @param action - Action to be called for\n   * each child.  It's passed the child name and the child node.\n   * @returns The first truthy value return by action, or the last falsey one\n   */\n  forEachChild(index: Index, action: (a: string, b: Node) => void): unknown;\n\n  /**\n   * @param exportFormat - True for export format (also wire protocol format).\n   * @returns Value of this node as JSON.\n   */\n  val(exportFormat?: boolean): unknown;\n\n  /**\n   * @returns hash representing the node contents.\n   */\n  hash(): string;\n\n  /**\n   * @param other - Another node\n   * @returns -1 for less than, 0 for equal, 1 for greater than other\n   */\n  compareTo(other: Node): number;\n\n  /**\n   * @returns Whether or not this snapshot equals other\n   */\n  equals(other: Node): boolean;\n\n  /**\n   * @returns This node, with the specified index now available\n   */\n  withIndex(indexDefinition: Index): Node;\n\n  isIndexed(indexDefinition: Index): boolean;\n}\n\nexport class NamedNode {\n  constructor(public name: string, public node: Node) {}\n\n  static Wrap(name: string, node: Node) {\n    return new NamedNode(name, node);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Comparator } from '../../util/SortedMap';\nimport { MIN_NAME } from '../../util/util';\nimport { Node, NamedNode } from '../Node';\n\nexport abstract class Index {\n  abstract compare(a: NamedNode, b: NamedNode): number;\n\n  abstract isDefinedOn(node: Node): boolean;\n\n  /**\n   * @returns A standalone comparison function for\n   * this index\n   */\n  getCompare(): Comparator<NamedNode> {\n    return this.compare.bind(this);\n  }\n\n  /**\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\n   *\n   *\n   * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    const oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    const newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  }\n\n  /**\n   * @returns a node wrapper that will sort equal to or less than\n   * any other node wrapper, using this index\n   */\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @returns a node wrapper that will sort greater than or equal to\n   * any other node wrapper, using this index\n   */\n  abstract maxPost(): NamedNode;\n\n  abstract makePost(indexValue: unknown, name: string): NamedNode;\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  abstract toString(): string;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { ChildrenNode } from '../ChildrenNode';\nimport { Node, NamedNode } from '../Node';\n\nimport { Index } from './Index';\n\nlet __EMPTY_NODE: ChildrenNode;\n\nexport class KeyIndex extends Index {\n  static get __EMPTY_NODE() {\n    return __EMPTY_NODE;\n  }\n\n  static set __EMPTY_NODE(val) {\n    __EMPTY_NODE = val;\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    return nameCompare(a.name, b.name);\n  }\n  isDefinedOn(node: Node): boolean {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return false; // The key for a node never changes.\n  }\n  minPost() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  }\n\n  makePost(indexValue: string, name: string): NamedNode {\n    assert(\n      typeof indexValue === 'string',\n      'KeyIndex indexValue must always be a string.'\n    );\n    // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.key';\n  }\n}\n\nexport const KEY_INDEX = new KeyIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implementation of an immutable SortedMap using a Left-leaning\n * Red-Black Tree, adapted from the implementation in Mugs\n * (http://mads379.github.com/mugs/) by Mads Hartmann Jensen\n * (mads379\\@gmail.com).\n *\n * Original paper on Left-leaning Red-Black Trees:\n *   http://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf\n *\n * Invariant 1: No red node has a red child\n * Invariant 2: Every leaf path has the same number of black nodes\n * Invariant 3: Only the left child can be red (left leaning)\n */\n\n// TODO: There are some improvements I'd like to make to improve memory / perf:\n//  * Create two prototypes, LLRedNode and LLBlackNode, instead of storing a\n//    color property in every node.\n// TODO: It would also be good (and possibly necessary) to create a base\n// interface for LLRBNode and LLRBEmptyNode.\n\nexport type Comparator<K> = (key1: K, key2: K) => number;\n\n/**\n * An iterator over an LLRBNode.\n */\nexport class SortedMapIterator<K, V, T> {\n  private nodeStack_: Array<LLRBNode<K, V> | LLRBEmptyNode<K, V>> = [];\n\n  /**\n   * @param node - Node to iterate.\n   * @param isReverse_ - Whether or not to iterate in reverse\n   */\n  constructor(\n    node: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    startKey: K | null,\n    comparator: Comparator<K>,\n    private isReverse_: boolean,\n    private resultGenerator_: ((k: K, v: V) => T) | null = null\n  ) {\n    let cmp = 1;\n    while (!node.isEmpty()) {\n      node = node as LLRBNode<K, V>;\n      cmp = startKey ? comparator(node.key, startKey) : 1;\n      // flip the comparison if we're going in reverse\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  getNext(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    let node = this.nodeStack_.pop();\n    let result: T;\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = { key: node.key, value: node.value } as unknown as T;\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  }\n\n  hasNext(): boolean {\n    return this.nodeStack_.length > 0;\n  }\n\n  peek(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    const node = this.nodeStack_[this.nodeStack_.length - 1];\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return { key: node.key, value: node.value } as unknown as T;\n    }\n  }\n}\n\n/**\n * Represents a node in a Left-leaning Red-Black tree.\n */\nexport class LLRBNode<K, V> {\n  color: boolean;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n\n  /**\n   * @param key - Key associated with this node.\n   * @param value - Value associated with this node.\n   * @param color - Whether this node is red.\n   * @param left - Left child.\n   * @param right - Right child.\n   */\n  constructor(\n    public key: K,\n    public value: V,\n    color: boolean | null,\n    left?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ) {\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left =\n      left != null ? left : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n    this.right =\n      right != null ? right : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n  }\n\n  static RED = true;\n  static BLACK = false;\n\n  /**\n   * Returns a copy of the current node, optionally replacing pieces of it.\n   *\n   * @param key - New key for the node, or null.\n   * @param value - New value for the node, or null.\n   * @param color - New color for the node, or null.\n   * @param left - New left child for the node, or null.\n   * @param right - New right child for the node, or null.\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBNode<K, V> {\n    return new LLRBNode(\n      key != null ? key : this.key,\n      value != null ? value : this.value,\n      color != null ? color : this.color,\n      left != null ? left : this.left,\n      right != null ? right : this.right\n    );\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return this.left.count() + 1 + this.right.count();\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   *   node.  If it returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return (\n      this.left.inorderTraversal(action) ||\n      !!action(this.key, this.value) ||\n      this.right.inorderTraversal(action)\n    );\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return (\n      this.right.reverseTraversal(action) ||\n      action(this.key, this.value) ||\n      this.left.reverseTraversal(action)\n    );\n  }\n\n  /**\n   * @returns The minimum node in the tree.\n   */\n  private min_(): LLRBNode<K, V> {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return (this.left as LLRBNode<K, V>).min_();\n    }\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  minKey(): K {\n    return this.min_().key;\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  maxKey(): K {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  }\n\n  /**\n   * @param key - Key to insert.\n   * @param value - Value to insert.\n   * @param comparator - Comparator.\n   * @returns New tree, with the key/value added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    const cmp = comparator(key, n.key);\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        n.right.insert(key, value, comparator)\n      );\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns New tree, with the minimum key removed.\n   */\n  private removeMin_(): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n    }\n    let n: LLRBNode<K, V> = this;\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n    n = n.copy(null, null, null, (n.left as LLRBNode<K, V>).removeMin_(), null);\n    return n.fixUp_();\n  }\n\n  /**\n   * @param key - The key of the item to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with the specified item removed.\n   */\n  remove(\n    key: K,\n    comparator: Comparator<K>\n  ): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    let n, smallest;\n    n = this;\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n        } else {\n          smallest = (n.right as LLRBNode<K, V>).min_();\n          n = n.copy(\n            smallest.key,\n            smallest.value,\n            null,\n            null,\n            (n.right as LLRBNode<K, V>).removeMin_()\n          );\n        }\n      }\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns Whether this is a RED node.\n   */\n  isRed_(): boolean {\n    return this.color;\n  }\n\n  /**\n   * @returns New tree after performing any needed rotations.\n   */\n  private fixUp_(): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedLeft.\n   */\n  private moveRedLeft_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.right.left.isRed_()) {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        (n.right as LLRBNode<K, V>).rotateRight_()\n      );\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedRight.\n   */\n  private moveRedRight_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after rotateLeft.\n   */\n  private rotateLeft_(): LLRBNode<K, V> {\n    const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns New tree, after rotateRight.\n   */\n  private rotateRight_(): LLRBNode<K, V> {\n    const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns Newt ree, after colorFlip.\n   */\n  private colorFlip_(): LLRBNode<K, V> {\n    const left = this.left.copy(null, null, !this.left.color, null, null);\n    const right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  }\n\n  /**\n   * For testing.\n   *\n   * @returns True if all is well.\n   */\n  private checkMaxDepth_(): boolean {\n    const blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  }\n\n  check_(): number {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error(\n        'Red node has red child(' + this.key + ',' + this.value + ')'\n      );\n    }\n    if (this.right.isRed_()) {\n      throw new Error(\n        'Right child of (' + this.key + ',' + this.value + ') is red'\n      );\n    }\n    const blackDepth = this.left.check_();\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  }\n}\n\n/**\n * Represents an empty node (a leaf node in the Red-Black Tree).\n */\nexport class LLRBEmptyNode<K, V> {\n  key: K;\n  value: V;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  color: boolean;\n\n  /**\n   * Returns a copy of the current node.\n   *\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key/value added.\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @param comparator - Comparator.\n   * @returns New tree, with item added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    return new LLRBNode(key, value, null);\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with item removed.\n   */\n  remove(key: K, comparator: Comparator<K>): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return 0;\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return true;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return false;\n  }\n\n  minKey(): null {\n    return null;\n  }\n\n  maxKey(): null {\n    return null;\n  }\n\n  check_(): number {\n    return 0;\n  }\n\n  /**\n   * @returns Whether this node is red.\n   */\n  isRed_() {\n    return false;\n  }\n}\n\n/**\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\n * tree.\n */\nexport class SortedMap<K, V> {\n  /**\n   * Always use the same empty node, to reduce memory.\n   */\n  static EMPTY_NODE = new LLRBEmptyNode();\n\n  /**\n   * @param comparator_ - Key comparator.\n   * @param root_ - Optional root node for the map.\n   */\n  constructor(\n    private comparator_: Comparator<K>,\n    private root_:\n      | LLRBNode<K, V>\n      | LLRBEmptyNode<K, V> = SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>\n  ) {}\n\n  /**\n   * Returns a copy of the map, with the specified key/value added or replaced.\n   * (TODO: We should perhaps rename this method to 'put')\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @returns New map, with item added.\n   */\n  insert(key: K, value: V): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .insert(key, value, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns a copy of the map, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @returns New map, with item removed.\n   */\n  remove(key: K): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .remove(key, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns the value of the node with the given key, or null.\n   *\n   * @param key - The key to look up.\n   * @returns The value of the node with the given key, or null if the\n   * key doesn't exist.\n   */\n  get(key: K): V | null {\n    let cmp;\n    let node = this.root_;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\n   * @param key - The key to find the predecessor of\n   * @returns The predecessor key.\n   */\n  getPredecessorKey(key: K): K | null {\n    let cmp,\n      node = this.root_,\n      rightParent = null;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error(\n      'Attempted to find predecessor key for a nonexistent key.  What gives?'\n    );\n  }\n\n  /**\n   * @returns True if the map is empty.\n   */\n  isEmpty(): boolean {\n    return this.root_.isEmpty();\n  }\n\n  /**\n   * @returns The total number of nodes in the map.\n   */\n  count(): number {\n    return this.root_.count();\n  }\n\n  /**\n   * @returns The minimum key in the map.\n   */\n  minKey(): K | null {\n    return this.root_.minKey();\n  }\n\n  /**\n   * @returns The maximum key in the map.\n   */\n  maxKey(): K | null {\n    return this.root_.maxKey();\n  }\n\n  /**\n   * Traverses the map in key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return this.root_.inorderTraversal(action);\n  }\n\n  /**\n   * Traverses the map in reverse key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns True if the traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return this.root_.reverseTraversal(action);\n  }\n\n  /**\n   * Returns an iterator over the SortedMap.\n   * @returns The iterator.\n   */\n  getIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getReverseIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n\n  getReverseIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../util/util';\n\nimport { NamedNode } from './Node';\n\nexport function NAME_ONLY_COMPARATOR(left: NamedNode, right: NamedNode) {\n  return nameCompare(left.name, right.name);\n}\n\nexport function NAME_COMPARATOR(left: string, right: string) {\n  return nameCompare(left, right);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { doubleToIEEE754String } from '../util/util';\n\nimport { Node } from './Node';\n\nlet MAX_NODE: Node;\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport const priorityHashText = function (priority: string | number): string {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n\n/**\n * Validates that a priority snapshot Node is valid.\n */\nexport const validatePriorityNode = function (priorityNode: Node) {\n  if (priorityNode.isLeafNode()) {\n    const val = priorityNode.val();\n    assert(\n      typeof val === 'string' ||\n        typeof val === 'number' ||\n        (typeof val === 'object' && contains(val as Indexable, '.sv')),\n      'Priority must be a string or number.'\n    );\n  } else {\n    assert(\n      priorityNode === MAX_NODE || priorityNode.isEmpty(),\n      'priority of unexpected type.'\n    );\n  }\n  // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n  assert(\n    priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(),\n    \"Priority nodes can't have a priority of their own.\"\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport {\n  Path,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\nimport { doubleToIEEE754String, sha1 } from '../util/util';\n\nimport { ChildrenNodeConstructor } from './ChildrenNode';\nimport { Index } from './indexes/Index';\nimport { Node } from './Node';\nimport { priorityHashText, validatePriorityNode } from './snap';\n\nlet __childrenNodeConstructor: ChildrenNodeConstructor;\n\n/**\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\n * implements Node and stores the value of the node (a string,\n * number, or boolean) accessible via getValue().\n */\nexport class LeafNode implements Node {\n  static set __childrenNodeConstructor(val: ChildrenNodeConstructor) {\n    __childrenNodeConstructor = val;\n  }\n\n  static get __childrenNodeConstructor() {\n    return __childrenNodeConstructor;\n  }\n\n  /**\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\n   * the same type, the comparison falls back to their value\n   */\n  static VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n  private lazyHash_: string | null = null;\n\n  /**\n   * @param value_ - The value to store in this leaf node. The object type is\n   * possible in the event of a deferred value\n   * @param priorityNode_ - The priority of this node.\n   */\n  constructor(\n    private readonly value_: string | number | boolean | Indexable,\n    private priorityNode_: Node = LeafNode.__childrenNodeConstructor.EMPTY_NODE\n  ) {\n    assert(\n      this.value_ !== undefined && this.value_ !== null,\n      \"LeafNode shouldn't be created with null/undefined value.\"\n    );\n\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return true;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    return new LeafNode(this.value_, newPriorityNode);\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n  hasChild(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(childName: string, childNode: Node): null {\n    return null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(\n        childName,\n        newChildNode\n      ).updatePriority(this.priorityNode_);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(\n        front !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n\n      return this.updateImmediateChild(\n        front,\n        LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(\n          pathPopFront(path),\n          newChildNode\n        )\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return 0;\n  }\n\n  /** @inheritDoc */\n  forEachChild(index: Index, action: (s: string, n: Node) => void): boolean {\n    return false;\n  }\n  val(exportFormat?: boolean): {} {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.priorityNode_.isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.priorityNode_.val() as number | string) +\n          ':';\n      }\n\n      const type = typeof this.value_;\n      toHash += type + ':';\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_ as number);\n      } else {\n        toHash += this.value_;\n      }\n      this.lazyHash_ = sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /**\n   * Returns the value of the leaf node.\n   * @returns The value of the node.\n   */\n  getValue(): Indexable | string | number | boolean {\n    return this.value_;\n  }\n  compareTo(other: Node): number {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other as LeafNode);\n    }\n  }\n\n  /**\n   * Comparison specifically for two leaf nodes\n   */\n  private compareToLeafNode_(otherLeaf: LeafNode): number {\n    const otherLeafType = typeof otherLeaf.value_;\n    const thisLeafType = typeof this.value_;\n    const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  }\n  withIndex(): Node {\n    return this;\n  }\n  isIndexed(): boolean {\n    return true;\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      const otherLeaf = other as LeafNode;\n      return (\n        this.value_ === otherLeaf.value_ &&\n        this.priorityNode_.equals(otherLeaf.priorityNode_)\n      );\n    } else {\n      return false;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { LeafNode } from '../LeafNode';\nimport { NamedNode, Node } from '../Node';\n\nimport { Index } from './Index';\n\nlet nodeFromJSON: (a: unknown) => Node;\nlet MAX_NODE: Node;\n\nexport function setNodeFromJSON(val: (a: unknown) => Node) {\n  nodeFromJSON = val;\n}\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport class PriorityIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const aPriority = a.node.getPriority();\n    const bPriority = b.node.getPriority();\n    const indexCmp = aPriority.compareTo(bPriority);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getPriority().isEmpty();\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE));\n  }\n\n  makePost(indexValue: unknown, name: string): NamedNode {\n    const priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.priority';\n  }\n}\n\nexport const PRIORITY_INDEX = new PriorityIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LLRBNode, SortedMap } from '../util/SortedMap';\n\nimport { NamedNode } from './Node';\n\nconst LOG_2 = Math.log(2);\n\nclass Base12Num {\n  count: number;\n  private current_: number;\n  private bits_: number;\n\n  constructor(length: number) {\n    const logBase2 = (num: number) =>\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parseInt((Math.log(num) / LOG_2) as any, 10);\n    const bitMask = (bits: number) => parseInt(Array(bits + 1).join('1'), 2);\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    const mask = bitMask(this.count);\n    this.bits_ = (length + 1) & mask;\n  }\n\n  nextBitIsOne(): boolean {\n    //noinspection JSBitwiseOperatorUsage\n    const result = !(this.bits_ & (0x1 << this.current_));\n    this.current_--;\n    return result;\n  }\n}\n\n/**\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\n * function\n *\n * Uses the algorithm described in the paper linked here:\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\n *\n * @param childList - Unsorted list of children\n * @param cmp - The comparison method to be used\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\n * type is not NamedNode\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\n */\nexport const buildChildSet = function <K, V>(\n  childList: NamedNode[],\n  cmp: (a: NamedNode, b: NamedNode) => number,\n  keyFn?: (a: NamedNode) => K,\n  mapSortFn?: (a: K, b: K) => number\n): SortedMap<K, V> {\n  childList.sort(cmp);\n\n  const buildBalancedTree = function (\n    low: number,\n    high: number\n  ): LLRBNode<K, V> | null {\n    const length = high - low;\n    let namedNode: NamedNode;\n    let key: K;\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        null,\n        null\n      );\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const middle = parseInt((length / 2) as any, 10) + low;\n      const left = buildBalancedTree(low, middle);\n      const right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        left,\n        right\n      );\n    }\n  };\n\n  const buildFrom12Array = function (base12: Base12Num): LLRBNode<K, V> {\n    let node: LLRBNode<K, V> = null;\n    let root = null;\n    let index = childList.length;\n\n    const buildPennant = function (chunkSize: number, color: boolean) {\n      const low = index - chunkSize;\n      const high = index;\n      index -= chunkSize;\n      const childTree = buildBalancedTree(low + 1, high);\n      const namedNode = childList[low];\n      const key: K = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      attachPennant(\n        new LLRBNode(\n          key,\n          namedNode.node as unknown as V,\n          color,\n          null,\n          childTree\n        )\n      );\n    };\n\n    const attachPennant = function (pennant: LLRBNode<K, V>) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (let i = 0; i < base12.count; ++i) {\n      const isOne = base12.nextBitIsOne();\n      // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n      const chunkSize = Math.pow(2, base12.count - (i + 1));\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n    return root;\n  };\n\n  const base12 = new Base12Num(childList.length);\n  const root = buildFrom12Array(base12);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new SortedMap<K, V>(mapSortFn || (cmp as any), root);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains, map, safeGet } from '@firebase/util';\n\nimport { SortedMap } from '../util/SortedMap';\n\nimport { buildChildSet } from './childSet';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX } from './indexes/KeyIndex';\nimport { PRIORITY_INDEX } from './indexes/PriorityIndex';\nimport { NamedNode, Node } from './Node';\n\nlet _defaultIndexMap: IndexMap;\n\nconst fallbackObject = {};\n\nexport class IndexMap {\n  /**\n   * The default IndexMap for nodes without a priority\n   */\n  static get Default(): IndexMap {\n    assert(\n      fallbackObject && PRIORITY_INDEX,\n      'ChildrenNode.ts has not been loaded'\n    );\n    _defaultIndexMap =\n      _defaultIndexMap ||\n      new IndexMap(\n        { '.priority': fallbackObject },\n        { '.priority': PRIORITY_INDEX }\n      );\n    return _defaultIndexMap;\n  }\n\n  constructor(\n    private indexes_: {\n      [k: string]: SortedMap<NamedNode, Node> | /*FallbackType*/ object;\n    },\n    private indexSet_: { [k: string]: Index }\n  ) {}\n\n  get(indexKey: string): SortedMap<NamedNode, Node> | null {\n    const sortedMap = safeGet(this.indexes_, indexKey);\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  }\n\n  hasIndex(indexDefinition: Index): boolean {\n    return contains(this.indexSet_, indexDefinition.toString());\n  }\n\n  addIndex(\n    indexDefinition: Index,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    assert(\n      indexDefinition !== KEY_INDEX,\n      \"KeyIndex always exists and isn't meant to be added to the IndexMap.\"\n    );\n    const childList = [];\n    let sawIndexedValue = false;\n    const iter = existingChildren.getIterator(NamedNode.Wrap);\n    let next = iter.getNext();\n    while (next) {\n      sawIndexedValue =\n        sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n    let newIndex;\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n    const indexName = indexDefinition.toString();\n    const newIndexSet = { ...this.indexSet_ };\n    newIndexSet[indexName] = indexDefinition;\n    const newIndexes = { ...this.indexes_ };\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  }\n\n  /**\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\n   */\n  addToIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>, indexName: string) => {\n        const index = safeGet(this.indexSet_, indexName);\n        assert(index, 'Missing index implementation for ' + indexName);\n        if (indexedChildren === fallbackObject) {\n          // Check to see if we need to index everything\n          if (index.isDefinedOn(namedNode.node)) {\n            // We need to build this index\n            const childList = [];\n            const iter = existingChildren.getIterator(NamedNode.Wrap);\n            let next = iter.getNext();\n            while (next) {\n              if (next.name !== namedNode.name) {\n                childList.push(next);\n              }\n              next = iter.getNext();\n            }\n            childList.push(namedNode);\n            return buildChildSet(childList, index.getCompare());\n          } else {\n            // No change, this remains a fallback\n            return fallbackObject;\n          }\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          let newChildren = indexedChildren;\n          if (existingSnap) {\n            newChildren = newChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          }\n          return newChildren.insert(namedNode, namedNode.node);\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n\n  /**\n   * Create a new IndexMap instance with the given value removed\n   */\n  removeFromIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>) => {\n        if (indexedChildren === fallbackObject) {\n          // This is the fallback. Just return it, nothing to do in this case\n          return indexedChildren;\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          if (existingSnap) {\n            return indexedChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          } else {\n            // No record of this child\n            return indexedChildren;\n          }\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathGetLength, pathPopFront } from '../util/Path';\nimport { SortedMap, SortedMapIterator } from '../util/SortedMap';\nimport { MAX_NAME, MIN_NAME, sha1 } from '../util/util';\n\nimport { NAME_COMPARATOR } from './comparators';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX, KeyIndex } from './indexes/KeyIndex';\nimport {\n  PRIORITY_INDEX,\n  setMaxNode as setPriorityMaxNode\n} from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\nimport { priorityHashText, setMaxNode, validatePriorityNode } from './snap';\n\nexport interface ChildrenNodeConstructor {\n  new (\n    children_: SortedMap<string, Node>,\n    priorityNode_: Node | null,\n    indexMap_: IndexMap\n  ): ChildrenNode;\n  EMPTY_NODE: ChildrenNode;\n}\n\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\nlet EMPTY_NODE: ChildrenNode;\n\n/**\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\n * (i.e. nodes with children).  It implements Node and stores the\n * list of children in the children property, sorted by child name.\n */\nexport class ChildrenNode implements Node {\n  private lazyHash_: string | null = null;\n\n  static get EMPTY_NODE(): ChildrenNode {\n    return (\n      EMPTY_NODE ||\n      (EMPTY_NODE = new ChildrenNode(\n        new SortedMap<string, Node>(NAME_COMPARATOR),\n        null,\n        IndexMap.Default\n      ))\n    );\n  }\n\n  /**\n   * @param children_ - List of children of this node..\n   * @param priorityNode_ - The priority of this node (as a snapshot node).\n   */\n  constructor(\n    private readonly children_: SortedMap<string, Node>,\n    private readonly priorityNode_: Node | null,\n    private indexMap_: IndexMap\n  ) {\n    /**\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\n     * class instead of an empty ChildrenNode.\n     */\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(\n        !this.priorityNode_ || this.priorityNode_.isEmpty(),\n        'An empty node cannot have a priority'\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_ || EMPTY_NODE;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      const child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  }\n\n  /** @inheritDoc */\n  hasChild(childName: string): boolean {\n    return this.children_.get(childName) !== null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      const namedNode = new NamedNode(childName, newChildNode);\n      let newChildren, newIndexMap;\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(\n          namedNode,\n          this.children_\n        );\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      const newPriority = newChildren.isEmpty()\n        ? EMPTY_NODE\n        : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(\n        pathGetFront(path) !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n      const newImmediateChild = this.getImmediateChild(front).updateChild(\n        pathPopFront(path),\n        newChildNode\n      );\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return this.children_.isEmpty();\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return this.children_.count();\n  }\n\n  private static INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n\n  /** @inheritDoc */\n  val(exportFormat?: boolean): object {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const obj: { [k: string]: unknown } = {};\n    let numKeys = 0,\n      maxKey = 0,\n      allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, (key: string, childNode: Node) => {\n      obj[key] = childNode.val(exportFormat);\n\n      numKeys++;\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      const array: unknown[] = [];\n      // eslint-disable-next-line guard-for-in\n      for (const key in obj) {\n        array[key as unknown as number] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n      return obj;\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.getPriority().isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.getPriority().val() as string | number) +\n          ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n        const childHash = childNode.hash();\n        if (childHash !== '') {\n          toHash += ':' + key + ':' + childHash;\n        }\n      });\n\n      this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      const predecessor = idx.getPredecessorKey(\n        new NamedNode(childName, childNode)\n      );\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  }\n\n  getFirstChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  }\n\n  getFirstChild(indexDefinition: Index): NamedNode | null {\n    const minKey = this.getFirstChildName(indexDefinition);\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Given an index, return the key name of the largest value we have, according to that index\n   */\n  getLastChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  }\n\n  getLastChild(indexDefinition: Index): NamedNode | null {\n    const maxKey = this.getLastChildName(indexDefinition);\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  }\n  forEachChild(\n    index: Index,\n    action: (key: string, node: Node) => boolean | void\n  ): boolean {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      return idx.inorderTraversal(wrappedNode => {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  }\n\n  getIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  }\n\n  getIteratorFrom(\n    startPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getIteratorFrom(startPost, key => key);\n    } else {\n      const iterator = this.children_.getIteratorFrom(\n        startPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n\n  getReverseIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getReverseIteratorFrom(\n      indexDefinition.maxPost(),\n      indexDefinition\n    );\n  }\n\n  getReverseIteratorFrom(\n    endPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, key => {\n        return key;\n      });\n    } else {\n      const iterator = this.children_.getReverseIteratorFrom(\n        endPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n  compareTo(other: ChildrenNode): number {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  }\n  withIndex(indexDefinition: Index): Node {\n    if (\n      indexDefinition === KEY_INDEX ||\n      this.indexMap_.hasIndex(indexDefinition)\n    ) {\n      return this;\n    } else {\n      const newIndexMap = this.indexMap_.addIndex(\n        indexDefinition,\n        this.children_\n      );\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  }\n  isIndexed(index: Index): boolean {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      const otherChildrenNode = other as ChildrenNode;\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (\n        this.children_.count() === otherChildrenNode.children_.count()\n      ) {\n        const thisIter = this.getIterator(PRIORITY_INDEX);\n        const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        let thisCurrent = thisIter.getNext();\n        let otherCurrent = otherIter.getNext();\n        while (thisCurrent && otherCurrent) {\n          if (\n            thisCurrent.name !== otherCurrent.name ||\n            !thisCurrent.node.equals(otherCurrent.node)\n          ) {\n            return false;\n          }\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\n   * instead.\n   *\n   */\n  private resolveIndex_(\n    indexDefinition: Index\n  ): SortedMap<NamedNode, Node> | null {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  }\n}\n\nexport class MaxNode extends ChildrenNode {\n  constructor() {\n    super(\n      new SortedMap<string, Node>(NAME_COMPARATOR),\n      ChildrenNode.EMPTY_NODE,\n      IndexMap.Default\n    );\n  }\n\n  compareTo(other: Node): number {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n  equals(other: Node): boolean {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  }\n\n  getPriority(): MaxNode {\n    return this;\n  }\n\n  getImmediateChild(childName: string): ChildrenNode {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n}\n\n/**\n * Marker that will sort higher than any other snapshot.\n */\nexport const MAX_NODE = new MaxNode();\n\n/**\n * Document NamedNode extensions\n */\ndeclare module './Node' {\n  interface NamedNode {\n    MIN: NamedNode;\n    MAX: NamedNode;\n  }\n}\n\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE)\n  }\n});\n\n/**\n * Reference Extensions\n */\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE);\nsetPriorityMaxNode(MAX_NODE);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { SortedMap } from '../util/SortedMap';\nimport { each } from '../util/util';\n\nimport { ChildrenNode } from './ChildrenNode';\nimport { buildChildSet } from './childSet';\nimport { NAME_COMPARATOR, NAME_ONLY_COMPARATOR } from './comparators';\nimport { PRIORITY_INDEX, setNodeFromJSON } from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\n\nconst USE_HINZE = true;\n\n/**\n * Constructs a snapshot node representing the passed JSON and returns it.\n * @param json - JSON to create a node for.\n * @param priority - Optional priority to use.  This will be ignored if the\n * passed JSON contains a .priority property.\n */\nexport function nodeFromJSON(\n  json: unknown | null,\n  priority: unknown = null\n): Node {\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(\n    priority === null ||\n      typeof priority === 'string' ||\n      typeof priority === 'number' ||\n      (typeof priority === 'object' && '.sv' in (priority as object)),\n    'Invalid priority type found: ' + typeof priority\n  );\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  }\n\n  // Valid leaf nodes include non-objects or server-value wrapper objects\n  if (typeof json !== 'object' || '.sv' in json) {\n    const jsonLeaf = json as string | number | boolean | Indexable;\n    return new LeafNode(jsonLeaf, nodeFromJSON(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    const children: NamedNode[] = [];\n    let childrenHavePriority = false;\n    const hinzeJsonObj = json;\n    each(hinzeJsonObj, (key, child) => {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        const childNode = nodeFromJSON(child);\n        if (!childNode.isEmpty()) {\n          childrenHavePriority =\n            childrenHavePriority || !childNode.getPriority().isEmpty();\n          children.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    const childSet = buildChildSet(\n      children,\n      NAME_ONLY_COMPARATOR,\n      namedNode => namedNode.name,\n      NAME_COMPARATOR\n    ) as SortedMap<string, Node>;\n    if (childrenHavePriority) {\n      const sortedChildSet = buildChildSet(\n        children,\n        PRIORITY_INDEX.getCompare()\n      );\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        new IndexMap(\n          { '.priority': sortedChildSet },\n          { '.priority': PRIORITY_INDEX }\n        )\n      );\n    } else {\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        IndexMap.Default\n      );\n    }\n  } else {\n    let node: Node = ChildrenNode.EMPTY_NODE;\n    each(json, (key: string, childData: unknown) => {\n      if (contains(json as object, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          const childNode = nodeFromJSON(childData);\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node = node.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n\n    return node.updatePriority(nodeFromJSON(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathIsEmpty, pathSlice } from '../../util/Path';\nimport { MAX_NAME, nameCompare } from '../../util/util';\nimport { ChildrenNode, MAX_NODE } from '../ChildrenNode';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class PathIndex extends Index {\n  constructor(private indexPath_: Path) {\n    super();\n\n    assert(\n      !pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority',\n      \"Can't create PathIndex with empty path or .priority key\"\n    );\n  }\n\n  protected extractChild(snap: Node): Node {\n    return snap.getChild(this.indexPath_);\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getChild(this.indexPath_).isEmpty();\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    const aChild = this.extractChild(a.node);\n    const bChild = this.extractChild(b.node);\n    const indexCmp = aChild.compareTo(bChild);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    const node = ChildrenNode.EMPTY_NODE.updateChild(\n      this.indexPath_,\n      valueNode\n    );\n    return new NamedNode(name, node);\n  }\n  maxPost(): NamedNode {\n    const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\n    return new NamedNode(MAX_NAME, node);\n  }\n  toString(): string {\n    return pathSlice(this.indexPath_, 0).join('/');\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../../util/util';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class ValueIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const indexCmp = a.node.compareTo(b.node);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return true;\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.equals(newNode);\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MAX;\n  }\n\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, valueNode);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.value';\n  }\n}\n\nexport const VALUE_INDEX = new ValueIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport {\n  tryParseInt,\n  MAX_NAME,\n  MIN_NAME,\n  INTEGER_32_MIN,\n  INTEGER_32_MAX\n} from '../util/util';\n\n// Modeled after base64 web-safe chars, but ordered by ASCII.\nconst PUSH_CHARS =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nconst MIN_PUSH_CHAR = '-';\n\nconst MAX_PUSH_CHAR = 'z';\n\nconst MAX_KEY_LEN = 786;\n\n/**\n * Fancy ID generator that creates 20-character string identifiers with the\n * following properties:\n *\n * 1. They're based on timestamp so that they sort *after* any existing ids.\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\n *    collide with other clients' IDs.\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\n *    that will sort properly).\n * 4. They're monotonically increasing. Even if you generate more than one in\n *    the same timestamp, the latter ones will sort after the former ones. We do\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\n *    in the case of a timestamp collision).\n */\nexport const nextPushId = (function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  let lastPushTime = 0;\n\n  // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n  const lastRandChars: number[] = [];\n\n  return function (now: number) {\n    const duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n\n    let i;\n    const timeStampChars = new Array(8);\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n      // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n      now = Math.floor(now / 64);\n    }\n    assert(now === 0, 'Cannot push at time == 0');\n\n    let id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n      lastRandChars[i]++;\n    }\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n\n    return id;\n  };\n})();\n\nexport const successor = function (key: string) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n  const next = new Array(key.length);\n\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  let i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  }\n\n  // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  const source = next[i];\n  const sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n\n  return next.slice(0, i + 1).join('');\n};\n\n// `key` is assumed to be non-empty.\nexport const predecessor = function (key: string) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n  const next = new Array(key.length);\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n  // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n    delete next[next.length - 1];\n    return next.join('');\n  }\n  // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n  next[next.length - 1] = PUSH_CHARS.charAt(\n    PUSH_CHARS.indexOf(next[next.length - 1]) - 1\n  );\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nexport const enum ChangeType {\n  /** Event type for a child added */\n  CHILD_ADDED = 'child_added',\n  /** Event type for a child removed */\n  CHILD_REMOVED = 'child_removed',\n  /** Event type for a child changed */\n  CHILD_CHANGED = 'child_changed',\n  /** Event type for a child moved */\n  CHILD_MOVED = 'child_moved',\n  /** Event type for a value change */\n  VALUE = 'value'\n}\n\nexport interface Change {\n  /** @param type - The event type */\n  type: ChangeType;\n  /** @param snapshotNode - The data */\n  snapshotNode: Node;\n  /** @param childName - The name for this child, if it's a child even */\n  childName?: string;\n  /** @param oldSnap - Used for intermediate processing of child changed events */\n  oldSnap?: Node;\n  /**  * @param prevName - The name for the previous child, if applicable */\n  prevName?: string | null;\n}\n\nexport function changeValue(snapshotNode: Node): Change {\n  return { type: ChangeType.VALUE, snapshotNode };\n}\n\nexport function changeChildAdded(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_ADDED, snapshotNode, childName };\n}\n\nexport function changeChildRemoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_REMOVED, snapshotNode, childName };\n}\n\nexport function changeChildChanged(\n  childName: string,\n  snapshotNode: Node,\n  oldSnap: Node\n): Change {\n  return {\n    type: ChangeType.CHILD_CHANGED,\n    snapshotNode,\n    childName,\n    oldSnap\n  };\n}\n\nexport function changeChildMoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_MOVED, snapshotNode, childName };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\n\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\n */\nexport class IndexedFilter implements NodeFilter {\n  constructor(private readonly index_: Index) {}\n\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    assert(\n      snap.isIndexed(this.index_),\n      'A node must be indexed if only a child is updated'\n    );\n    const oldChild = snap.getImmediateChild(key);\n    // Check if anything actually changed.\n    if (\n      oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))\n    ) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(\n            changeChildRemoved(key, oldChild)\n          );\n        } else {\n          assert(\n            snap.isLeafNode(),\n            'A child remove without an old child only makes sense on a leaf node'\n          );\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(\n          changeChildChanged(key, newChild, oldChild)\n        );\n      }\n    }\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(\n              changeChildRemoved(key, childNode)\n            );\n          }\n        });\n      }\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (oldSnap.hasChild(key)) {\n            const oldChild = oldSnap.getImmediateChild(key);\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(\n                changeChildChanged(key, childNode, oldChild)\n              );\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(\n              changeChildAdded(key, childNode)\n            );\n          }\n        });\n      }\n    }\n    return newSnap.withIndex(this.index_);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  }\n  filtersNodes(): boolean {\n    return false;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NamedNode, Node } from '../../../core/snap/Node';\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Path } from '../../util/Path';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\n */\nexport class RangedFilter implements NodeFilter {\n  private indexedFilter_: IndexedFilter;\n\n  private index_: Index;\n\n  private startPost_: NamedNode;\n\n  private endPost_: NamedNode;\n\n  constructor(params: QueryParams) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n  }\n\n  getStartPost(): NamedNode {\n    return this.startPost_;\n  }\n\n  getEndPost(): NamedNode {\n    return this.endPost_;\n  }\n\n  matches(node: NamedNode): boolean {\n    return (\n      this.index_.compare(this.getStartPost(), node) <= 0 &&\n      this.index_.compare(node, this.getEndPost()) <= 0\n    );\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    return this.indexedFilter_.updateChild(\n      snap,\n      key,\n      newChild,\n      affectedPath,\n      source,\n      optChangeAccumulator\n    );\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n    let filtered = newSnap.withIndex(this.index_);\n    // Don't support priorities on queries\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    const self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(\n      oldSnap,\n      filtered,\n      optChangeAccumulator\n    );\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.indexedFilter_;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private static getStartPost_(params: QueryParams): NamedNode {\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  }\n\n  private static getEndPost_(params: QueryParams): NamedNode {\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { NamedNode, Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\nimport { RangedFilter } from './RangedFilter';\n\n/**\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\n */\nexport class LimitedFilter implements NodeFilter {\n  private readonly rangedFilter_: RangedFilter;\n\n  private readonly index_: Index;\n\n  private readonly limit_: number;\n\n  private readonly reverse_: boolean;\n\n  constructor(params: QueryParams) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_\n        .getIndexedFilter()\n        .updateChild(\n          snap,\n          key,\n          newChild,\n          affectedPath,\n          source,\n          optChangeAccumulator\n        );\n    } else {\n      return this.fullLimitUpdateChild_(\n        snap,\n        key,\n        newChild,\n        source,\n        optChangeAccumulator\n      );\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    let filtered;\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (\n        this.limit_ * 2 < newSnap.numChildren() &&\n        newSnap.isIndexed(this.index_)\n      ) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n        // anchor to the startPost, endPost, or last element as appropriate\n        let iterator;\n        if (this.reverse_) {\n          iterator = (newSnap as ChildrenNode).getReverseIteratorFrom(\n            this.rangedFilter_.getEndPost(),\n            this.index_\n          );\n        } else {\n          iterator = (newSnap as ChildrenNode).getIteratorFrom(\n            this.rangedFilter_.getStartPost(),\n            this.index_\n          );\n        }\n        let count = 0;\n        while (iterator.hasNext() && count < this.limit_) {\n          const next = iterator.getNext();\n          let inRange;\n          if (this.reverse_) {\n            inRange =\n              this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\n          } else {\n            inRange =\n              this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\n          }\n          if (inRange) {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          } else {\n            // if we have reached the end post, we cannot keep adding elemments\n            break;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_);\n        // Don't support priorities on queries\n        filtered = filtered.updatePriority(\n          ChildrenNode.EMPTY_NODE\n        ) as ChildrenNode;\n        let startPost;\n        let endPost;\n        let cmp;\n        let iterator;\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n          startPost = this.rangedFilter_.getEndPost();\n          endPost = this.rangedFilter_.getStartPost();\n          const indexCompare = this.index_.getCompare();\n          cmp = (a: NamedNode, b: NamedNode) => indexCompare(b, a);\n        } else {\n          iterator = filtered.getIterator(this.index_);\n          startPost = this.rangedFilter_.getStartPost();\n          endPost = this.rangedFilter_.getEndPost();\n          cmp = this.index_.getCompare();\n        }\n\n        let count = 0;\n        let foundStartPost = false;\n        while (iterator.hasNext()) {\n          const next = iterator.getNext();\n          if (!foundStartPost && cmp(startPost, next) <= 0) {\n            // start adding\n            foundStartPost = true;\n          }\n          const inRange =\n            foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(\n              next.name,\n              ChildrenNode.EMPTY_NODE\n            );\n          }\n        }\n      }\n    }\n    return this.rangedFilter_\n      .getIndexedFilter()\n      .updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.rangedFilter_.getIndexedFilter();\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private fullLimitUpdateChild_(\n    snap: Node,\n    childKey: string,\n    childSnap: Node,\n    source: CompleteChildSource,\n    changeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    // TODO: rename all cache stuff etc to general snap terminology\n    let cmp;\n    if (this.reverse_) {\n      const indexCmp = this.index_.getCompare();\n      cmp = (a: NamedNode, b: NamedNode) => indexCmp(b, a);\n    } else {\n      cmp = this.index_.getCompare();\n    }\n    const oldEventCache = snap as ChildrenNode;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    const newChildNamedNode = new NamedNode(childKey, childSnap);\n    const windowBoundary = this.reverse_\n      ? oldEventCache.getFirstChild(this.index_)\n      : (oldEventCache.getLastChild(this.index_) as NamedNode);\n    const inRange = this.rangedFilter_.matches(newChildNamedNode);\n    if (oldEventCache.hasChild(childKey)) {\n      const oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      let nextChild = source.getChildAfterChild(\n        this.index_,\n        windowBoundary,\n        this.reverse_\n      );\n      while (\n        nextChild != null &&\n        (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))\n      ) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(\n          this.index_,\n          nextChild,\n          this.reverse_\n        );\n      }\n      const compareNext =\n        nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      const remainsInWindow =\n        inRange && !childSnap.isEmpty() && compareNext >= 0;\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildChanged(childKey, childSnap, oldChildSnap)\n          );\n        }\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(childKey, oldChildSnap)\n          );\n        }\n        const newEventCache = oldEventCache.updateImmediateChild(\n          childKey,\n          ChildrenNode.EMPTY_NODE\n        );\n        const nextChildInRange =\n          nextChild != null && this.rangedFilter_.matches(nextChild);\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(\n              changeChildAdded(nextChild.name, nextChild.node)\n            );\n          }\n          return newEventCache.updateImmediateChild(\n            nextChild.name,\n            nextChild.node\n          );\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(windowBoundary.name, windowBoundary.node)\n          );\n          changeAccumulator.trackChildChange(\n            changeChildAdded(childKey, childSnap)\n          );\n        }\n        return oldEventCache\n          .updateImmediateChild(childKey, childSnap)\n          .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, stringify } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { PathIndex } from '../snap/indexes/PathIndex';\nimport { PRIORITY_INDEX, PriorityIndex } from '../snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../snap/indexes/ValueIndex';\nimport { predecessor, successor } from '../util/NextPushId';\nimport { MAX_NAME, MIN_NAME } from '../util/util';\n\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { LimitedFilter } from './filter/LimitedFilter';\nimport { NodeFilter } from './filter/NodeFilter';\nimport { RangedFilter } from './filter/RangedFilter';\n\n/**\n * Wire Protocol Constants\n */\nconst enum WIRE_PROTOCOL_CONSTANTS {\n  INDEX_START_VALUE = 'sp',\n  INDEX_START_NAME = 'sn',\n  INDEX_END_VALUE = 'ep',\n  INDEX_END_NAME = 'en',\n  LIMIT = 'l',\n  VIEW_FROM = 'vf',\n  VIEW_FROM_LEFT = 'l',\n  VIEW_FROM_RIGHT = 'r',\n  INDEX = 'i'\n}\n\n/**\n * REST Query Constants\n */\nconst enum REST_QUERY_CONSTANTS {\n  ORDER_BY = 'orderBy',\n  PRIORITY_INDEX = '$priority',\n  VALUE_INDEX = '$value',\n  KEY_INDEX = '$key',\n  START_AT = 'startAt',\n  END_AT = 'endAt',\n  LIMIT_TO_FIRST = 'limitToFirst',\n  LIMIT_TO_LAST = 'limitToLast'\n}\n\n/**\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\n * user-facing API level, so it is not done here.\n *\n * @internal\n */\nexport class QueryParams {\n  limitSet_ = false;\n  startSet_ = false;\n  startNameSet_ = false;\n  startAfterSet_ = false;\n  endSet_ = false;\n  endNameSet_ = false;\n  endBeforeSet_ = false;\n  limit_ = 0;\n  viewFrom_ = '';\n  indexStartValue_: unknown | null = null;\n  indexStartName_ = '';\n  indexEndValue_: unknown | null = null;\n  indexEndName_ = '';\n  index_: PriorityIndex = PRIORITY_INDEX;\n\n  hasStart(): boolean {\n    return this.startSet_;\n  }\n\n  hasStartAfter(): boolean {\n    return this.startAfterSet_;\n  }\n\n  hasEndBefore(): boolean {\n    return this.endBeforeSet_;\n  }\n\n  /**\n   * @returns True if it would return from left.\n   */\n  isViewFromLeft(): boolean {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n    }\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true\n   */\n  getIndexStartValue(): unknown {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true.\n   * Returns the starting key name for the range defined by these query parameters\n   */\n  getIndexStartName(): string {\n    assert(this.startSet_, 'Only valid if start has been set');\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  }\n\n  hasEnd(): boolean {\n    return this.endSet_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   */\n  getIndexEndValue(): unknown {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   * Returns the end key name for the range defined by these query parameters\n   */\n  getIndexEndName(): string {\n    assert(this.endSet_, 'Only valid if end has been set');\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  }\n\n  hasLimit(): boolean {\n    return this.limitSet_;\n  }\n\n  /**\n   * @returns True if a limit has been set and it has been explicitly anchored\n   */\n  hasAnchoredLimit(): boolean {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  }\n\n  /**\n   * Only valid to call if hasLimit() returns true\n   */\n  getLimit(): number {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  }\n\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  loadsAllData(): boolean {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  }\n\n  isDefault(): boolean {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  }\n\n  copy(): QueryParams {\n    const copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  }\n}\n\nexport function queryParamsGetNodeFilter(queryParams: QueryParams): NodeFilter {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nexport function queryParamsLimit(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = '';\n  return newParams;\n}\n\nexport function queryParamsLimitToFirst(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n  return newParams;\n}\n\nexport function queryParamsLimitToLast(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n  return newParams;\n}\n\nexport function queryParamsStartAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.startSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexStartValue_ = indexValue;\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsStartAfter(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = successor(indexValue as string);\n    }\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    let childKey: string;\n    if (key == null) {\n      childKey = MAX_NAME;\n    } else {\n      childKey = successor(key);\n    }\n    params = queryParamsStartAt(queryParams, indexValue, childKey);\n  }\n  params.startAfterSet_ = true;\n  return params;\n}\n\nexport function queryParamsEndAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.endSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexEndValue_ = indexValue;\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsEndBefore(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let childKey: string;\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = predecessor(indexValue as string);\n    }\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    if (key == null) {\n      childKey = MIN_NAME;\n    } else {\n      childKey = predecessor(key);\n    }\n    params = queryParamsEndAt(queryParams, indexValue, childKey);\n  }\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nexport function queryParamsOrderBy(\n  queryParams: QueryParams,\n  index: Index\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n\n/**\n * Returns a set of REST query string parameters representing this query.\n *\n * @returns query string parameters\n */\nexport function queryParamsToRestQueryStringParameters(\n  queryParams: QueryParams\n): Record<string, string | number> {\n  const qs: Record<string, string | number> = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  let orderBy;\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.PRIORITY_INDEX;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.VALUE_INDEX;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.KEY_INDEX;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n  qs[REST_QUERY_CONSTANTS.ORDER_BY] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    qs[REST_QUERY_CONSTANTS.START_AT] = stringify(queryParams.indexStartValue_);\n    if (queryParams.startNameSet_) {\n      qs[REST_QUERY_CONSTANTS.START_AT] +=\n        ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    qs[REST_QUERY_CONSTANTS.END_AT] = stringify(queryParams.indexEndValue_);\n    if (queryParams.endNameSet_) {\n      qs[REST_QUERY_CONSTANTS.END_AT] +=\n        ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_FIRST] = queryParams.limit_;\n    } else {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_LAST] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nexport function queryParamsGetQueryObject(\n  queryParams: QueryParams\n): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  if (queryParams.startSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] =\n      queryParams.indexStartValue_;\n    if (queryParams.startNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] =\n        queryParams.indexStartName_;\n    }\n  }\n  if (queryParams.endSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = queryParams.indexEndValue_;\n    if (queryParams.endNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = queryParams.indexEndName_;\n    }\n  }\n  if (queryParams.limitSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = queryParams.limit_;\n    let viewFrom = queryParams.viewFrom_;\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n      } else {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n      }\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n  }\n  // For now, priority index is the default, so we only specify if it's some other index\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = queryParams.index_.toString();\n  }\n  return obj;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  jsonEval,\n  safeGet,\n  querystring,\n  Deferred\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { logWrapper, warn } from './util/util';\nimport { QueryContext } from './view/EventRegistration';\nimport { queryParamsToRestQueryStringParameters } from './view/QueryParams';\n\n/**\n * An implementation of ServerActions that communicates with the server via REST requests.\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\n * persistent connection (using WebSockets or long-polling)\n */\nexport class ReadonlyRestClient extends ServerActions {\n  reportStats(stats: { [k: string]: unknown }): void {\n    throw new Error('Method not implemented.');\n  }\n\n  /** @private {function(...[*])} */\n  private log_: (...args: unknown[]) => void = logWrapper('p:rest:');\n\n  /**\n   * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\n   * that's been removed. :-/\n   */\n  private listens_: { [k: string]: object } = {};\n\n  static getListenId_(query: QueryContext, tag?: number | null): string {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(\n        query._queryParams.isDefault(),\n        \"should have a tag if it's not a default query.\"\n      );\n      return query._path.toString();\n    }\n  }\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider\n  ) {\n    super();\n  }\n\n  /** @inheritDoc */\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\n\n    // Mark this listener so we can tell if it's removed.\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    const thisListen = {};\n    this.listens_[listenId] = thisListen;\n\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\n        }\n\n        if (safeGet(this.listens_, listenId) === thisListen) {\n          let status;\n          if (!error) {\n            status = 'ok';\n          } else if (error === 401) {\n            status = 'permission_denied';\n          } else {\n            status = 'rest_error:' + error;\n          }\n\n          onComplete(status, null);\n        }\n      }\n    );\n  }\n\n  /** @inheritDoc */\n  unlisten(query: QueryContext, tag: number | null) {\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  }\n\n  get(query: QueryContext): Promise<string> {\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    const pathString = query._path.toString();\n\n    const deferred = new Deferred<string>();\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(\n            pathString,\n            data,\n            /*isMerge=*/ false,\n            /*tag=*/ null\n          );\n          deferred.resolve(data as string);\n        } else {\n          deferred.reject(new Error(data as string));\n        }\n      }\n    );\n    return deferred.promise;\n  }\n\n  /** @inheritDoc */\n  refreshAuthToken(token: string) {\n    // no-op since we just always call getToken.\n  }\n\n  /**\n   * Performs a REST request to the given path, with the provided query string parameters,\n   * and any auth credentials we have.\n   */\n  private restRequest_(\n    pathString: string,\n    queryStringParameters: { [k: string]: string | number } = {},\n    callback: ((a: number | null, b?: unknown) => void) | null\n  ) {\n    queryStringParameters['format'] = 'export';\n\n    return Promise.all([\n      this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\n      this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\n    ]).then(([authToken, appCheckToken]) => {\n      if (authToken && authToken.accessToken) {\n        queryStringParameters['auth'] = authToken.accessToken;\n      }\n      if (appCheckToken && appCheckToken.token) {\n        queryStringParameters['ac'] = appCheckToken.token;\n      }\n\n      const url =\n        (this.repoInfo_.secure ? 'https://' : 'http://') +\n        this.repoInfo_.host +\n        pathString +\n        '?' +\n        'ns=' +\n        this.repoInfo_.namespace +\n        querystring(queryStringParameters);\n\n      this.log_('Sending REST request for ' + url);\n      const xhr = new XMLHttpRequest();\n      xhr.onreadystatechange = () => {\n        if (callback && xhr.readyState === 4) {\n          this.log_(\n            'REST Response for ' + url + ' received. status:',\n            xhr.status,\n            'response:',\n            xhr.responseText\n          );\n          let res = null;\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn(\n                'Failed to parse JSON response for ' +\n                  url +\n                  ': ' +\n                  xhr.responseText\n              );\n            }\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn(\n                'Got unsuccessful REST response for ' +\n                  url +\n                  ' Status: ' +\n                  xhr.status\n              );\n            }\n            callback(xhr.status);\n          }\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url, /*asynchronous=*/ true);\n      xhr.send();\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\n\n/**\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\n */\nexport class SnapshotHolder {\n  private rootNode_: Node = ChildrenNode.EMPTY_NODE;\n\n  getNode(path: Path): Node {\n    return this.rootNode_.getChild(path);\n  }\n\n  updateSnapshot(path: Path, newSnapshotNode: Node) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { Node } from './snap/Node';\nimport { Path, pathGetFront, pathIsEmpty, pathPopFront } from './util/Path';\n\n/**\n * Helper class to store a sparse set of snapshots.\n */\nexport interface SparseSnapshotTree {\n  value: Node | null;\n  readonly children: Map<string, SparseSnapshotTree>;\n}\n\nexport function newSparseSnapshotTree(): SparseSnapshotTree {\n  return {\n    value: null,\n    children: new Map()\n  };\n}\n\n/**\n * Gets the node stored at the given path if one exists.\n * Only seems to be used in tests.\n *\n * @param path - Path to look up snapshot for.\n * @returns The retrieved node, or null.\n */\nexport function sparseSnapshotTreeFind(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): Node | null {\n  if (sparseSnapshotTree.value != null) {\n    return sparseSnapshotTree.value.getChild(path);\n  } else if (!pathIsEmpty(path) && sparseSnapshotTree.children.size > 0) {\n    const childKey = pathGetFront(path);\n    path = pathPopFront(path);\n    if (sparseSnapshotTree.children.has(childKey)) {\n      const childTree = sparseSnapshotTree.children.get(childKey);\n      return sparseSnapshotTreeFind(childTree, path);\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Stores the given node at the specified path. If there is already a node\n * at a shallower path, it merges the new data into that snapshot node.\n *\n * @param path - Path to look up snapshot for.\n * @param data - The new data, or null.\n */\nexport function sparseSnapshotTreeRemember(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path,\n  data: Node\n): void {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = data;\n    sparseSnapshotTree.children.clear();\n  } else if (sparseSnapshotTree.value !== null) {\n    sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\n  } else {\n    const childKey = pathGetFront(path);\n    if (!sparseSnapshotTree.children.has(childKey)) {\n      sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\n    }\n\n    const child = sparseSnapshotTree.children.get(childKey);\n    path = pathPopFront(path);\n    sparseSnapshotTreeRemember(child, path, data);\n  }\n}\n\n/**\n * Purge the data at path from the cache.\n *\n * @param path - Path to look up snapshot for.\n * @returns True if this node should now be removed.\n */\nexport function sparseSnapshotTreeForget(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): boolean {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = null;\n    sparseSnapshotTree.children.clear();\n    return true;\n  } else {\n    if (sparseSnapshotTree.value !== null) {\n      if (sparseSnapshotTree.value.isLeafNode()) {\n        // We're trying to forget a node that doesn't exist\n        return false;\n      } else {\n        const value = sparseSnapshotTree.value;\n        sparseSnapshotTree.value = null;\n\n        value.forEachChild(PRIORITY_INDEX, (key, tree) => {\n          sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\n        });\n\n        return sparseSnapshotTreeForget(sparseSnapshotTree, path);\n      }\n    } else if (sparseSnapshotTree.children.size > 0) {\n      const childKey = pathGetFront(path);\n      path = pathPopFront(path);\n      if (sparseSnapshotTree.children.has(childKey)) {\n        const safeToRemove = sparseSnapshotTreeForget(\n          sparseSnapshotTree.children.get(childKey),\n          path\n        );\n        if (safeToRemove) {\n          sparseSnapshotTree.children.delete(childKey);\n        }\n      }\n\n      return sparseSnapshotTree.children.size === 0;\n    } else {\n      return true;\n    }\n  }\n}\n\n/**\n * Recursively iterates through all of the stored tree and calls the\n * callback on each one.\n *\n * @param prefixPath - Path to look up node for.\n * @param func - The function to invoke for each tree.\n */\nexport function sparseSnapshotTreeForEachTree(\n  sparseSnapshotTree: SparseSnapshotTree,\n  prefixPath: Path,\n  func: (a: Path, b: Node) => unknown\n): void {\n  if (sparseSnapshotTree.value !== null) {\n    func(prefixPath, sparseSnapshotTree.value);\n  } else {\n    sparseSnapshotTreeForEachChild(sparseSnapshotTree, (key, tree) => {\n      const path = new Path(prefixPath.toString() + '/' + key);\n      sparseSnapshotTreeForEachTree(tree, path, func);\n    });\n  }\n}\n\n/**\n * Iterates through each immediate child and triggers the callback.\n * Only seems to be used in tests.\n *\n * @param func - The function to invoke for each child.\n */\nexport function sparseSnapshotTreeForEachChild(\n  sparseSnapshotTree: SparseSnapshotTree,\n  func: (a: string, b: SparseSnapshotTree) => void\n): void {\n  sparseSnapshotTree.children.forEach((tree, key) => {\n    func(key, tree);\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\n\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ - The collection to \"listen\" to.\n */\nexport class StatsListener {\n  private last_: { [k: string]: number } | null = null;\n\n  constructor(private collection_: StatsCollection) {}\n\n  get(): { [k: string]: number } {\n    const newStats = this.collection_.get();\n\n    const delta = { ...newStats };\n    if (this.last_) {\n      each(this.last_, (stat: string, value: number) => {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n    this.last_ = newStats;\n\n    return delta;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\nimport { ServerActions } from '../ServerActions';\nimport { setTimeoutNonBlocking, each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\nimport { StatsListener } from './StatsListener';\n\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\n\n// We'll continue to report stats on average every 5 minutes.\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nexport class StatsReporter {\n  private statsListener_: StatsListener;\n  statsToReport_: { [k: string]: boolean } = {};\n\n  constructor(collection: StatsCollection, private server_: ServerActions) {\n    this.statsListener_ = new StatsListener(collection);\n\n    const timeout =\n      FIRST_STATS_MIN_TIME +\n      (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  private reportStats_() {\n    const stats = this.statsListener_.get();\n    const reportedStats: typeof stats = {};\n    let haveStatsToReport = false;\n\n    each(stats, (stat: string, value: number) => {\n      if (value > 0 && contains(this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    }\n\n    // queue our next run.\n    setTimeoutNonBlocking(\n      this.reportStats_.bind(this),\n      Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL)\n    );\n  }\n}\n\nexport function statsReporterIncludeStat(\n  reporter: StatsReporter,\n  stat: string\n) {\n  reporter.statsToReport_[stat] = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\n/**\n *\n * @enum\n */\nexport enum OperationType {\n  OVERWRITE,\n  MERGE,\n  ACK_USER_WRITE,\n  LISTEN_COMPLETE\n}\n\n/**\n * @interface\n */\nexport interface Operation {\n  source: OperationSource;\n\n  type: OperationType;\n\n  path: Path;\n\n  operationForChild(childName: string): Operation | null;\n}\n\nexport interface OperationSource {\n  fromUser: boolean;\n  fromServer: boolean;\n  queryId: string | null;\n  tagged: boolean;\n}\n\nexport function newOperationSourceUser(): OperationSource {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServer(): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServerTaggedQuery(\n  queryId: string\n): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId,\n    tagged: true\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { newOperationSourceUser, Operation, OperationType } from './Operation';\n\nexport class AckUserWrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.ACK_USER_WRITE;\n\n  /** @inheritDoc */\n  source = newOperationSourceUser();\n\n  /**\n   * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\n   */\n  constructor(\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public affectedTree: ImmutableTree<boolean>,\n    /** @inheritDoc */ public revert: boolean\n  ) {}\n  operationForChild(childName: string): AckUserWrite {\n    if (!pathIsEmpty(this.path)) {\n      assert(\n        pathGetFront(this.path) === childName,\n        'operationForChild called for unrelated child.'\n      );\n      return new AckUserWrite(\n        pathPopFront(this.path),\n        this.affectedTree,\n        this.revert\n      );\n    } else if (this.affectedTree.value != null) {\n      assert(\n        this.affectedTree.children.isEmpty(),\n        'affectedTree should not have overlapping affected paths.'\n      );\n      // All child locations are affected as well; just return same operation.\n      return this;\n    } else {\n      const childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(newEmptyPath(), childTree, this.revert);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class ListenComplete implements Operation {\n  /** @inheritDoc */\n  type = OperationType.LISTEN_COMPLETE;\n\n  constructor(public source: OperationSource, public path: Path) {}\n\n  operationForChild(childName: string): ListenComplete {\n    if (pathIsEmpty(this.path)) {\n      return new ListenComplete(this.source, newEmptyPath());\n    } else {\n      return new ListenComplete(this.source, pathPopFront(this.path));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class Overwrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.OVERWRITE;\n\n  constructor(\n    public source: OperationSource,\n    public path: Path,\n    public snap: Node\n  ) {}\n\n  operationForChild(childName: string): Overwrite {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(\n        this.source,\n        newEmptyPath(),\n        this.snap.getImmediateChild(childName)\n      );\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { Overwrite } from './Overwrite';\n\nexport class Merge implements Operation {\n  /** @inheritDoc */\n  type = OperationType.MERGE;\n\n  constructor(\n    /** @inheritDoc */ public source: OperationSource,\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public children: ImmutableTree<Node>\n  ) {}\n  operationForChild(childName: string): Operation {\n    if (pathIsEmpty(this.path)) {\n      const childTree = this.children.subtree(new Path(childName));\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(\n        pathGetFront(this.path) === childName,\n        \"Can't get a merge for a child not on the path of the operation\"\n      );\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  }\n  toString(): string {\n    return (\n      'Operation(' +\n      this.path +\n      ': ' +\n      this.source.toString() +\n      ' merge: ' +\n      this.children.toString() +\n      ')'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\n\n/**\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\n * whether a node potentially had children removed due to a filter.\n */\nexport class CacheNode {\n  constructor(\n    private node_: Node,\n    private fullyInitialized_: boolean,\n    private filtered_: boolean\n  ) {}\n\n  /**\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\n   */\n  isFullyInitialized(): boolean {\n    return this.fullyInitialized_;\n  }\n\n  /**\n   * Returns whether this node is potentially missing children due to a filter applied to the node\n   */\n  isFiltered(): boolean {\n    return this.filtered_;\n  }\n\n  isCompleteForPath(path: Path): boolean {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    const childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  }\n\n  isCompleteForChild(key: string): boolean {\n    return (\n      (this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key)\n    );\n  }\n\n  getNode(): Node {\n    return this.node_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assertionError } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\n\nimport { Change, ChangeType, changeChildMoved } from './Change';\nimport { Event } from './Event';\nimport { EventRegistration, QueryContext } from './EventRegistration';\n\n/**\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\n * for details.\n *\n */\nexport class EventGenerator {\n  index_: Index;\n\n  constructor(public query_: QueryContext) {\n    this.index_ = this.query_._queryParams.getIndex();\n  }\n}\n\n/**\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\n *\n * Notes:\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\n *    our index.\n *  - prevName will be calculated based on the index ordering.\n */\nexport function eventGeneratorGenerateEventsForChanges(\n  eventGenerator: EventGenerator,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistrations: EventRegistration[]\n): Event[] {\n  const events: Event[] = [];\n  const moves: Change[] = [];\n\n  changes.forEach(change => {\n    if (\n      change.type === ChangeType.CHILD_CHANGED &&\n      eventGenerator.index_.indexedValueChanged(\n        change.oldSnap as Node,\n        change.snapshotNode\n      )\n    ) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_REMOVED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_ADDED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_MOVED,\n    moves,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_CHANGED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.VALUE,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n\n  return events;\n}\n\n/**\n * Given changes of a single change type, generate the corresponding events.\n */\nfunction eventGeneratorGenerateEventsForType(\n  eventGenerator: EventGenerator,\n  events: Event[],\n  eventType: string,\n  changes: Change[],\n  registrations: EventRegistration[],\n  eventCache: Node\n) {\n  const filteredChanges = changes.filter(change => change.type === eventType);\n\n  filteredChanges.sort((a, b) =>\n    eventGeneratorCompareChanges(eventGenerator, a, b)\n  );\n  filteredChanges.forEach(change => {\n    const materializedChange = eventGeneratorMaterializeSingleChange(\n      eventGenerator,\n      change,\n      eventCache\n    );\n    registrations.forEach(registration => {\n      if (registration.respondsTo(change.type)) {\n        events.push(\n          registration.createEvent(materializedChange, eventGenerator.query_)\n        );\n      }\n    });\n  });\n}\n\nfunction eventGeneratorMaterializeSingleChange(\n  eventGenerator: EventGenerator,\n  change: Change,\n  eventCache: Node\n): Change {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(\n      change.childName,\n      change.snapshotNode,\n      eventGenerator.index_\n    );\n    return change;\n  }\n}\n\nfunction eventGeneratorCompareChanges(\n  eventGenerator: EventGenerator,\n  a: Change,\n  b: Change\n) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n  const aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  const bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nimport { CacheNode } from './CacheNode';\n\n/**\n * Stores the data we have cached for a view.\n *\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\n */\nexport interface ViewCache {\n  readonly eventCache: CacheNode;\n  readonly serverCache: CacheNode;\n}\n\nexport function newViewCache(\n  eventCache: CacheNode,\n  serverCache: CacheNode\n): ViewCache {\n  return { eventCache, serverCache };\n}\n\nexport function viewCacheUpdateEventSnap(\n  viewCache: ViewCache,\n  eventSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    new CacheNode(eventSnap, complete, filtered),\n    viewCache.serverCache\n  );\n}\n\nexport function viewCacheUpdateServerSnap(\n  viewCache: ViewCache,\n  serverSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    viewCache.eventCache,\n    new CacheNode(serverSnap, complete, filtered)\n  );\n}\n\nexport function viewCacheGetCompleteEventSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.eventCache.isFullyInitialized()\n    ? viewCache.eventCache.getNode()\n    : null;\n}\n\nexport function viewCacheGetCompleteServerSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.serverCache.isFullyInitialized()\n    ? viewCache.serverCache.getNode()\n    : null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './Path';\nimport { SortedMap } from './SortedMap';\nimport { each, stringCompare } from './util';\n\nlet emptyChildrenSingleton: SortedMap<string, ImmutableTree<null>>;\n\n/**\n * Singleton empty children collection.\n *\n */\nconst EmptyChildren = (): SortedMap<string, ImmutableTree<null>> => {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap<string, ImmutableTree<null>>(\n      stringCompare\n    );\n  }\n  return emptyChildrenSingleton;\n};\n\n/**\n * A tree with immutable elements.\n */\nexport class ImmutableTree<T> {\n  static fromObject<T>(obj: { [k: string]: T }): ImmutableTree<T> {\n    let tree: ImmutableTree<T> = new ImmutableTree<T>(null);\n    each(obj, (childPath: string, childSnap: T) => {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  }\n\n  constructor(\n    public readonly value: T | null,\n    public readonly children: SortedMap<\n      string,\n      ImmutableTree<T>\n    > = EmptyChildren()\n  ) {}\n\n  /**\n   * True if the value is empty and there are no children\n   */\n  isEmpty(): boolean {\n    return this.value === null && this.children.isEmpty();\n  }\n\n  /**\n   * Given a path and predicate, return the first node and the path to that node\n   * where the predicate returns true.\n   *\n   * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\n   * objects on the way back out, it may be better to pass down a pathSoFar obj.\n   *\n   * @param relativePath - The remainder of the path\n   * @param predicate - The predicate to satisfy to return a node\n   */\n  findRootMostMatchingPathAndValue(\n    relativePath: Path,\n    predicate: (a: T) => boolean\n  ): { path: Path; value: T } | null {\n    if (this.value != null && predicate(this.value)) {\n      return { path: newEmptyPath(), value: this.value };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        const front = pathGetFront(relativePath);\n        const child = this.children.get(front);\n        if (child !== null) {\n          const childExistingPathAndValue =\n            child.findRootMostMatchingPathAndValue(\n              pathPopFront(relativePath),\n              predicate\n            );\n          if (childExistingPathAndValue != null) {\n            const fullPath = pathChild(\n              new Path(front),\n              childExistingPathAndValue.path\n            );\n            return { path: fullPath, value: childExistingPathAndValue.value };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  /**\n   * Find, if it exists, the shortest subpath of the given path that points a defined\n   * value in the tree\n   */\n  findRootMostValueAndPath(\n    relativePath: Path\n  ): { path: Path; value: T } | null {\n    return this.findRootMostMatchingPathAndValue(relativePath, () => true);\n  }\n\n  /**\n   * @returns The subtree at the given path\n   */\n  subtree(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      const front = pathGetFront(relativePath);\n      const childTree = this.children.get(front);\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Sets a value at the specified path.\n   *\n   * @param relativePath - Path to set value at.\n   * @param toSet - Value to set.\n   * @returns Resulting tree.\n   */\n  set(relativePath: Path, toSet: T | null): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.set(pathPopFront(relativePath), toSet);\n      const newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Removes the value at the specified path.\n   *\n   * @param relativePath - Path to value to remove.\n   * @returns Resulting tree.\n   */\n  remove(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree<T>(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        const newChild = child.remove(pathPopFront(relativePath));\n        let newChildren;\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree<T>(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  }\n\n  /**\n   * Gets a value from the tree.\n   *\n   * @param relativePath - Path to get value for.\n   * @returns Value at path, or null.\n   */\n  get(relativePath: Path): T | null {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Replace the subtree at the specified path with the given new tree.\n   *\n   * @param relativePath - Path to replace subtree for.\n   * @param newTree - New tree.\n   * @returns Resulting tree.\n   */\n  setTree(relativePath: Path, newTree: ImmutableTree<T>): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.setTree(pathPopFront(relativePath), newTree);\n      let newChildren;\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Performs a depth first fold on this tree. Transforms a tree into a single\n   * value, given a function that operates on the path to a node, an optional\n   * current value, and a map of child names to folded subtrees\n   */\n  fold<V>(fn: (path: Path, value: T, children: { [k: string]: V }) => V): V {\n    return this.fold_(newEmptyPath(), fn);\n  }\n\n  /**\n   * Recursive helper for public-facing fold() method\n   */\n  private fold_<V>(\n    pathSoFar: Path,\n    fn: (path: Path, value: T | null, children: { [k: string]: V }) => V\n  ): V {\n    const accum: { [k: string]: V } = {};\n    this.children.inorderTraversal(\n      (childKey: string, childTree: ImmutableTree<T>) => {\n        accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n      }\n    );\n    return fn(pathSoFar, this.value, accum);\n  }\n\n  /**\n   * Find the first matching value on the given path. Return the result of applying f to it.\n   */\n  findOnPath<V>(path: Path, f: (path: Path, value: T) => V | null): V | null {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  }\n\n  private findOnPath_<V>(\n    pathToFollow: Path,\n    pathSoFar: Path,\n    f: (path: Path, value: T) => V | null\n  ): V | null {\n    const result = this.value ? f(pathSoFar, this.value) : false;\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        const front = pathGetFront(pathToFollow)!;\n        const nextChild = this.children.get(front);\n        if (nextChild) {\n          return nextChild.findOnPath_(\n            pathPopFront(pathToFollow),\n            pathChild(pathSoFar, front),\n            f\n          );\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  foreachOnPath(\n    path: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  }\n\n  private foreachOnPath_(\n    pathToFollow: Path,\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n      const front = pathGetFront(pathToFollow);\n      const nextChild = this.children.get(front);\n      if (nextChild) {\n        return nextChild.foreachOnPath_(\n          pathPopFront(pathToFollow),\n          pathChild(currentRelativePath, front),\n          f\n        );\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Calls the given function for each node in the tree that has a value.\n   *\n   * @param f - A function to be called with the path from the root of the tree to\n   * a node, and the value at that node. Called in depth-first order.\n   */\n  foreach(f: (path: Path, value: T) => void) {\n    this.foreach_(newEmptyPath(), f);\n  }\n\n  private foreach_(\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ) {\n    this.children.inorderTraversal((childName, childTree) => {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  }\n\n  foreachChild(f: (name: string, value: T) => void) {\n    this.children.inorderTraversal(\n      (childName: string, childTree: ImmutableTree<T>) => {\n        if (childTree.value) {\n          f(childName, childTree.value);\n        }\n      }\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathIsEmpty\n} from './util/Path';\nimport { each } from './util/util';\n\n/**\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\n * to reflect the write added.\n */\nexport class CompoundWrite {\n  constructor(public writeTree_: ImmutableTree<Node>) {}\n\n  static empty(): CompoundWrite {\n    return new CompoundWrite(new ImmutableTree(null));\n  }\n}\n\nexport function compoundWriteAddWrite(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  node: Node\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n    if (rootmost != null) {\n      const rootMostPath = rootmost.path;\n      let value = rootmost.value;\n      const relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(\n        compoundWrite.writeTree_.set(rootMostPath, value)\n      );\n    } else {\n      const subtree = new ImmutableTree(node);\n      const newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\n\nexport function compoundWriteAddWrites(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  updates: { [name: string]: Node }\n): CompoundWrite {\n  let newWrite = compoundWrite;\n  each(updates, (childKey: string, node: Node) => {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n\n/**\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\n * location, which must be removed by calling this method with that path.\n *\n * @param compoundWrite - The CompoundWrite to remove.\n * @param path - The path at which a write and all deeper writes should be removed\n * @returns The new CompoundWrite with the removed path\n */\nexport function compoundWriteRemoveWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    const newWriteTree = compoundWrite.writeTree_.setTree(\n      path,\n      new ImmutableTree<Node>(null)\n    );\n    return new CompoundWrite(newWriteTree);\n  }\n}\n\n/**\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\n * considered \"complete\".\n *\n * @param compoundWrite - The CompoundWrite to check.\n * @param path - The path to check for\n * @returns Whether there is a complete write at that path\n */\nexport function compoundWriteHasCompleteWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): boolean {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n\n/**\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\n * writes from deeper paths, but will return child nodes from a more shallow path.\n *\n * @param compoundWrite - The CompoundWrite to get the node from.\n * @param path - The path to get a complete write\n * @returns The node if complete at that path, or null otherwise.\n */\nexport function compoundWriteGetCompleteNode(\n  compoundWrite: CompoundWrite,\n  path: Path\n): Node | null {\n  const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n  if (rootmost != null) {\n    return compoundWrite.writeTree_\n      .get(rootmost.path)\n      .getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns all children that are guaranteed to be a complete overwrite.\n *\n * @param compoundWrite - The CompoundWrite to get children from.\n * @returns A list of all complete children.\n */\nexport function compoundWriteGetCompleteChildren(\n  compoundWrite: CompoundWrite\n): NamedNode[] {\n  const children: NamedNode[] = [];\n  const node = compoundWrite.writeTree_.value;\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      (node as ChildrenNode).forEachChild(\n        PRIORITY_INDEX,\n        (childName, childNode) => {\n          children.push(new NamedNode(childName, childNode));\n        }\n      );\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(\n      (childName, childTree) => {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      }\n    );\n  }\n  return children;\n}\n\nexport function compoundWriteChildCompoundWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    const shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n\n/**\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\n * @returns Whether this CompoundWrite is empty\n */\nexport function compoundWriteIsEmpty(compoundWrite: CompoundWrite): boolean {\n  return compoundWrite.writeTree_.isEmpty();\n}\n\n/**\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\n * node\n * @param node - The node to apply this CompoundWrite to\n * @returns The node with all writes applied\n */\nexport function compoundWriteApply(\n  compoundWrite: CompoundWrite,\n  node: Node\n): Node {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\n\nfunction applySubtreeWrite(\n  relativePath: Path,\n  writeTree: ImmutableTree<Node>,\n  node: Node\n): Node {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    let priorityWrite = null;\n    writeTree.children.inorderTraversal((childKey, childTree) => {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(\n          childTree.value !== null,\n          'Priority writes must always be leaf nodes'\n        );\n        priorityWrite = childTree.value;\n      } else {\n        node = applySubtreeWrite(\n          pathChild(relativePath, childKey),\n          childTree,\n          node\n        );\n      }\n    });\n    // If there was a priority write, we only apply it if the node is not empty\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite !== null) {\n      node = node.updateChild(\n        pathChild(relativePath, '.priority'),\n        priorityWrite\n      );\n    }\n    return node;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError, safeGet } from '@firebase/util';\n\nimport {\n  CompoundWrite,\n  compoundWriteAddWrite,\n  compoundWriteAddWrites,\n  compoundWriteApply,\n  compoundWriteChildCompoundWrite,\n  compoundWriteGetCompleteChildren,\n  compoundWriteGetCompleteNode,\n  compoundWriteHasCompleteWrite,\n  compoundWriteIsEmpty,\n  compoundWriteRemoveWrite\n} from './CompoundWrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Index } from './snap/indexes/Index';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathContains,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './util/Path';\nimport { each } from './util/util';\nimport { CacheNode } from './view/CacheNode';\n\n/**\n * Defines a single user-initiated write operation. May be the result of a set(), transaction(), or update() call. In\n * the case of a set() or transaction, snap wil be non-null.  In the case of an update(), children will be non-null.\n */\nexport interface WriteRecord {\n  writeId: number;\n  path: Path;\n  snap?: Node | null;\n  children?: { [k: string]: Node } | null;\n  visible: boolean;\n}\n\n/**\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\n *\n */\nexport function writeTreeChildWrites(\n  writeTree: WriteTree,\n  path: Path\n): WriteTreeRef {\n  return newWriteTreeRef(path, writeTree);\n}\n\n/**\n * Record a new overwrite from user code.\n *\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\n */\nexport function writeTreeAddOverwrite(\n  writeTree: WriteTree,\n  path: Path,\n  snap: Node,\n  writeId: number,\n  visible?: boolean\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older write on top of newer ones'\n  );\n  if (visible === undefined) {\n    visible = true;\n  }\n  writeTree.allWrites.push({\n    path,\n    snap,\n    writeId,\n    visible\n  });\n\n  if (visible) {\n    writeTree.visibleWrites = compoundWriteAddWrite(\n      writeTree.visibleWrites,\n      path,\n      snap\n    );\n  }\n  writeTree.lastWriteId = writeId;\n}\n\n/**\n * Record a new merge from user code.\n */\nexport function writeTreeAddMerge(\n  writeTree: WriteTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older merge on top of newer ones'\n  );\n  writeTree.allWrites.push({\n    path,\n    children: changedChildren,\n    writeId,\n    visible: true\n  });\n\n  writeTree.visibleWrites = compoundWriteAddWrites(\n    writeTree.visibleWrites,\n    path,\n    changedChildren\n  );\n  writeTree.lastWriteId = writeId;\n}\n\nexport function writeTreeGetWrite(\n  writeTree: WriteTree,\n  writeId: number\n): WriteRecord | null {\n  for (let i = 0; i < writeTree.allWrites.length; i++) {\n    const record = writeTree.allWrites[i];\n    if (record.writeId === writeId) {\n      return record;\n    }\n  }\n  return null;\n}\n\n/**\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\n *\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\n * events as a result).\n */\nexport function writeTreeRemoveWrite(\n  writeTree: WriteTree,\n  writeId: number\n): boolean {\n  // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n  // out of order.\n  //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n  //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n\n  const idx = writeTree.allWrites.findIndex(s => {\n    return s.writeId === writeId;\n  });\n  assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n  const writeToRemove = writeTree.allWrites[idx];\n  writeTree.allWrites.splice(idx, 1);\n\n  let removedWriteWasVisible = writeToRemove.visible;\n  let removedWriteOverlapsWithOtherWrites = false;\n\n  let i = writeTree.allWrites.length - 1;\n\n  while (removedWriteWasVisible && i >= 0) {\n    const currentWrite = writeTree.allWrites[i];\n    if (currentWrite.visible) {\n      if (\n        i >= idx &&\n        writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)\n      ) {\n        // The removed write was completely shadowed by a subsequent write.\n        removedWriteWasVisible = false;\n      } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n        // Either we're covering some writes or they're covering part of us (depending on which came first).\n        removedWriteOverlapsWithOtherWrites = true;\n      }\n    }\n    i--;\n  }\n\n  if (!removedWriteWasVisible) {\n    return false;\n  } else if (removedWriteOverlapsWithOtherWrites) {\n    // There's some shadowing going on. Just rebuild the visible writes from scratch.\n    writeTreeResetTree_(writeTree);\n    return true;\n  } else {\n    // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n    if (writeToRemove.snap) {\n      writeTree.visibleWrites = compoundWriteRemoveWrite(\n        writeTree.visibleWrites,\n        writeToRemove.path\n      );\n    } else {\n      const children = writeToRemove.children;\n      each(children, (childName: string) => {\n        writeTree.visibleWrites = compoundWriteRemoveWrite(\n          writeTree.visibleWrites,\n          pathChild(writeToRemove.path, childName)\n        );\n      });\n    }\n    return true;\n  }\n}\n\nfunction writeTreeRecordContainsPath_(\n  writeRecord: WriteRecord,\n  path: Path\n): boolean {\n  if (writeRecord.snap) {\n    return pathContains(writeRecord.path, path);\n  } else {\n    for (const childName in writeRecord.children) {\n      if (\n        writeRecord.children.hasOwnProperty(childName) &&\n        pathContains(pathChild(writeRecord.path, childName), path)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\n */\nfunction writeTreeResetTree_(writeTree: WriteTree) {\n  writeTree.visibleWrites = writeTreeLayerTree_(\n    writeTree.allWrites,\n    writeTreeDefaultFilter_,\n    newEmptyPath()\n  );\n  if (writeTree.allWrites.length > 0) {\n    writeTree.lastWriteId =\n      writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\n  } else {\n    writeTree.lastWriteId = -1;\n  }\n}\n\n/**\n * The default filter used when constructing the tree. Keep everything that's visible.\n */\nfunction writeTreeDefaultFilter_(write: WriteRecord) {\n  return write.visible;\n}\n\n/**\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\n * event data at that path.\n */\nfunction writeTreeLayerTree_(\n  writes: WriteRecord[],\n  filter: (w: WriteRecord) => boolean,\n  treeRoot: Path\n): CompoundWrite {\n  let compoundWrite = CompoundWrite.empty();\n  for (let i = 0; i < writes.length; ++i) {\n    const write = writes[i];\n    // Theory, a later set will either:\n    // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n    // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n    if (filter(write)) {\n      const writePath = write.path;\n      let relativePath: Path;\n      if (write.snap) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            relativePath,\n            write.snap\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            newEmptyPath(),\n            write.snap.getChild(relativePath)\n          );\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else if (write.children) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrites(\n            compoundWrite,\n            relativePath,\n            write.children\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          if (pathIsEmpty(relativePath)) {\n            compoundWrite = compoundWriteAddWrites(\n              compoundWrite,\n              newEmptyPath(),\n              write.children\n            );\n          } else {\n            const child = safeGet(write.children, pathGetFront(relativePath));\n            if (child) {\n              // There exists a child in this node that matches the root path\n              const deepNode = child.getChild(pathPopFront(relativePath));\n              compoundWrite = compoundWriteAddWrite(\n                compoundWrite,\n                newEmptyPath(),\n                deepNode\n              );\n            }\n          }\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else {\n        throw assertionError('WriteRecord should have .snap or .children');\n      }\n    }\n  }\n  return compoundWrite;\n}\n\n/**\n * Return a complete snapshot for the given path if there's visible write data at that path, else null.\n * No server data is considered.\n *\n */\nexport function writeTreeGetCompleteWriteData(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\n * writes), attempt to calculate a complete snapshot for the given path\n *\n * @param writeIdsToExclude - An optional set to be excluded\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeCalcCompleteEventCache(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  if (!writeIdsToExclude && !includeHiddenWrites) {\n    const shadowingNode = compoundWriteGetCompleteNode(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      const subMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        treePath\n      );\n      if (compoundWriteIsEmpty(subMerge)) {\n        return completeServerCache;\n      } else if (\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())\n      ) {\n        // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n        return null;\n      } else {\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(subMerge, layeredCache);\n      }\n    }\n  } else {\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n      return completeServerCache;\n    } else {\n      // If the server cache is null, and we don't have a complete cache, we need to return null\n      if (\n        !includeHiddenWrites &&\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(merge, newEmptyPath())\n      ) {\n        return null;\n      } else {\n        const filter = function (write: WriteRecord) {\n          return (\n            (write.visible || includeHiddenWrites) &&\n            (!writeIdsToExclude ||\n              !~writeIdsToExclude.indexOf(write.writeId)) &&\n            (pathContains(write.path, treePath) ||\n              pathContains(treePath, write.path))\n          );\n        };\n        const mergeAtPath = writeTreeLayerTree_(\n          writeTree.allWrites,\n          filter,\n          treePath\n        );\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(mergeAtPath, layeredCache);\n      }\n    }\n  }\n}\n\n/**\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\n * Used when creating new views, to pre-fill their complete event children snapshot.\n */\nexport function writeTreeCalcCompleteEventChildren(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerChildren: ChildrenNode | null\n) {\n  let completeChildren = ChildrenNode.EMPTY_NODE as Node;\n  const topLevelSet = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    treePath\n  );\n  if (topLevelSet) {\n    if (!topLevelSet.isLeafNode()) {\n      // we're shadowing everything. Return the children.\n      topLevelSet.forEachChild(PRIORITY_INDEX, (childName, childSnap) => {\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          childSnap\n        );\n      });\n    }\n    return completeChildren;\n  } else if (completeServerChildren) {\n    // Layer any children we have on top of this\n    // We know we don't have a top-level set, so just enumerate existing children\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    completeServerChildren.forEachChild(\n      PRIORITY_INDEX,\n      (childName, childNode) => {\n        const node = compoundWriteApply(\n          compoundWriteChildCompoundWrite(merge, new Path(childName)),\n          childNode\n        );\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          node\n        );\n      }\n    );\n    // Add any complete children we have from the set\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  } else {\n    // We don't have anything to layer on top of. Layer on any children we have\n    // Note that we can return an empty snap if we have a defined delete\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  }\n}\n\n/**\n * Given that the underlying server data has updated, determine what, if anything, needs to be\n * applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events\n *\n * Either existingEventSnap or existingServerSnap must exist\n */\nexport function writeTreeCalcEventCacheAfterServerOverwrite(\n  writeTree: WriteTree,\n  treePath: Path,\n  childPath: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  assert(\n    existingEventSnap || existingServerSnap,\n    'Either existingEventSnap or existingServerSnap must exist'\n  );\n  const path = pathChild(treePath, childPath);\n  if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\n    // At this point we can probably guarantee that we're in case 2, meaning no events\n    // May need to check visibility while doing the findRootMostValueAndPath call\n    return null;\n  } else {\n    // No complete shadowing. We're either partially shadowing or not shadowing at all.\n    const childMerge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      path\n    );\n    if (compoundWriteIsEmpty(childMerge)) {\n      // We're not shadowing at all. Case 1\n      return existingServerSnap.getChild(childPath);\n    } else {\n      // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n      // However this is tricky to find out, since user updates don't necessary change the server\n      // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n      // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n      // only check if the updates change the serverNode.\n      // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getChild(childPath)\n      );\n    }\n  }\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeCalcCompleteChild(\n  writeTree: WriteTree,\n  treePath: Path,\n  childKey: string,\n  existingServerSnap: CacheNode\n): Node | null {\n  const path = pathChild(treePath, childKey);\n  const shadowingNode = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    path\n  );\n  if (shadowingNode != null) {\n    return shadowingNode;\n  } else {\n    if (existingServerSnap.isCompleteForChild(childKey)) {\n      const childMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        path\n      );\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getNode().getImmediateChild(childKey)\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n */\nexport function writeTreeShadowingWrite(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window.\n */\nexport function writeTreeCalcIndexedSlice(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  let toIterate: Node;\n  const merge = compoundWriteChildCompoundWrite(\n    writeTree.visibleWrites,\n    treePath\n  );\n  const shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n  if (shadowingNode != null) {\n    toIterate = shadowingNode;\n  } else if (completeServerData != null) {\n    toIterate = compoundWriteApply(merge, completeServerData);\n  } else {\n    // no children to iterate on\n    return [];\n  }\n  toIterate = toIterate.withIndex(index);\n  if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n    const nodes = [];\n    const cmp = index.getCompare();\n    const iter = reverse\n      ? (toIterate as ChildrenNode).getReverseIteratorFrom(startPost, index)\n      : (toIterate as ChildrenNode).getIteratorFrom(startPost, index);\n    let next = iter.getNext();\n    while (next && nodes.length < count) {\n      if (cmp(next, startPost) !== 0) {\n        nodes.push(next);\n      }\n      next = iter.getNext();\n    }\n    return nodes;\n  } else {\n    return [];\n  }\n}\n\nexport function newWriteTree(): WriteTree {\n  return {\n    visibleWrites: CompoundWrite.empty(),\n    allWrites: [],\n    lastWriteId: -1\n  };\n}\n\n/**\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\n * and addMerge(), and removed with removeWrite().\n */\nexport interface WriteTree {\n  /**\n   * A tree tracking the result of applying all visible writes.  This does not include transactions with\n   * applyLocally=false or writes that are completely shadowed by other writes.\n   */\n  visibleWrites: CompoundWrite;\n\n  /**\n   * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\n   * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\n   * used by transactions).\n   */\n  allWrites: WriteRecord[];\n\n  lastWriteId: number;\n}\n\n/**\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\n * can lead to a more expensive calculation.\n *\n * @param writeIdsToExclude - Optional writes to exclude.\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeRefCalcCompleteEventCache(\n  writeTreeRef: WriteTreeRef,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  return writeTreeCalcCompleteEventCache(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerCache,\n    writeIdsToExclude,\n    includeHiddenWrites\n  );\n}\n\n/**\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\n * mix of the given server data and write data.\n *\n */\nexport function writeTreeRefCalcCompleteEventChildren(\n  writeTreeRef: WriteTreeRef,\n  completeServerChildren: ChildrenNode | null\n): ChildrenNode {\n  return writeTreeCalcCompleteEventChildren(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerChildren\n  ) as ChildrenNode;\n}\n\n/**\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\n * if anything, needs to be applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events should be raised\n *\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\n *\n *\n */\nexport function writeTreeRefCalcEventCacheAfterServerOverwrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  return writeTreeCalcEventCacheAfterServerOverwrite(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    path,\n    existingEventSnap,\n    existingServerSnap\n  );\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n *\n */\nexport function writeTreeRefShadowingWrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path\n): Node | null {\n  return writeTreeShadowingWrite(\n    writeTreeRef.writeTree,\n    pathChild(writeTreeRef.treePath, path)\n  );\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window\n */\nexport function writeTreeRefCalcIndexedSlice(\n  writeTreeRef: WriteTreeRef,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  return writeTreeCalcIndexedSlice(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerData,\n    startPost,\n    count,\n    reverse,\n    index\n  );\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeRefCalcCompleteChild(\n  writeTreeRef: WriteTreeRef,\n  childKey: string,\n  existingServerCache: CacheNode\n): Node | null {\n  return writeTreeCalcCompleteChild(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    childKey,\n    existingServerCache\n  );\n}\n\n/**\n * Return a WriteTreeRef for a child.\n */\nexport function writeTreeRefChild(\n  writeTreeRef: WriteTreeRef,\n  childName: string\n): WriteTreeRef {\n  return newWriteTreeRef(\n    pathChild(writeTreeRef.treePath, childName),\n    writeTreeRef.writeTree\n  );\n}\n\nexport function newWriteTreeRef(\n  path: Path,\n  writeTree: WriteTree\n): WriteTreeRef {\n  return {\n    treePath: path,\n    writeTree\n  };\n}\n\n/**\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\n * just proxy to the underlying WriteTree.\n *\n */\nexport interface WriteTreeRef {\n  /**\n   * The path to this particular write tree ref. Used for calling methods on writeTree_ while exposing a simpler\n   * interface to callers.\n   */\n  readonly treePath: Path;\n\n  /**\n   * * A reference to the actual tree of write data. All methods are pass-through to the tree, but with the appropriate\n   * path prefixed.\n   *\n   * This lets us make cheap references to points in the tree for sync points without having to copy and maintain all of\n   * the data.\n   */\n  readonly writeTree: WriteTree;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport {\n  Change,\n  ChangeType,\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from './Change';\n\nexport class ChildChangeAccumulator {\n  private readonly changeMap: Map<string, Change> = new Map();\n\n  trackChildChange(change: Change) {\n    const type = change.type;\n    const childKey = change.childName!;\n    assert(\n      type === ChangeType.CHILD_ADDED ||\n        type === ChangeType.CHILD_CHANGED ||\n        type === ChangeType.CHILD_REMOVED,\n      'Only child changes supported for tracking'\n    );\n    assert(\n      childKey !== '.priority',\n      'Only non-priority child changes can be tracked.'\n    );\n    const oldChange = this.changeMap.get(childKey);\n    if (oldChange) {\n      const oldType = oldChange.type;\n      if (\n        type === ChangeType.CHILD_ADDED &&\n        oldType === ChangeType.CHILD_REMOVED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(\n            childKey,\n            change.snapshotNode,\n            oldChange.snapshotNode\n          )\n        );\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.delete(childKey);\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildRemoved(childKey, oldChange.oldSnap)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildAdded(childKey, change.snapshotNode)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap)\n        );\n      } else {\n        throw assertionError(\n          'Illegal combination of changes: ' +\n            change +\n            ' occurred after ' +\n            oldChange\n        );\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  }\n\n  getChanges(): Change[] {\n    return Array.from(this.changeMap.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcIndexedSlice\n} from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { ViewCache, viewCacheGetCompleteServerSnap } from './ViewCache';\n\n/**\n * Since updates to filtered nodes might require nodes to be pulled in from \"outside\" the node, this interface\n * can help to get complete children that can be pulled in.\n * A class implementing this interface takes potentially multiple sources (e.g. user writes, server data from\n * other views etc.) to try it's best to get a complete child that might be useful in pulling into the view.\n *\n * @interface\n */\nexport interface CompleteChildSource {\n  getCompleteChild(childKey: string): Node | null;\n\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null;\n}\n\n/**\n * An implementation of CompleteChildSource that never returns any additional children\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class NoCompleteChildSource_ implements CompleteChildSource {\n  getCompleteChild(childKey?: string): Node | null {\n    return null;\n  }\n  getChildAfterChild(\n    index?: Index,\n    child?: NamedNode,\n    reverse?: boolean\n  ): NamedNode | null {\n    return null;\n  }\n}\n\n/**\n * Singleton instance.\n */\nexport const NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n\n/**\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\n * old event caches available to calculate complete children.\n */\nexport class WriteTreeCompleteChildSource implements CompleteChildSource {\n  constructor(\n    private writes_: WriteTreeRef,\n    private viewCache_: ViewCache,\n    private optCompleteServerCache_: Node | null = null\n  ) {}\n  getCompleteChild(childKey: string): Node | null {\n    const node = this.viewCache_.eventCache;\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      const serverNode =\n        this.optCompleteServerCache_ != null\n          ? new CacheNode(this.optCompleteServerCache_, true, false)\n          : this.viewCache_.serverCache;\n      return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\n    }\n  }\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null {\n    const completeServerData =\n      this.optCompleteServerCache_ != null\n        ? this.optCompleteServerCache_\n        : viewCacheGetCompleteServerSnap(this.viewCache_);\n    const nodes = writeTreeRefCalcIndexedSlice(\n      this.writes_,\n      completeServerData,\n      child,\n      1,\n      reverse,\n      index\n    );\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { AckUserWrite } from '../operation/AckUserWrite';\nimport { Merge } from '../operation/Merge';\nimport { Operation, OperationType } from '../operation/Operation';\nimport { Overwrite } from '../operation/Overwrite';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetBack,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathParent,\n  pathPopFront\n} from '../util/Path';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren,\n  writeTreeRefCalcEventCacheAfterServerOverwrite,\n  writeTreeRefShadowingWrite\n} from '../WriteTree';\n\nimport { Change, changeValue } from './Change';\nimport { ChildChangeAccumulator } from './ChildChangeAccumulator';\nimport {\n  CompleteChildSource,\n  NO_COMPLETE_CHILD_SOURCE,\n  WriteTreeCompleteChildSource\n} from './CompleteChildSource';\nimport { NodeFilter } from './filter/NodeFilter';\nimport {\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap,\n  viewCacheUpdateEventSnap,\n  viewCacheUpdateServerSnap\n} from './ViewCache';\n\nexport interface ProcessorResult {\n  readonly viewCache: ViewCache;\n  readonly changes: Change[];\n}\n\nexport interface ViewProcessor {\n  readonly filter: NodeFilter;\n}\n\nexport function newViewProcessor(filter: NodeFilter): ViewProcessor {\n  return { filter };\n}\n\nexport function viewProcessorAssertIndexed(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache\n): void {\n  assert(\n    viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Event snap not indexed'\n  );\n  assert(\n    viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Server snap not indexed'\n  );\n}\n\nexport function viewProcessorApplyOperation(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null\n): ProcessorResult {\n  const accumulator = new ChildChangeAccumulator();\n  let newViewCache, filterServerNode;\n  if (operation.type === OperationType.OVERWRITE) {\n    const overwrite = operation as Overwrite;\n    if (overwrite.source.fromUser) {\n      newViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(overwrite.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered  and the\n      // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n      // again\n      filterServerNode =\n        overwrite.source.tagged ||\n        (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\n      newViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.MERGE) {\n    const merge = operation as Merge;\n    if (merge.source.fromUser) {\n      newViewCache = viewProcessorApplyUserMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(merge.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered\n      filterServerNode =\n        merge.source.tagged || oldViewCache.serverCache.isFiltered();\n      newViewCache = viewProcessorApplyServerMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.ACK_USER_WRITE) {\n    const ackUserWrite = operation as AckUserWrite;\n    if (!ackUserWrite.revert) {\n      newViewCache = viewProcessorAckUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        ackUserWrite.affectedTree,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      newViewCache = viewProcessorRevertUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n    newViewCache = viewProcessorListenComplete(\n      viewProcessor,\n      oldViewCache,\n      operation.path,\n      writesCache,\n      accumulator\n    );\n  } else {\n    throw assertionError('Unknown operation type: ' + operation.type);\n  }\n  const changes = accumulator.getChanges();\n  viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\n  return { viewCache: newViewCache, changes };\n}\n\nfunction viewProcessorMaybeAddValueEvent(\n  oldViewCache: ViewCache,\n  newViewCache: ViewCache,\n  accumulator: Change[]\n): void {\n  const eventSnap = newViewCache.eventCache;\n  if (eventSnap.isFullyInitialized()) {\n    const isLeafOrEmpty =\n      eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n    const oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\n    if (\n      accumulator.length > 0 ||\n      !oldViewCache.eventCache.isFullyInitialized() ||\n      (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\n      !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())\n    ) {\n      accumulator.push(\n        changeValue(viewCacheGetCompleteEventSnap(newViewCache))\n      );\n    }\n  }\n}\n\nfunction viewProcessorGenerateEventCacheAfterServerEvent(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  changePath: Path,\n  writesCache: WriteTreeRef,\n  source: CompleteChildSource,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = viewCache.eventCache;\n  if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\n    // we have a shadowing write, ignore changes\n    return viewCache;\n  } else {\n    let newEventCache, serverNode;\n    if (pathIsEmpty(changePath)) {\n      // TODO: figure out how this plays with \"sliding ack windows\"\n      assert(\n        viewCache.serverCache.isFullyInitialized(),\n        'If change path is empty, we must have complete server data'\n      );\n      if (viewCache.serverCache.isFiltered()) {\n        // We need to special case this, because we need to only apply writes to complete children, or\n        // we might end up raising events for incomplete children. If the server data is filtered deep\n        // writes cannot be guaranteed to be complete\n        const serverCache = viewCacheGetCompleteServerSnap(viewCache);\n        const completeChildren =\n          serverCache instanceof ChildrenNode\n            ? serverCache\n            : ChildrenNode.EMPTY_NODE;\n        const completeEventChildren = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          completeChildren\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeEventChildren,\n          accumulator\n        );\n      } else {\n        const completeNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeNode,\n          accumulator\n        );\n      }\n    } else {\n      const childKey = pathGetFront(changePath);\n      if (childKey === '.priority') {\n        assert(\n          pathGetLength(changePath) === 1,\n          \"Can't have a priority with additional path components\"\n        );\n        const oldEventNode = oldEventSnap.getNode();\n        serverNode = viewCache.serverCache.getNode();\n        // we might have overwrites for this priority\n        const updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(\n          writesCache,\n          changePath,\n          oldEventNode,\n          serverNode\n        );\n        if (updatedPriority != null) {\n          newEventCache = viewProcessor.filter.updatePriority(\n            oldEventNode,\n            updatedPriority\n          );\n        } else {\n          // priority didn't change, keep old node\n          newEventCache = oldEventSnap.getNode();\n        }\n      } else {\n        const childChangePath = pathPopFront(changePath);\n        // update child\n        let newEventChild;\n        if (oldEventSnap.isCompleteForChild(childKey)) {\n          serverNode = viewCache.serverCache.getNode();\n          const eventChildUpdate =\n            writeTreeRefCalcEventCacheAfterServerOverwrite(\n              writesCache,\n              changePath,\n              oldEventSnap.getNode(),\n              serverNode\n            );\n          if (eventChildUpdate != null) {\n            newEventChild = oldEventSnap\n              .getNode()\n              .getImmediateChild(childKey)\n              .updateChild(childChangePath, eventChildUpdate);\n          } else {\n            // Nothing changed, just keep the old child\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n          }\n        } else {\n          newEventChild = writeTreeRefCalcCompleteChild(\n            writesCache,\n            childKey,\n            viewCache.serverCache\n          );\n        }\n        if (newEventChild != null) {\n          newEventCache = viewProcessor.filter.updateChild(\n            oldEventSnap.getNode(),\n            childKey,\n            newEventChild,\n            childChangePath,\n            source,\n            accumulator\n          );\n        } else {\n          // no complete child available or no change\n          newEventCache = oldEventSnap.getNode();\n        }\n      }\n    }\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath),\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n\nfunction viewProcessorApplyServerOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerSnap = oldViewCache.serverCache;\n  let newServerCache;\n  const serverFilter = filterServerNode\n    ? viewProcessor.filter\n    : viewProcessor.filter.getIndexedFilter();\n  if (pathIsEmpty(changePath)) {\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      changedSnap,\n      null\n    );\n  } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n    // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n    const newServerNode = oldServerSnap\n      .getNode()\n      .updateChild(changePath, changedSnap);\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      newServerNode,\n      null\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (\n      !oldServerSnap.isCompleteForPath(changePath) &&\n      pathGetLength(changePath) > 1\n    ) {\n      // We don't update incomplete nodes with updates intended for other listeners\n      return oldViewCache;\n    }\n    const childChangePath = pathPopFront(changePath);\n    const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n    const newChildNode = childNode.updateChild(childChangePath, changedSnap);\n    if (childKey === '.priority') {\n      newServerCache = serverFilter.updatePriority(\n        oldServerSnap.getNode(),\n        newChildNode\n      );\n    } else {\n      newServerCache = serverFilter.updateChild(\n        oldServerSnap.getNode(),\n        childKey,\n        newChildNode,\n        childChangePath,\n        NO_COMPLETE_CHILD_SOURCE,\n        null\n      );\n    }\n  }\n  const newViewCache = viewCacheUpdateServerSnap(\n    oldViewCache,\n    newServerCache,\n    oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath),\n    serverFilter.filtersNodes()\n  );\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    newViewCache,\n    completeCache\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    changePath,\n    writesCache,\n    source,\n    accumulator\n  );\n}\n\nfunction viewProcessorApplyUserOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = oldViewCache.eventCache;\n  let newViewCache, newEventCache;\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    oldViewCache,\n    completeCache\n  );\n  if (pathIsEmpty(changePath)) {\n    newEventCache = viewProcessor.filter.updateFullNode(\n      oldViewCache.eventCache.getNode(),\n      changedSnap,\n      accumulator\n    );\n    newViewCache = viewCacheUpdateEventSnap(\n      oldViewCache,\n      newEventCache,\n      true,\n      viewProcessor.filter.filtersNodes()\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (childKey === '.priority') {\n      newEventCache = viewProcessor.filter.updatePriority(\n        oldViewCache.eventCache.getNode(),\n        changedSnap\n      );\n      newViewCache = viewCacheUpdateEventSnap(\n        oldViewCache,\n        newEventCache,\n        oldEventSnap.isFullyInitialized(),\n        oldEventSnap.isFiltered()\n      );\n    } else {\n      const childChangePath = pathPopFront(changePath);\n      const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n      let newChild;\n      if (pathIsEmpty(childChangePath)) {\n        // Child overwrite, we can replace the child\n        newChild = changedSnap;\n      } else {\n        const childNode = source.getCompleteChild(childKey);\n        if (childNode != null) {\n          if (\n            pathGetBack(childChangePath) === '.priority' &&\n            childNode.getChild(pathParent(childChangePath)).isEmpty()\n          ) {\n            // This is a priority update on an empty node. If this node exists on the server, the\n            // server will send down the priority in the update, so ignore for now\n            newChild = childNode;\n          } else {\n            newChild = childNode.updateChild(childChangePath, changedSnap);\n          }\n        } else {\n          // There is no complete child node available\n          newChild = ChildrenNode.EMPTY_NODE;\n        }\n      }\n      if (!oldChild.equals(newChild)) {\n        const newEventSnap = viewProcessor.filter.updateChild(\n          oldEventSnap.getNode(),\n          childKey,\n          newChild,\n          childChangePath,\n          source,\n          accumulator\n        );\n        newViewCache = viewCacheUpdateEventSnap(\n          oldViewCache,\n          newEventSnap,\n          oldEventSnap.isFullyInitialized(),\n          viewProcessor.filter.filtersNodes()\n        );\n      } else {\n        newViewCache = oldViewCache;\n      }\n    }\n  }\n  return newViewCache;\n}\n\nfunction viewProcessorCacheHasChild(\n  viewCache: ViewCache,\n  childKey: string\n): boolean {\n  return viewCache.eventCache.isCompleteForChild(childKey);\n}\n\nfunction viewProcessorApplyUserMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorApplyMerge(\n  viewProcessor: ViewProcessor,\n  node: Node,\n  merge: ImmutableTree<Node>\n): Node {\n  merge.foreach((relativePath, childNode) => {\n    node = node.updateChild(relativePath, childNode);\n  });\n  return node;\n}\n\nfunction viewProcessorApplyServerMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n  // wait for the complete data update coming soon.\n  if (\n    viewCache.serverCache.getNode().isEmpty() &&\n    !viewCache.serverCache.isFullyInitialized()\n  ) {\n    return viewCache;\n  }\n\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  let viewMergeTree;\n  if (pathIsEmpty(path)) {\n    viewMergeTree = changedChildren;\n  } else {\n    viewMergeTree = new ImmutableTree<Node>(null).setTree(\n      path,\n      changedChildren\n    );\n  }\n  const serverNode = viewCache.serverCache.getNode();\n  viewMergeTree.children.inorderTraversal((childKey, childTree) => {\n    if (serverNode.hasChild(childKey)) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n  viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\n    const isUnknownDeepMerge =\n      !viewCache.serverCache.isCompleteForChild(childKey) &&\n      childMergeTree.value === undefined;\n    if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childMergeTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorAckUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  ackPath: Path,\n  affectedTree: ImmutableTree<boolean>,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\n    return viewCache;\n  }\n\n  // Only filter server node if it is currently filtered\n  const filterServerNode = viewCache.serverCache.isFiltered();\n\n  // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n  // now that it won't be shadowed.\n  const serverCache = viewCache.serverCache;\n  if (affectedTree.value != null) {\n    // This is an overwrite.\n    if (\n      (pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\n      serverCache.isCompleteForPath(ackPath)\n    ) {\n      return viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        serverCache.getNode().getChild(ackPath),\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else if (pathIsEmpty(ackPath)) {\n      // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n      // should just re-apply whatever we have in our cache as a merge.\n      let changedChildren = new ImmutableTree<Node>(null);\n      serverCache.getNode().forEachChild(KEY_INDEX, (name, node) => {\n        changedChildren = changedChildren.set(new Path(name), node);\n      });\n      return viewProcessorApplyServerMerge(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        changedChildren,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else {\n      return viewCache;\n    }\n  } else {\n    // This is a merge.\n    let changedChildren = new ImmutableTree<Node>(null);\n    affectedTree.foreach((mergePath, value) => {\n      const serverCachePath = pathChild(ackPath, mergePath);\n      if (serverCache.isCompleteForPath(serverCachePath)) {\n        changedChildren = changedChildren.set(\n          mergePath,\n          serverCache.getNode().getChild(serverCachePath)\n        );\n      }\n    });\n    return viewProcessorApplyServerMerge(\n      viewProcessor,\n      viewCache,\n      ackPath,\n      changedChildren,\n      writesCache,\n      completeCache,\n      filterServerNode,\n      accumulator\n    );\n  }\n}\n\nfunction viewProcessorListenComplete(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerNode = viewCache.serverCache;\n  const newViewCache = viewCacheUpdateServerSnap(\n    viewCache,\n    oldServerNode.getNode(),\n    oldServerNode.isFullyInitialized() || pathIsEmpty(path),\n    oldServerNode.isFiltered()\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    path,\n    writesCache,\n    NO_COMPLETE_CHILD_SOURCE,\n    accumulator\n  );\n}\n\nfunction viewProcessorRevertUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  let complete;\n  if (writeTreeRefShadowingWrite(writesCache, path) != null) {\n    return viewCache;\n  } else {\n    const source = new WriteTreeCompleteChildSource(\n      writesCache,\n      viewCache,\n      completeServerCache\n    );\n    const oldEventCache = viewCache.eventCache.getNode();\n    let newEventCache;\n    if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n      let newNode;\n      if (viewCache.serverCache.isFullyInitialized()) {\n        newNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n      } else {\n        const serverChildren = viewCache.serverCache.getNode();\n        assert(\n          serverChildren instanceof ChildrenNode,\n          'serverChildren would be complete if leaf node'\n        );\n        newNode = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          serverChildren as ChildrenNode\n        );\n      }\n      newNode = newNode as Node;\n      newEventCache = viewProcessor.filter.updateFullNode(\n        oldEventCache,\n        newNode,\n        accumulator\n      );\n    } else {\n      const childKey = pathGetFront(path);\n      let newChild = writeTreeRefCalcCompleteChild(\n        writesCache,\n        childKey,\n        viewCache.serverCache\n      );\n      if (\n        newChild == null &&\n        viewCache.serverCache.isCompleteForChild(childKey)\n      ) {\n        newChild = oldEventCache.getImmediateChild(childKey);\n      }\n      if (newChild != null) {\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          newChild,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else if (viewCache.eventCache.getNode().hasChild(childKey)) {\n        // No complete child available, delete the existing one, if any\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          ChildrenNode.EMPTY_NODE,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else {\n        newEventCache = oldEventCache;\n      }\n      if (\n        newEventCache.isEmpty() &&\n        viewCache.serverCache.isFullyInitialized()\n      ) {\n        // We might have reverted all child writes. Maybe the old event was a leaf node\n        complete = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        if (complete.isLeafNode()) {\n          newEventCache = viewProcessor.filter.updateFullNode(\n            newEventCache,\n            complete,\n            accumulator\n          );\n        }\n      }\n    }\n    complete =\n      viewCache.serverCache.isFullyInitialized() ||\n      writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      complete,\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Operation, OperationType } from '../operation/Operation';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\nimport { WriteTreeRef } from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { Change, changeChildAdded, changeValue } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport {\n  EventGenerator,\n  eventGeneratorGenerateEventsForChanges\n} from './EventGenerator';\nimport { EventRegistration, QueryContext } from './EventRegistration';\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { queryParamsGetNodeFilter } from './QueryParams';\nimport {\n  newViewCache,\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap\n} from './ViewCache';\nimport {\n  newViewProcessor,\n  ViewProcessor,\n  viewProcessorApplyOperation,\n  viewProcessorAssertIndexed\n} from './ViewProcessor';\n\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n */\nexport class View {\n  processor_: ViewProcessor;\n  viewCache_: ViewCache;\n  eventRegistrations_: EventRegistration[] = [];\n  eventGenerator_: EventGenerator;\n\n  constructor(private query_: QueryContext, initialViewCache: ViewCache) {\n    const params = this.query_._queryParams;\n\n    const indexFilter = new IndexedFilter(params.getIndex());\n    const filter = queryParamsGetNodeFilter(params);\n\n    this.processor_ = newViewProcessor(filter);\n\n    const initialServerCache = initialViewCache.serverCache;\n    const initialEventCache = initialViewCache.eventCache;\n\n    // Don't filter server node with other filter than index, wait for tagged listen\n    const serverSnap = indexFilter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialServerCache.getNode(),\n      null\n    );\n    const eventSnap = filter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialEventCache.getNode(),\n      null\n    );\n    const newServerCache = new CacheNode(\n      serverSnap,\n      initialServerCache.isFullyInitialized(),\n      indexFilter.filtersNodes()\n    );\n    const newEventCache = new CacheNode(\n      eventSnap,\n      initialEventCache.isFullyInitialized(),\n      filter.filtersNodes()\n    );\n\n    this.viewCache_ = newViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  get query(): QueryContext {\n    return this.query_;\n  }\n}\n\nexport function viewGetServerCache(view: View): Node | null {\n  return view.viewCache_.serverCache.getNode();\n}\n\nexport function viewGetCompleteNode(view: View): Node | null {\n  return viewCacheGetCompleteEventSnap(view.viewCache_);\n}\n\nexport function viewGetCompleteServerCache(\n  view: View,\n  path: Path\n): Node | null {\n  const cache = viewCacheGetCompleteServerSnap(view.viewCache_);\n  if (cache) {\n    // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n    // we need to see if it contains the child we're interested in.\n    if (\n      view.query._queryParams.loadsAllData() ||\n      (!pathIsEmpty(path) &&\n        !cache.getImmediateChild(pathGetFront(path)).isEmpty())\n    ) {\n      return cache.getChild(path);\n    }\n  }\n  return null;\n}\n\nexport function viewIsEmpty(view: View): boolean {\n  return view.eventRegistrations_.length === 0;\n}\n\nexport function viewAddEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration\n) {\n  view.eventRegistrations_.push(eventRegistration);\n}\n\n/**\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns Cancel events, if cancelError was provided.\n */\nexport function viewRemoveEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): Event[] {\n  const cancelEvents: CancelEvent[] = [];\n  if (cancelError) {\n    assert(\n      eventRegistration == null,\n      'A cancel should cancel all event registrations.'\n    );\n    const path = view.query._path;\n    view.eventRegistrations_.forEach(registration => {\n      const maybeEvent = registration.createCancelEvent(cancelError, path);\n      if (maybeEvent) {\n        cancelEvents.push(maybeEvent);\n      }\n    });\n  }\n\n  if (eventRegistration) {\n    let remaining = [];\n    for (let i = 0; i < view.eventRegistrations_.length; ++i) {\n      const existing = view.eventRegistrations_[i];\n      if (!existing.matches(eventRegistration)) {\n        remaining.push(existing);\n      } else if (eventRegistration.hasAnyCallback()) {\n        // We're removing just this one\n        remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\n        break;\n      }\n    }\n    view.eventRegistrations_ = remaining;\n  } else {\n    view.eventRegistrations_ = [];\n  }\n  return cancelEvents;\n}\n\n/**\n * Applies the given Operation, updates our cache, and returns the appropriate events.\n */\nexport function viewApplyOperation(\n  view: View,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null\n): Event[] {\n  if (\n    operation.type === OperationType.MERGE &&\n    operation.source.queryId !== null\n  ) {\n    assert(\n      viewCacheGetCompleteServerSnap(view.viewCache_),\n      'We should always have a full cache before handling merges'\n    );\n    assert(\n      viewCacheGetCompleteEventSnap(view.viewCache_),\n      'Missing event cache, even though we have a server cache'\n    );\n  }\n\n  const oldViewCache = view.viewCache_;\n  const result = viewProcessorApplyOperation(\n    view.processor_,\n    oldViewCache,\n    operation,\n    writesCache,\n    completeServerCache\n  );\n  viewProcessorAssertIndexed(view.processor_, result.viewCache);\n\n  assert(\n    result.viewCache.serverCache.isFullyInitialized() ||\n      !oldViewCache.serverCache.isFullyInitialized(),\n    'Once a server snap is complete, it should never go back'\n  );\n\n  view.viewCache_ = result.viewCache;\n\n  return viewGenerateEventsForChanges_(\n    view,\n    result.changes,\n    result.viewCache.eventCache.getNode(),\n    null\n  );\n}\n\nexport function viewGetInitialEvents(\n  view: View,\n  registration: EventRegistration\n): Event[] {\n  const eventSnap = view.viewCache_.eventCache;\n  const initialChanges: Change[] = [];\n  if (!eventSnap.getNode().isLeafNode()) {\n    const eventNode = eventSnap.getNode() as ChildrenNode;\n    eventNode.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      initialChanges.push(changeChildAdded(key, childNode));\n    });\n  }\n  if (eventSnap.isFullyInitialized()) {\n    initialChanges.push(changeValue(eventSnap.getNode()));\n  }\n  return viewGenerateEventsForChanges_(\n    view,\n    initialChanges,\n    eventSnap.getNode(),\n    registration\n  );\n}\n\nfunction viewGenerateEventsForChanges_(\n  view: View,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistration?: EventRegistration\n): Event[] {\n  const registrations = eventRegistration\n    ? [eventRegistration]\n    : view.eventRegistrations_;\n  return eventGeneratorGenerateEventsForChanges(\n    view.eventGenerator_,\n    changes,\n    eventCache,\n    registrations\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { Operation } from './operation/Operation';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport {\n  View,\n  viewAddEventRegistration,\n  viewApplyOperation,\n  viewGetCompleteServerCache,\n  viewGetInitialEvents,\n  viewIsEmpty,\n  viewRemoveEventRegistration\n} from './view/View';\nimport { newViewCache } from './view/ViewCache';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\n/**\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\n * and user writes (set, transaction, update).\n *\n * It's responsible for:\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\n *    applyUserOverwrite, etc.)\n */\nexport class SyncPoint {\n  /**\n   * The Views being tracked at this location in the tree, stored as a map where the key is a\n   * queryId and the value is the View for that query.\n   *\n   * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\n   */\n  readonly views: Map<string, View> = new Map();\n}\n\nexport function syncPointSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncPointGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport function syncPointIsEmpty(syncPoint: SyncPoint): boolean {\n  return syncPoint.views.size === 0;\n}\n\nexport function syncPointApplyOperation(\n  syncPoint: SyncPoint,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  optCompleteServerCache: Node | null\n): Event[] {\n  const queryId = operation.source.queryId;\n  if (queryId !== null) {\n    const view = syncPoint.views.get(queryId);\n    assert(view != null, 'SyncTree gave us an op for an invalid query.');\n    return viewApplyOperation(\n      view,\n      operation,\n      writesCache,\n      optCompleteServerCache\n    );\n  } else {\n    let events: Event[] = [];\n\n    for (const view of syncPoint.views.values()) {\n      events = events.concat(\n        viewApplyOperation(view, operation, writesCache, optCompleteServerCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Get a view for the specified query.\n *\n * @param query - The query to return a view for\n * @param writesCache\n * @param serverCache\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointGetView(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): View {\n  const queryId = query._queryIdentifier;\n  const view = syncPoint.views.get(queryId);\n  if (!view) {\n    // TODO: make writesCache take flag for complete server node\n    let eventCache = writeTreeRefCalcCompleteEventCache(\n      writesCache,\n      serverCacheComplete ? serverCache : null\n    );\n    let eventCacheComplete = false;\n    if (eventCache) {\n      eventCacheComplete = true;\n    } else if (serverCache instanceof ChildrenNode) {\n      eventCache = writeTreeRefCalcCompleteEventChildren(\n        writesCache,\n        serverCache\n      );\n      eventCacheComplete = false;\n    } else {\n      eventCache = ChildrenNode.EMPTY_NODE;\n      eventCacheComplete = false;\n    }\n    const viewCache = newViewCache(\n      new CacheNode(eventCache, eventCacheComplete, false),\n      new CacheNode(serverCache, serverCacheComplete, false)\n    );\n    return new View(query, viewCache);\n  }\n  return view;\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @param query\n * @param eventRegistration\n * @param writesCache\n * @param serverCache - Complete server cache, if we have it.\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointAddEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): Event[] {\n  const view = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!syncPoint.views.has(query._queryIdentifier)) {\n    syncPoint.views.set(query._queryIdentifier, view);\n  }\n  // This is guaranteed to exist now, we just created anything that was missing\n  viewAddEventRegistration(view, eventRegistration);\n  return viewGetInitialEvents(view, eventRegistration);\n}\n\n/**\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\n *\n * If query is the default query, we'll check all views for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\n *\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns removed queries and any cancel events\n */\nexport function syncPointRemoveEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): { removed: QueryContext[]; events: Event[] } {\n  const queryId = query._queryIdentifier;\n  const removed: QueryContext[] = [];\n  let cancelEvents: Event[] = [];\n  const hadCompleteView = syncPointHasCompleteView(syncPoint);\n  if (queryId === 'default') {\n    // When you do ref.off(...), we search all views for the registration to remove.\n    for (const [viewQueryId, view] of syncPoint.views.entries()) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(viewQueryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  } else {\n    // remove the callback from the specific view.\n    const view = syncPoint.views.get(queryId);\n    if (view) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(queryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  }\n\n  if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\n    // We removed our last complete view.\n    removed.push(\n      new (syncPointGetReferenceConstructor())(query._repo, query._path)\n    );\n  }\n\n  return { removed, events: cancelEvents };\n}\n\nexport function syncPointGetQueryViews(syncPoint: SyncPoint): View[] {\n  const result = [];\n  for (const view of syncPoint.views.values()) {\n    if (!view.query._queryParams.loadsAllData()) {\n      result.push(view);\n    }\n  }\n  return result;\n}\n\n/**\n * @param path - The path to the desired complete snapshot\n * @returns A complete cache, if it exists\n */\nexport function syncPointGetCompleteServerCache(\n  syncPoint: SyncPoint,\n  path: Path\n): Node | null {\n  let serverCache: Node | null = null;\n  for (const view of syncPoint.views.values()) {\n    serverCache = serverCache || viewGetCompleteServerCache(view, path);\n  }\n  return serverCache;\n}\n\nexport function syncPointViewForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): View | null {\n  const params = query._queryParams;\n  if (params.loadsAllData()) {\n    return syncPointGetCompleteView(syncPoint);\n  } else {\n    const queryId = query._queryIdentifier;\n    return syncPoint.views.get(queryId);\n  }\n}\n\nexport function syncPointViewExistsForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): boolean {\n  return syncPointViewForQuery(syncPoint, query) != null;\n}\n\nexport function syncPointHasCompleteView(syncPoint: SyncPoint): boolean {\n  return syncPointGetCompleteView(syncPoint) != null;\n}\n\nexport function syncPointGetCompleteView(syncPoint: SyncPoint): View | null {\n  for (const view of syncPoint.views.values()) {\n    if (view.query._queryParams.loadsAllData()) {\n      return view;\n    }\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { AckUserWrite } from './operation/AckUserWrite';\nimport { ListenComplete } from './operation/ListenComplete';\nimport { Merge } from './operation/Merge';\nimport {\n  newOperationSourceServer,\n  newOperationSourceServerTaggedQuery,\n  newOperationSourceUser,\n  Operation\n} from './operation/Operation';\nimport { Overwrite } from './operation/Overwrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport {\n  SyncPoint,\n  syncPointAddEventRegistration,\n  syncPointApplyOperation,\n  syncPointGetCompleteServerCache,\n  syncPointGetCompleteView,\n  syncPointGetQueryViews,\n  syncPointGetView,\n  syncPointHasCompleteView,\n  syncPointIsEmpty,\n  syncPointRemoveEventRegistration,\n  syncPointViewExistsForQuery,\n  syncPointViewForQuery\n} from './SyncPoint';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathGetFront,\n  pathIsEmpty\n} from './util/Path';\nimport { each, errorForServerCode } from './util/util';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport { View, viewGetCompleteNode, viewGetServerCache } from './view/View';\nimport {\n  newWriteTree,\n  WriteTree,\n  writeTreeAddMerge,\n  writeTreeAddOverwrite,\n  writeTreeCalcCompleteEventCache,\n  writeTreeChildWrites,\n  writeTreeGetWrite,\n  WriteTreeRef,\n  writeTreeRefChild,\n  writeTreeRemoveWrite\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\nexport function syncTreeSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncTreeGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport interface ListenProvider {\n  startListening(\n    query: QueryContext,\n    tag: number | null,\n    hashFn: () => string,\n    onComplete: (a: string, b?: unknown) => Event[]\n  ): Event[];\n\n  stopListening(a: QueryContext, b: number | null): void;\n}\n\n/**\n * Static tracker for next query tag.\n */\nlet syncTreeNextQueryTag_ = 1;\n\n/**\n * SyncTree is the central class for managing event callback registration, data caching, views\n * (query processing), and event generation.  There are typically two SyncTree instances for\n * each Repo, one for the normal Firebase data, and one for the .info data.\n *\n * It has a number of responsibilities, including:\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\n *    (applyUserOverwrite(), applyUserMerge()).\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\n *    applyServerMerge()).\n *  - Generating user-facing events for server and user changes (all of the apply* methods\n *    return the set of events that need to be raised as a result).\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\n *    to the correct set of paths and queries to satisfy the current set of user event\n *    callbacks (listens are started/stopped using the provided listenProvider).\n *\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\n * events are returned to the caller rather than raised synchronously.\n *\n */\nexport class SyncTree {\n  /**\n   * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\n   */\n  syncPointTree_: ImmutableTree<SyncPoint> = new ImmutableTree<SyncPoint>(null);\n\n  /**\n   * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\n   */\n  pendingWriteTree_: WriteTree = newWriteTree();\n\n  readonly tagToQueryMap: Map<number, string> = new Map();\n  readonly queryToTagMap: Map<string, number> = new Map();\n\n  /**\n   * @param listenProvider_ - Used by SyncTree to start / stop listening\n   *   to server data.\n   */\n  constructor(public listenProvider_: ListenProvider) {}\n}\n\n/**\n * Apply the data changes for a user-generated set() or transaction() call.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node,\n  writeId: number,\n  visible?: boolean\n): Event[] {\n  // Record pending write.\n  writeTreeAddOverwrite(\n    syncTree.pendingWriteTree_,\n    path,\n    newData,\n    writeId,\n    visible\n  );\n\n  if (!visible) {\n    return [];\n  } else {\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new Overwrite(newOperationSourceUser(), path, newData)\n    );\n  }\n}\n\n/**\n * Apply the data from a user-generated update() call\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n): Event[] {\n  // Record pending merge.\n  writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\n\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceUser(), path, changeTree)\n  );\n}\n\n/**\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\n *\n * @param revert - True if the given write failed and needs to be reverted\n * @returns Events to raise.\n */\nexport function syncTreeAckUserWrite(\n  syncTree: SyncTree,\n  writeId: number,\n  revert: boolean = false\n) {\n  const write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\n  const needToReevaluate = writeTreeRemoveWrite(\n    syncTree.pendingWriteTree_,\n    writeId\n  );\n  if (!needToReevaluate) {\n    return [];\n  } else {\n    let affectedTree = new ImmutableTree<boolean>(null);\n    if (write.snap != null) {\n      // overwrite\n      affectedTree = affectedTree.set(newEmptyPath(), true);\n    } else {\n      each(write.children, (pathString: string) => {\n        affectedTree = affectedTree.set(new Path(pathString), true);\n      });\n    }\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new AckUserWrite(write.path, affectedTree, revert)\n    );\n  }\n}\n\n/**\n * Apply new server data for the specified path..\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Overwrite(newOperationSourceServer(), path, newData)\n  );\n}\n\n/**\n * Apply new server data to be merged in at the specified path.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node }\n): Event[] {\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceServer(), path, changeTree)\n  );\n}\n\n/**\n * Apply a listen complete for a query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyListenComplete(\n  syncTree: SyncTree,\n  path: Path\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new ListenComplete(newOperationSourceServer(), path)\n  );\n}\n\n/**\n * Apply a listen complete for a tagged query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedListenComplete(\n  syncTree: SyncTree,\n  path: Path,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new ListenComplete(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Remove event callback(s).\n *\n * If query is the default query, we'll check all queries for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\n *\n * @param eventRegistration - If null, all callbacks are removed.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns Cancel events, if cancelError was provided.\n */\nexport function syncTreeRemoveEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): Event[] {\n  // Find the syncPoint first. Then deal with whether or not it has matching listeners\n  const path = query._path;\n  const maybeSyncPoint = syncTree.syncPointTree_.get(path);\n  let cancelEvents: Event[] = [];\n  // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n  // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n  // not loadsAllData().\n  if (\n    maybeSyncPoint &&\n    (query._queryIdentifier === 'default' ||\n      syncPointViewExistsForQuery(maybeSyncPoint, query))\n  ) {\n    const removedAndEvents = syncPointRemoveEventRegistration(\n      maybeSyncPoint,\n      query,\n      eventRegistration,\n      cancelError\n    );\n    if (syncPointIsEmpty(maybeSyncPoint)) {\n      syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\n    }\n    const removed = removedAndEvents.removed;\n    cancelEvents = removedAndEvents.events;\n    // We may have just removed one of many listeners and can short-circuit this whole process\n    // We may also not have removed a default listener, in which case all of the descendant listeners should already be\n    // properly set up.\n    //\n    // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n    // queryId === 'default'\n    const removingDefault =\n      -1 !==\n      removed.findIndex(query => {\n        return query._queryParams.loadsAllData();\n      });\n    const covered = syncTree.syncPointTree_.findOnPath(\n      path,\n      (relativePath, parentSyncPoint) =>\n        syncPointHasCompleteView(parentSyncPoint)\n    );\n\n    if (removingDefault && !covered) {\n      const subtree = syncTree.syncPointTree_.subtree(path);\n      // There are potentially child listeners. Determine what if any listens we need to send before executing the\n      // removal\n      if (!subtree.isEmpty()) {\n        // We need to fold over our subtree and collect the listeners to send\n        const newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\n\n        // Ok, we've collected all the listens we need. Set them up.\n        for (let i = 0; i < newViews.length; ++i) {\n          const view = newViews[i],\n            newQuery = view.query;\n          const listener = syncTreeCreateListenerForView_(syncTree, view);\n          syncTree.listenProvider_.startListening(\n            syncTreeQueryForListening_(newQuery),\n            syncTreeTagForQuery_(syncTree, newQuery),\n            listener.hashFn,\n            listener.onComplete\n          );\n        }\n      } else {\n        // There's nothing below us, so nothing we need to start listening on\n      }\n    }\n    // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n    // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n    // Also, note that if we have a cancelError, it's already been removed at the provider level.\n    if (!covered && removed.length > 0 && !cancelError) {\n      // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n      // default. Otherwise, we need to iterate through and cancel each individual query\n      if (removingDefault) {\n        // We don't tag default listeners\n        const defaultTag: number | null = null;\n        syncTree.listenProvider_.stopListening(\n          syncTreeQueryForListening_(query),\n          defaultTag\n        );\n      } else {\n        removed.forEach((queryToRemove: QueryContext) => {\n          const tagToRemove = syncTree.queryToTagMap.get(\n            syncTreeMakeQueryKey_(queryToRemove)\n          );\n          syncTree.listenProvider_.stopListening(\n            syncTreeQueryForListening_(queryToRemove),\n            tagToRemove\n          );\n        });\n      }\n    }\n    // Now, clear all of the tags we're tracking for the removed listens\n    syncTreeRemoveTags_(syncTree, removed);\n  } else {\n    // No-op, this listener must've been already removed\n  }\n  return cancelEvents;\n}\n\n/**\n * Apply new server data for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  snap: Node,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey != null) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new Overwrite(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      snap\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // Query must have been removed already\n    return [];\n  }\n}\n\n/**\n * Apply server data to be merged in for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const changeTree = ImmutableTree.fromObject(changedChildren);\n    const op = new Merge(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      changeTree\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeAddEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): Event[] {\n  const path = query._path;\n\n  let serverCache: Node | null = null;\n  let foundAncestorDefaultView = false;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(sp);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let serverCacheComplete;\n  if (serverCache != null) {\n    serverCacheComplete = true;\n  } else {\n    serverCacheComplete = false;\n    serverCache = ChildrenNode.EMPTY_NODE;\n    const subtree = syncTree.syncPointTree_.subtree(path);\n    subtree.foreachChild((childName, childSyncPoint) => {\n      const completeCache = syncPointGetCompleteServerCache(\n        childSyncPoint,\n        newEmptyPath()\n      );\n      if (completeCache) {\n        serverCache = serverCache.updateImmediateChild(\n          childName,\n          completeCache\n        );\n      }\n    });\n  }\n\n  const viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\n  if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\n    // We need to track a tag for this query\n    const queryKey = syncTreeMakeQueryKey_(query);\n    assert(\n      !syncTree.queryToTagMap.has(queryKey),\n      'View does not exist, but we have a tag'\n    );\n    const tag = syncTreeGetNextQueryTag_();\n    syncTree.queryToTagMap.set(queryKey, tag);\n    syncTree.tagToQueryMap.set(tag, queryKey);\n  }\n  const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\n  let events = syncPointAddEventRegistration(\n    syncPoint,\n    query,\n    eventRegistration,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!viewAlreadyExists && !foundAncestorDefaultView) {\n    const view = syncPointViewForQuery(syncPoint, query);\n    events = events.concat(syncTreeSetupListener_(syncTree, query, view));\n  }\n  return events;\n}\n\n/**\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\n *\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\n *\n * @param path - The path to the data we want\n * @param writeIdsToExclude - A specific set to be excluded\n */\nexport function syncTreeCalcCompleteEventCache(\n  syncTree: SyncTree,\n  path: Path,\n  writeIdsToExclude?: number[]\n): Node {\n  const includeHiddenSets = true;\n  const writeTree = syncTree.pendingWriteTree_;\n  const serverCache = syncTree.syncPointTree_.findOnPath(\n    path,\n    (pathSoFar, syncPoint) => {\n      const relativePath = newRelativePath(pathSoFar, path);\n      const serverCache = syncPointGetCompleteServerCache(\n        syncPoint,\n        relativePath\n      );\n      if (serverCache) {\n        return serverCache;\n      }\n    }\n  );\n  return writeTreeCalcCompleteEventCache(\n    writeTree,\n    path,\n    serverCache,\n    writeIdsToExclude,\n    includeHiddenSets\n  );\n}\n\nexport function syncTreeGetServerValue(\n  syncTree: SyncTree,\n  query: QueryContext\n): Node | null {\n  const path = query._path;\n  let serverCache: Node | null = null;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n  const serverCacheComplete = serverCache != null;\n  const serverCacheNode: CacheNode | null = serverCacheComplete\n    ? new CacheNode(serverCache, true, false)\n    : null;\n  const writesCache: WriteTreeRef | null = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    query._path\n  );\n  const view: View = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE,\n    serverCacheComplete\n  );\n  return viewGetCompleteNode(view);\n}\n\n/**\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\n *\n * NOTES:\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\n *\n * - We call applyOperation() on each SyncPoint passing three things:\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\n *   3. A snapshot Node with cached server data, if we have it.\n *\n * - We concatenate all of the events returned by each SyncPoint and return the result.\n */\nfunction syncTreeApplyOperationToSyncPoints_(\n  syncTree: SyncTree,\n  operation: Operation\n): Event[] {\n  return syncTreeApplyOperationHelper_(\n    operation,\n    syncTree.syncPointTree_,\n    /*serverCache=*/ null,\n    writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath())\n  );\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  if (pathIsEmpty(operation.path)) {\n    return syncTreeApplyOperationDescendantsHelper_(\n      operation,\n      syncPointTree,\n      serverCache,\n      writesCache\n    );\n  } else {\n    const syncPoint = syncPointTree.get(newEmptyPath());\n\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n    }\n\n    let events: Event[] = [];\n    const childName = pathGetFront(operation.path);\n    const childOperation = operation.operationForChild(childName);\n    const childTree = syncPointTree.children.get(childName);\n    if (childTree && childOperation) {\n      const childServerCache = serverCache\n        ? serverCache.getImmediateChild(childName)\n        : null;\n      const childWritesCache = writeTreeRefChild(writesCache, childName);\n      events = events.concat(\n        syncTreeApplyOperationHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n\n    if (syncPoint) {\n      events = events.concat(\n        syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationDescendantsHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  const syncPoint = syncPointTree.get(newEmptyPath());\n\n  // If we don't have cached server data, see if we can get it from this SyncPoint.\n  if (serverCache == null && syncPoint != null) {\n    serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let events: Event[] = [];\n  syncPointTree.children.inorderTraversal((childName, childTree) => {\n    const childServerCache = serverCache\n      ? serverCache.getImmediateChild(childName)\n      : null;\n    const childWritesCache = writeTreeRefChild(writesCache, childName);\n    const childOperation = operation.operationForChild(childName);\n    if (childOperation) {\n      events = events.concat(\n        syncTreeApplyOperationDescendantsHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n  });\n\n  if (syncPoint) {\n    events = events.concat(\n      syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n    );\n  }\n\n  return events;\n}\n\nfunction syncTreeCreateListenerForView_(\n  syncTree: SyncTree,\n  view: View\n): { hashFn(): string; onComplete(a: string, b?: unknown): Event[] } {\n  const query = view.query;\n  const tag = syncTreeTagForQuery_(syncTree, query);\n\n  return {\n    hashFn: () => {\n      const cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\n      return cache.hash();\n    },\n    onComplete: (status: string): Event[] => {\n      if (status === 'ok') {\n        if (tag) {\n          return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\n        } else {\n          return syncTreeApplyListenComplete(syncTree, query._path);\n        }\n      } else {\n        // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n        // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n        const error = errorForServerCode(status, query);\n        return syncTreeRemoveEventRegistration(\n          syncTree,\n          query,\n          /*eventRegistration*/ null,\n          error\n        );\n      }\n    }\n  };\n}\n\n/**\n * Return the tag associated with the given query.\n */\nfunction syncTreeTagForQuery_(\n  syncTree: SyncTree,\n  query: QueryContext\n): number | null {\n  const queryKey = syncTreeMakeQueryKey_(query);\n  return syncTree.queryToTagMap.get(queryKey);\n}\n\n/**\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\n */\nfunction syncTreeMakeQueryKey_(query: QueryContext): string {\n  return query._path.toString() + '$' + query._queryIdentifier;\n}\n\n/**\n * Return the query associated with the given tag, if we have one\n */\nfunction syncTreeQueryKeyForTag_(\n  syncTree: SyncTree,\n  tag: number\n): string | null {\n  return syncTree.tagToQueryMap.get(tag);\n}\n\n/**\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\n */\nfunction syncTreeParseQueryKey_(queryKey: string): {\n  queryId: string;\n  path: Path;\n} {\n  const splitIndex = queryKey.indexOf('$');\n  assert(\n    splitIndex !== -1 && splitIndex < queryKey.length - 1,\n    'Bad queryKey.'\n  );\n  return {\n    queryId: queryKey.substr(splitIndex + 1),\n    path: new Path(queryKey.substr(0, splitIndex))\n  };\n}\n\n/**\n * A helper method to apply tagged operations\n */\nfunction syncTreeApplyTaggedOperation_(\n  syncTree: SyncTree,\n  queryPath: Path,\n  operation: Operation\n): Event[] {\n  const syncPoint = syncTree.syncPointTree_.get(queryPath);\n  assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n  const writesCache = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    queryPath\n  );\n  return syncPointApplyOperation(syncPoint, operation, writesCache, null);\n}\n\n/**\n * This collapses multiple unfiltered views into a single view, since we only need a single\n * listener for them.\n */\nfunction syncTreeCollectDistinctViewsForSubTree_(\n  subtree: ImmutableTree<SyncPoint>\n): View[] {\n  return subtree.fold<View[]>((relativePath, maybeChildSyncPoint, childMap) => {\n    if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n      const completeView = syncPointGetCompleteView(maybeChildSyncPoint);\n      return [completeView];\n    } else {\n      // No complete view here, flatten any deeper listens into an array\n      let views: View[] = [];\n      if (maybeChildSyncPoint) {\n        views = syncPointGetQueryViews(maybeChildSyncPoint);\n      }\n      each(childMap, (_key: string, childViews: View[]) => {\n        views = views.concat(childViews);\n      });\n      return views;\n    }\n  });\n}\n\n/**\n * Normalizes a query to a query we send the server for listening\n *\n * @returns The normalized query\n */\nfunction syncTreeQueryForListening_(query: QueryContext): QueryContext {\n  if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\n    // We treat queries that load all data as default queries\n    // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n    // from Query\n    return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\n  } else {\n    return query;\n  }\n}\n\nfunction syncTreeRemoveTags_(syncTree: SyncTree, queries: QueryContext[]) {\n  for (let j = 0; j < queries.length; ++j) {\n    const removedQuery = queries[j];\n    if (!removedQuery._queryParams.loadsAllData()) {\n      // We should have a tag for this\n      const removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\n      const removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\n      syncTree.queryToTagMap.delete(removedQueryKey);\n      syncTree.tagToQueryMap.delete(removedQueryTag);\n    }\n  }\n}\n\n/**\n * Static accessor for query tags.\n */\nfunction syncTreeGetNextQueryTag_(): number {\n  return syncTreeNextQueryTag_++;\n}\n\n/**\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\n *\n * @returns This method can return events to support synchronous data sources\n */\nfunction syncTreeSetupListener_(\n  syncTree: SyncTree,\n  query: QueryContext,\n  view: View\n): Event[] {\n  const path = query._path;\n  const tag = syncTreeTagForQuery_(syncTree, query);\n  const listener = syncTreeCreateListenerForView_(syncTree, view);\n\n  const events = syncTree.listenProvider_.startListening(\n    syncTreeQueryForListening_(query),\n    tag,\n    listener.hashFn,\n    listener.onComplete\n  );\n\n  const subtree = syncTree.syncPointTree_.subtree(path);\n  // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n  // may need to shadow other listens as well.\n  if (tag) {\n    assert(\n      !syncPointHasCompleteView(subtree.value),\n      \"If we're adding a query, it shouldn't be shadowed\"\n    );\n  } else {\n    // Shadow everything at or below this location, this is a default listener.\n    const queriesToStop = subtree.fold<QueryContext[]>(\n      (relativePath, maybeChildSyncPoint, childMap) => {\n        if (\n          !pathIsEmpty(relativePath) &&\n          maybeChildSyncPoint &&\n          syncPointHasCompleteView(maybeChildSyncPoint)\n        ) {\n          return [syncPointGetCompleteView(maybeChildSyncPoint).query];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          let queries: QueryContext[] = [];\n          if (maybeChildSyncPoint) {\n            queries = queries.concat(\n              syncPointGetQueryViews(maybeChildSyncPoint).map(\n                view => view.query\n              )\n            );\n          }\n          each(childMap, (_key: string, childQueries: QueryContext[]) => {\n            queries = queries.concat(childQueries);\n          });\n          return queries;\n        }\n      }\n    );\n    for (let i = 0; i < queriesToStop.length; ++i) {\n      const queryToStop = queriesToStop[i];\n      syncTree.listenProvider_.stopListening(\n        syncTreeQueryForListening_(queryToStop),\n        syncTreeTagForQuery_(syncTree, queryToStop)\n      );\n    }\n  }\n  return events;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { LeafNode } from '../snap/LeafNode';\nimport { Node } from '../snap/Node';\nimport { nodeFromJSON } from '../snap/nodeFromJSON';\nimport { SyncTree, syncTreeCalcCompleteEventCache } from '../SyncTree';\n\nimport { Indexable } from './misc';\nimport { Path, pathChild } from './Path';\n\n/* It's critical for performance that we do not calculate actual values from a SyncTree\n * unless and until the value is needed. Because we expose both a SyncTree and Node\n * version of deferred value resolution, we ned a wrapper class that will let us share\n * code.\n *\n * @see https://github.com/firebase/firebase-js-sdk/issues/2487\n */\ninterface ValueProvider {\n  getImmediateChild(childName: string): ValueProvider;\n  node(): Node;\n}\n\nclass ExistingValueProvider implements ValueProvider {\n  constructor(readonly node_: Node) {}\n\n  getImmediateChild(childName: string): ValueProvider {\n    const child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  }\n\n  node(): Node {\n    return this.node_;\n  }\n}\n\nclass DeferredValueProvider implements ValueProvider {\n  private syncTree_: SyncTree;\n  private path_: Path;\n\n  constructor(syncTree: SyncTree, path: Path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  getImmediateChild(childName: string): ValueProvider {\n    const childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  }\n\n  node(): Node {\n    return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\n  }\n}\n\n/**\n * Generate placeholders for deferred values.\n */\nexport const generateWithValues = function (\n  values: {\n    [k: string]: unknown;\n  } | null\n): { [k: string]: unknown } {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n\n/**\n * Value to use when firing local events. When writing server values, fire\n * local events with an approximate value, otherwise return value as-is.\n */\nexport const resolveDeferredLeafValue = function (\n  value: { [k: string]: unknown } | string | number | boolean,\n  existingVal: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  if (!value || typeof value !== 'object') {\n    return value as string | number | boolean;\n  }\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal, serverValues);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nconst resolveScalarDeferredValue = function (\n  op: string,\n  existing: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'] as string | number | boolean;\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nconst resolveComplexDeferredValue = function (\n  op: object,\n  existing: ValueProvider,\n  unused: { [k: string]: unknown }\n): string | number | boolean {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n  const delta = op['increment'];\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  const existingNode = existing.node();\n  assert(\n    existingNode !== null && typeof existingNode !== 'undefined',\n    'Expected ChildrenNode.EMPTY_NODE for nulls'\n  );\n\n  // Incrementing a non-number sets the value to the incremented amount\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  const leaf = existingNode as LeafNode;\n  const existingVal = leaf.getValue();\n  if (typeof existingVal !== 'number') {\n    return delta;\n  }\n\n  // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n  return existingVal + delta;\n};\n\n/**\n * Recursively replace all deferred values and priorities in the tree with the\n * specified generated replacement values.\n * @param path - path to which write is relative\n * @param node - new data written at path\n * @param syncTree - current data\n */\nexport const resolveDeferredValueTree = function (\n  path: Path,\n  node: Node,\n  syncTree: SyncTree,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new DeferredValueProvider(syncTree, path),\n    serverValues\n  );\n};\n\n/**\n * Recursively replace all deferred values and priorities in the node with the\n * specified generated replacement values.  If there are no server values in the node,\n * it'll be returned as-is.\n */\nexport const resolveDeferredValueSnapshot = function (\n  node: Node,\n  existing: Node,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new ExistingValueProvider(existing),\n    serverValues\n  );\n};\n\nfunction resolveDeferredValue(\n  node: Node,\n  existingVal: ValueProvider,\n  serverValues: Indexable\n): Node {\n  const rawPri = node.getPriority().val() as\n    | Indexable\n    | boolean\n    | null\n    | number\n    | string;\n  const priority = resolveDeferredLeafValue(\n    rawPri,\n    existingVal.getImmediateChild('.priority'),\n    serverValues\n  );\n  let newNode: Node;\n\n  if (node.isLeafNode()) {\n    const leafNode = node as LeafNode;\n    const value = resolveDeferredLeafValue(\n      leafNode.getValue(),\n      existingVal,\n      serverValues\n    );\n    if (\n      value !== leafNode.getValue() ||\n      priority !== leafNode.getPriority().val()\n    ) {\n      return new LeafNode(value, nodeFromJSON(priority));\n    } else {\n      return node;\n    }\n  } else {\n    const childrenNode = node as ChildrenNode;\n    newNode = childrenNode;\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n    childrenNode.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\n      const newChildNode = resolveDeferredValue(\n        childNode,\n        existingVal.getImmediateChild(childName),\n        serverValues\n      );\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, safeGet } from '@firebase/util';\n\nimport { Path, pathGetFront, pathPopFront } from './Path';\nimport { each } from './util';\n\n/**\n * Node in a Tree.\n */\nexport interface TreeNode<T> {\n  // TODO: Consider making accessors that create children and value lazily or\n  // separate Internal / Leaf 'types'.\n  children: Record<string, TreeNode<T>>;\n  childCount: number;\n  value?: T;\n}\n\n/**\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\n * children.\n */\nexport class Tree<T> {\n  /**\n   * @param name - Optional name of the node.\n   * @param parent - Optional parent node.\n   * @param node - Optional node to wrap.\n   */\n  constructor(\n    readonly name: string = '',\n    readonly parent: Tree<T> | null = null,\n    public node: TreeNode<T> = { children: {}, childCount: 0 }\n  ) {}\n}\n\n/**\n * Returns a sub-Tree for the given path.\n *\n * @param pathObj - Path to look up.\n * @returns Tree for path.\n */\nexport function treeSubTree<T>(tree: Tree<T>, pathObj: string | Path): Tree<T> {\n  // TODO: Require pathObj to be Path?\n  let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n  let child = tree,\n    next = pathGetFront(path);\n  while (next !== null) {\n    const childNode = safeGet(child.node.children, next) || {\n      children: {},\n      childCount: 0\n    };\n    child = new Tree<T>(next, child, childNode);\n    path = pathPopFront(path);\n    next = pathGetFront(path);\n  }\n\n  return child;\n}\n\n/**\n * Returns the data associated with this tree node.\n *\n * @returns The data or null if no data exists.\n */\nexport function treeGetValue<T>(tree: Tree<T>): T | undefined {\n  return tree.node.value;\n}\n\n/**\n * Sets data to this tree node.\n *\n * @param value - Value to set.\n */\nexport function treeSetValue<T>(tree: Tree<T>, value: T | undefined): void {\n  tree.node.value = value;\n  treeUpdateParents(tree);\n}\n\n/**\n * @returns Whether the tree has any children.\n */\nexport function treeHasChildren<T>(tree: Tree<T>): boolean {\n  return tree.node.childCount > 0;\n}\n\n/**\n * @returns Whethe rthe tree is empty (no value or children).\n */\nexport function treeIsEmpty<T>(tree: Tree<T>): boolean {\n  return treeGetValue(tree) === undefined && !treeHasChildren(tree);\n}\n\n/**\n * Calls action for each child of this tree node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachChild<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  each(tree.node.children, (child: string, childTree: TreeNode<T>) => {\n    action(new Tree<T>(child, tree, childTree));\n  });\n}\n\n/**\n * Does a depth-first traversal of this node's descendants, calling action for each one.\n *\n * @param action - Action to be called for each child.\n * @param includeSelf - Whether to call action on this node as well. Defaults to\n *   false.\n * @param childrenFirst - Whether to call action on children before calling it on\n *   parent.\n */\nexport function treeForEachDescendant<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void,\n  includeSelf?: boolean,\n  childrenFirst?: boolean\n): void {\n  if (includeSelf && !childrenFirst) {\n    action(tree);\n  }\n\n  treeForEachChild(tree, child => {\n    treeForEachDescendant(child, action, true, childrenFirst);\n  });\n\n  if (includeSelf && childrenFirst) {\n    action(tree);\n  }\n}\n\n/**\n * Calls action on each ancestor node.\n *\n * @param action - Action to be called on each parent; return\n *   true to abort.\n * @param includeSelf - Whether to call action on this node as well.\n * @returns true if the action callback returned true.\n */\nexport function treeForEachAncestor<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => unknown,\n  includeSelf?: boolean\n): boolean {\n  let node = includeSelf ? tree : tree.parent;\n  while (node !== null) {\n    if (action(node)) {\n      return true;\n    }\n    node = node.parent;\n  }\n  return false;\n}\n\n/**\n * Does a depth-first traversal of this node's descendants.  When a descendant with a value\n * is found, action is called on it and traversal does not continue inside the node.\n * Action is *not* called on this node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachImmediateDescendantWithValue<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  treeForEachChild(tree, child => {\n    if (treeGetValue(child) !== undefined) {\n      action(child);\n    } else {\n      treeForEachImmediateDescendantWithValue(child, action);\n    }\n  });\n}\n\n/**\n * @returns The path of this tree node, as a Path.\n */\nexport function treeGetPath<T>(tree: Tree<T>) {\n  return new Path(\n    tree.parent === null\n      ? tree.name\n      : treeGetPath(tree.parent) + '/' + tree.name\n  );\n}\n\n/**\n * Adds or removes this child from its parent based on whether it's empty or not.\n */\nfunction treeUpdateParents<T>(tree: Tree<T>) {\n  if (tree.parent !== null) {\n    treeUpdateChild(tree.parent, tree.name, tree);\n  }\n}\n\n/**\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\n *\n * @param childName - The name of the child to update.\n * @param child - The child to update.\n */\nfunction treeUpdateChild<T>(tree: Tree<T>, childName: string, child: Tree<T>) {\n  const childEmpty = treeIsEmpty(child);\n  const childExists = contains(tree.node.children, childName);\n  if (childEmpty && childExists) {\n    delete tree.node.children[childName];\n    tree.node.childCount--;\n    treeUpdateParents(tree);\n  } else if (!childEmpty && !childExists) {\n    tree.node.children[childName] = child.node;\n    tree.node.childCount++;\n    treeUpdateParents(tree);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  contains,\n  errorPrefix as errorPrefixFxn,\n  safeGet,\n  stringLength\n} from '@firebase/util';\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport {\n  Path,\n  pathChild,\n  pathCompare,\n  pathContains,\n  pathGetBack,\n  pathGetFront,\n  pathSlice,\n  ValidationPath,\n  validationPathPop,\n  validationPathPush,\n  validationPathToErrorString\n} from './Path';\nimport { each, isInvalidJSONNumber } from './util';\n\n/**\n * True for invalid Firebase keys\n */\nexport const INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n\n/**\n * True for invalid Firebase paths.\n * Allows '/' in paths.\n */\nexport const INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n\n/**\n * Maximum number of characters to allow in leaf value\n */\nexport const MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nexport const isValidKey = function (key: unknown): boolean {\n  return (\n    typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key)\n  );\n};\n\nexport const isValidPathString = function (pathString: string): boolean {\n  return (\n    typeof pathString === 'string' &&\n    pathString.length !== 0 &&\n    !INVALID_PATH_REGEX_.test(pathString)\n  );\n};\n\nexport const isValidRootPathString = function (pathString: string): boolean {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nexport const isValidPriority = function (priority: unknown): boolean {\n  return (\n    priority === null ||\n    typeof priority === 'string' ||\n    (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\n    (priority &&\n      typeof priority === 'object' &&\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      contains(priority as any, '.sv'))\n  );\n};\n\n/**\n * Pre-validate a datum passed as an argument to Firebase function.\n */\nexport const validateFirebaseDataArg = function (\n  fnName: string,\n  value: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && value === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefixFxn(fnName, 'value'), value, path);\n};\n\n/**\n * Validate a data object client-side before sending to server.\n */\nexport const validateFirebaseData = function (\n  errorPrefix: string,\n  data: unknown,\n  path_: Path | ValidationPath\n) {\n  const path =\n    path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(\n      errorPrefix + 'contains undefined ' + validationPathToErrorString(path)\n    );\n  }\n  if (typeof data === 'function') {\n    throw new Error(\n      errorPrefix +\n        'contains a function ' +\n        validationPathToErrorString(path) +\n        ' with contents = ' +\n        data.toString()\n    );\n  }\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(\n      errorPrefix +\n        'contains ' +\n        data.toString() +\n        ' ' +\n        validationPathToErrorString(path)\n    );\n  }\n\n  // Check max leaf size, but try to avoid the utf8 conversion if we can.\n  if (\n    typeof data === 'string' &&\n    data.length > MAX_LEAF_SIZE_ / 3 &&\n    stringLength(data) > MAX_LEAF_SIZE_\n  ) {\n    throw new Error(\n      errorPrefix +\n        'contains a string greater than ' +\n        MAX_LEAF_SIZE_ +\n        ' utf8 bytes ' +\n        validationPathToErrorString(path) +\n        \" ('\" +\n        data.substring(0, 50) +\n        \"...')\"\n    );\n  }\n\n  // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n  if (data && typeof data === 'object') {\n    let hasDotValue = false;\n    let hasActualChild = false;\n    each(data, (key: string, value: unknown) => {\n      if (key === '.value') {\n        hasDotValue = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild = true;\n        if (!isValidKey(key)) {\n          throw new Error(\n            errorPrefix +\n              ' contains an invalid key (' +\n              key +\n              ') ' +\n              validationPathToErrorString(path) +\n              '.  Keys must be non-empty strings ' +\n              'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n          );\n        }\n      }\n\n      validationPathPush(path, key);\n      validateFirebaseData(errorPrefix, value, path);\n      validationPathPop(path);\n    });\n\n    if (hasDotValue && hasActualChild) {\n      throw new Error(\n        errorPrefix +\n          ' contains \".value\" child ' +\n          validationPathToErrorString(path) +\n          ' in addition to actual children.'\n      );\n    }\n  }\n};\n\n/**\n * Pre-validate paths passed in the firebase function.\n */\nexport const validateFirebaseMergePaths = function (\n  errorPrefix: string,\n  mergePaths: Path[]\n) {\n  let i, curPath: Path;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    const keys = pathSlice(curPath);\n    for (let j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) {\n        // .priority is OK\n      } else if (!isValidKey(keys[j])) {\n        throw new Error(\n          errorPrefix +\n            'contains an invalid key (' +\n            keys[j] +\n            ') in path ' +\n            curPath.toString() +\n            '. Keys must be non-empty strings ' +\n            'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n        );\n      }\n    }\n  }\n\n  // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n  mergePaths.sort(pathCompare);\n  let prevPath: Path | null = null;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(\n        errorPrefix +\n          'contains a path ' +\n          prevPath.toString() +\n          ' that is ancestor of another path ' +\n          curPath.toString()\n      );\n    }\n    prevPath = curPath;\n  }\n};\n\n/**\n * pre-validate an object passed as an argument to firebase function (\n * must be an object - e.g. for firebase.update()).\n */\nexport const validateFirebaseMergeDataArg = function (\n  fnName: string,\n  data: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  const errorPrefix = errorPrefixFxn(fnName, 'values');\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(\n      errorPrefix + ' must be an object containing the children to replace.'\n    );\n  }\n\n  const mergePaths: Path[] = [];\n  each(data, (key: string, value: unknown) => {\n    const curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, pathChild(path, curPath));\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(\n          errorPrefix +\n            \"contains an invalid value for '\" +\n            curPath.toString() +\n            \"', which must be a valid \" +\n            'Firebase priority (a string, finite number, server value, or null).'\n        );\n      }\n    }\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nexport const validatePriority = function (\n  fnName: string,\n  priority: unknown,\n  optional: boolean\n) {\n  if (optional && priority === undefined) {\n    return;\n  }\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'is ' +\n        priority.toString() +\n        ', but must be a valid Firebase priority (a string, finite number, ' +\n        'server value, or null).'\n    );\n  }\n  // Special case to allow importing data with a .sv.\n  if (!isValidPriority(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'must be a valid Firebase priority ' +\n        '(a string, finite number, server value, or null).'\n    );\n  }\n};\n\nexport const validateKey = function (\n  fnName: string,\n  argumentName: string,\n  key: string,\n  optional: boolean\n) {\n  if (optional && key === undefined) {\n    return;\n  }\n  if (!isValidKey(key)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid key = \"' +\n        key +\n        '\".  Firebase keys must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").'\n    );\n  }\n};\n\n/**\n * @internal\n */\nexport const validatePathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid path = \"' +\n        pathString +\n        '\". Paths must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"'\n    );\n  }\n};\n\nexport const validateRootPathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentName, pathString, optional);\n};\n\n/**\n * @internal\n */\nexport const validateWritablePath = function (fnName: string, path: Path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nexport const validateUrl = function (\n  fnName: string,\n  parsedUrl: { repoInfo: RepoInfo; path: Path }\n) {\n  // TODO = Validate server better.\n  const pathString = parsedUrl.path.toString();\n  if (\n    !(typeof parsedUrl.repoInfo.host === 'string') ||\n    parsedUrl.repoInfo.host.length === 0 ||\n    (!isValidKey(parsedUrl.repoInfo.namespace) &&\n      parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\n    (pathString.length !== 0 && !isValidRootPathString(pathString))\n  ) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'url') +\n        'must be a valid firebase URL and ' +\n        'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".'\n    );\n  }\n};\n\nexport const validateString = function (\n  fnName: string,\n  argumentName: string,\n  string: unknown,\n  optional: boolean\n) {\n  if (optional && string === undefined) {\n    return;\n  }\n  if (!(typeof string === 'string')) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid string.'\n    );\n  }\n};\n\nexport const validateObject = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  optional: boolean\n) {\n  if (optional && obj === undefined) {\n    return;\n  }\n  if (!(obj && typeof obj === 'object') || obj === null) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid object.'\n    );\n  }\n};\n\nexport const validateObjectContainsKey = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  key: string,\n  optional: boolean,\n  optType?: string\n) {\n  const objectContainsKey =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    obj && typeof obj === 'object' && contains(obj as any, key);\n\n  if (!objectContainsKey) {\n    if (optional) {\n      return;\n    } else {\n      throw new Error(\n        errorPrefixFxn(fnName, argumentName) +\n          'must contain the key \"' +\n          key +\n          '\"'\n      );\n    }\n  }\n\n  if (optType) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const val = safeGet(obj as any, key);\n    if (\n      (optType === 'number' && !(typeof val === 'number')) ||\n      (optType === 'string' && !(typeof val === 'string')) ||\n      (optType === 'boolean' && !(typeof val === 'boolean')) ||\n      (optType === 'function' && !(typeof val === 'function')) ||\n      (optType === 'object' && !(typeof val === 'object') && val)\n    ) {\n      if (optional) {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'contains invalid value for key \"' +\n            key +\n            '\" (must be of type \"' +\n            optType +\n            '\")'\n        );\n      } else {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'must contain the key \"' +\n            key +\n            '\" with type \"' +\n            optType +\n            '\"'\n        );\n      }\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path, pathContains, pathEquals } from '../util/Path';\nimport { exceptionGuard, log, logger } from '../util/util';\n\nimport { Event } from './Event';\n\n/**\n * The event queue serves a few purposes:\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\n *    events being queued.\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\n *    left off, ensuring that the events are still raised synchronously and in order.\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\n *    events are raised synchronously.\n *\n * NOTE: This can all go away if/when we move to async events.\n *\n */\nexport class EventQueue {\n  eventLists_: EventList[] = [];\n\n  /**\n   * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\n   */\n  recursionDepth_ = 0;\n}\n\n/**\n * @param eventDataList - The new events to queue.\n */\nexport function eventQueueQueueEvents(\n  eventQueue: EventQueue,\n  eventDataList: Event[]\n) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  let currList: EventList | null = null;\n  for (let i = 0; i < eventDataList.length; i++) {\n    const data = eventDataList[i];\n    const path = data.getPath();\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = { events: [], path };\n    }\n\n    currList.events.push(data);\n  }\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones)\n * for the specified path.\n *\n * It is assumed that the new events are all for the specified path.\n *\n * @param path - The path to raise events for.\n * @param eventDataList - The new events to raise.\n */\nexport function eventQueueRaiseEventsAtPath(\n  eventQueue: EventQueue,\n  path: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath =>\n    pathEquals(eventPath, path)\n  );\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\n * locations related to the specified change path (i.e. all ancestors and descendants).\n *\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\n *\n * @param changedPath - The path to raise events for.\n * @param eventDataList - The events to raise\n */\nexport function eventQueueRaiseEventsForChangedPath(\n  eventQueue: EventQueue,\n  changedPath: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(\n    eventQueue,\n    eventPath =>\n      pathContains(eventPath, changedPath) ||\n      pathContains(changedPath, eventPath)\n  );\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(\n  eventQueue: EventQueue,\n  predicate: (path: Path) => boolean\n) {\n  eventQueue.recursionDepth_++;\n\n  let sentAll = true;\n  for (let i = 0; i < eventQueue.eventLists_.length; i++) {\n    const eventList = eventQueue.eventLists_[i];\n    if (eventList) {\n      const eventPath = eventList.path;\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n\ninterface EventList {\n  events: Event[];\n  path: Path;\n}\n\n/**\n * Iterates through the list and raises each event\n */\nfunction eventListRaise(eventList: EventList) {\n  for (let i = 0; i < eventList.events.length; i++) {\n    const eventData = eventList.events[i];\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      const eventFn = eventData.getEventRunner();\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n      exceptionGuard(eventFn);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  isEmpty,\n  map,\n  safeGet,\n  stringify\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { PersistentConnection } from './PersistentConnection';\nimport { ReadonlyRestClient } from './ReadonlyRestClient';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { nodeFromJSON } from './snap/nodeFromJSON';\nimport { SnapshotHolder } from './SnapshotHolder';\nimport {\n  newSparseSnapshotTree,\n  SparseSnapshotTree,\n  sparseSnapshotTreeForEachTree,\n  sparseSnapshotTreeForget,\n  sparseSnapshotTreeRemember\n} from './SparseSnapshotTree';\nimport { StatsCollection } from './stats/StatsCollection';\nimport { StatsListener } from './stats/StatsListener';\nimport {\n  statsManagerGetCollection,\n  statsManagerGetOrCreateReporter\n} from './stats/StatsManager';\nimport { StatsReporter, statsReporterIncludeStat } from './stats/StatsReporter';\nimport {\n  SyncTree,\n  syncTreeAckUserWrite,\n  syncTreeAddEventRegistration,\n  syncTreeApplyServerMerge,\n  syncTreeApplyServerOverwrite,\n  syncTreeApplyTaggedQueryMerge,\n  syncTreeApplyTaggedQueryOverwrite,\n  syncTreeApplyUserMerge,\n  syncTreeApplyUserOverwrite,\n  syncTreeCalcCompleteEventCache,\n  syncTreeGetServerValue,\n  syncTreeRemoveEventRegistration\n} from './SyncTree';\nimport { Indexable } from './util/misc';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathPopFront\n} from './util/Path';\nimport {\n  generateWithValues,\n  resolveDeferredValueSnapshot,\n  resolveDeferredValueTree\n} from './util/ServerValues';\nimport {\n  Tree,\n  treeForEachAncestor,\n  treeForEachChild,\n  treeForEachDescendant,\n  treeGetPath,\n  treeGetValue,\n  treeHasChildren,\n  treeSetValue,\n  treeSubTree\n} from './util/Tree';\nimport {\n  beingCrawled,\n  each,\n  exceptionGuard,\n  log,\n  LUIDGenerator,\n  warn\n} from './util/util';\nimport { isValidPriority, validateFirebaseData } from './util/validation';\nimport { Event } from './view/Event';\nimport {\n  EventQueue,\n  eventQueueQueueEvents,\n  eventQueueRaiseEventsAtPath,\n  eventQueueRaiseEventsForChangedPath\n} from './view/EventQueue';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\n\nconst INTERRUPT_REASON = 'repo_interrupt';\n\n/**\n * If a transaction does not succeed after 25 retries, we abort it. Among other\n * things this ensure that if there's ever a bug causing a mismatch between\n * client / server hashes for some data, we won't retry indefinitely.\n */\nconst MAX_TRANSACTION_RETRIES = 25;\n\nconst enum TransactionStatus {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  RUN,\n\n  // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n  SENT,\n\n  // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n  COMPLETED,\n\n  // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n  SENT_NEEDS_ABORT,\n\n  // Temporary state used to mark transactions that need to be aborted.\n  NEEDS_ABORT\n}\n\ninterface Transaction {\n  path: Path;\n  update: (a: unknown) => unknown;\n  onComplete: (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => void;\n  status: TransactionStatus;\n  order: number;\n  applyLocally: boolean;\n  retryCount: number;\n  unwatcher: () => void;\n  abortReason: string | null;\n  currentWriteId: number;\n  currentInputSnapshot: Node | null;\n  currentOutputSnapshotRaw: Node | null;\n  currentOutputSnapshotResolved: Node | null;\n}\n\n/**\n * A connection to a single data repository.\n */\nexport class Repo {\n  /** Key for uniquely identifying this repo, used in RepoManager */\n  readonly key: string;\n\n  dataUpdateCount = 0;\n  infoSyncTree_: SyncTree;\n  serverSyncTree_: SyncTree;\n\n  stats_: StatsCollection;\n  statsListener_: StatsListener | null = null;\n  eventQueue_ = new EventQueue();\n  nextWriteId_ = 1;\n  server_: ServerActions;\n  statsReporter_: StatsReporter;\n  infoData_: SnapshotHolder;\n  interceptServerDataCallback_: ((a: string, b: unknown) => void) | null = null;\n\n  /** A list of data pieces and paths to be set when this client disconnects. */\n  onDisconnect_: SparseSnapshotTree = newSparseSnapshotTree();\n\n  /** Stores queues of outstanding transactions for Firebase locations. */\n  transactionQueueTree_ = new Tree<Transaction[]>();\n\n  // TODO: This should be @private but it's used by test_access.js and internal.js\n  persistentConnection_: PersistentConnection | null = null;\n\n  constructor(\n    public repoInfo_: RepoInfo,\n    public forceRestClient_: boolean,\n    public authTokenProvider_: AuthTokenProvider,\n    public appCheckProvider_: AppCheckTokenProvider\n  ) {\n    // This key is intentionally not updated if RepoInfo is later changed or replaced\n    this.key = this.repoInfo_.toURLString();\n  }\n\n  /**\n   * @returns The URL corresponding to the root of this Firebase.\n   */\n  toString(): string {\n    return (\n      (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host\n    );\n  }\n}\n\nexport function repoStart(\n  repo: Repo,\n  appId: string,\n  authOverride?: object\n): void {\n  repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\n\n  if (repo.forceRestClient_ || beingCrawled()) {\n    repo.server_ = new ReadonlyRestClient(\n      repo.repoInfo_,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_\n    );\n\n    // Minor hack: Fire onConnect immediately, since there's no actual connection.\n    setTimeout(() => repoOnConnectStatus(repo, /* connectStatus= */ true), 0);\n  } else {\n    // Validate authOverride\n    if (typeof authOverride !== 'undefined' && authOverride !== null) {\n      if (typeof authOverride !== 'object') {\n        throw new Error(\n          'Only objects are supported for option databaseAuthVariableOverride'\n        );\n      }\n      try {\n        stringify(authOverride);\n      } catch (e) {\n        throw new Error('Invalid authOverride provided: ' + e);\n      }\n    }\n\n    repo.persistentConnection_ = new PersistentConnection(\n      repo.repoInfo_,\n      appId,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      (connectStatus: boolean) => {\n        repoOnConnectStatus(repo, connectStatus);\n      },\n      (updates: object) => {\n        repoOnServerInfoUpdate(repo, updates);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_,\n      authOverride\n    );\n\n    repo.server_ = repo.persistentConnection_;\n  }\n\n  repo.authTokenProvider_.addTokenChangeListener(token => {\n    repo.server_.refreshAuthToken(token);\n  });\n\n  repo.appCheckProvider_.addTokenChangeListener(result => {\n    repo.server_.refreshAppCheckToken(result.token);\n  });\n\n  // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n  // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n  repo.statsReporter_ = statsManagerGetOrCreateReporter(\n    repo.repoInfo_,\n    () => new StatsReporter(repo.stats_, repo.server_)\n  );\n\n  // Used for .info.\n  repo.infoData_ = new SnapshotHolder();\n  repo.infoSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      let infoEvents: Event[] = [];\n      const node = repo.infoData_.getNode(query._path);\n      // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n      // on initial data...\n      if (!node.isEmpty()) {\n        infoEvents = syncTreeApplyServerOverwrite(\n          repo.infoSyncTree_,\n          query._path,\n          node\n        );\n        setTimeout(() => {\n          onComplete('ok');\n        }, 0);\n      }\n      return infoEvents;\n    },\n    stopListening: () => {}\n  });\n  repoUpdateInfo(repo, 'connected', false);\n\n  repo.serverSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      repo.server_.listen(query, currentHashFn, tag, (status, data) => {\n        const events = onComplete(status, data);\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          query._path,\n          events\n        );\n      });\n      // No synchronous events for network-backed sync trees\n      return [];\n    },\n    stopListening: (query, tag) => {\n      repo.server_.unlisten(query, tag);\n    }\n  });\n}\n\n/**\n * @returns The time in milliseconds, taking the server offset into account if we have one.\n */\nexport function repoServerTime(repo: Repo): number {\n  const offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\n  const offset = (offsetNode.val() as number) || 0;\n  return new Date().getTime() + offset;\n}\n\n/**\n * Generate ServerValues using some variables from the repo object.\n */\nexport function repoGenerateServerValues(repo: Repo): Indexable {\n  return generateWithValues({\n    timestamp: repoServerTime(repo)\n  });\n}\n\n/**\n * Called by realtime when we get new messages from the server.\n */\nfunction repoOnDataUpdate(\n  repo: Repo,\n  pathString: string,\n  data: unknown,\n  isMerge: boolean,\n  tag: number | null\n): void {\n  // For testing.\n  repo.dataUpdateCount++;\n  const path = new Path(pathString);\n  data = repo.interceptServerDataCallback_\n    ? repo.interceptServerDataCallback_(pathString, data)\n    : data;\n  let events = [];\n  if (tag) {\n    if (isMerge) {\n      const taggedChildren = map(\n        data as { [k: string]: unknown },\n        (raw: unknown) => nodeFromJSON(raw)\n      );\n      events = syncTreeApplyTaggedQueryMerge(\n        repo.serverSyncTree_,\n        path,\n        taggedChildren,\n        tag\n      );\n    } else {\n      const taggedSnap = nodeFromJSON(data);\n      events = syncTreeApplyTaggedQueryOverwrite(\n        repo.serverSyncTree_,\n        path,\n        taggedSnap,\n        tag\n      );\n    }\n  } else if (isMerge) {\n    const changedChildren = map(\n      data as { [k: string]: unknown },\n      (raw: unknown) => nodeFromJSON(raw)\n    );\n    events = syncTreeApplyServerMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren\n    );\n  } else {\n    const snap = nodeFromJSON(data);\n    events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\n  }\n  let affectedPath = path;\n  if (events.length > 0) {\n    // Since we have a listener outstanding for each transaction, receiving any events\n    // is a proxy for some change having occurred.\n    affectedPath = repoRerunTransactions(repo, path);\n  }\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\n}\n\n// TODO: This should be @private but it's used by test_access.js and internal.js\nexport function repoInterceptServerData(\n  repo: Repo,\n  callback: ((a: string, b: unknown) => unknown) | null\n): void {\n  repo.interceptServerDataCallback_ = callback;\n}\n\nfunction repoOnConnectStatus(repo: Repo, connectStatus: boolean): void {\n  repoUpdateInfo(repo, 'connected', connectStatus);\n  if (connectStatus === false) {\n    repoRunOnDisconnectEvents(repo);\n  }\n}\n\nfunction repoOnServerInfoUpdate(repo: Repo, updates: object): void {\n  each(updates, (key: string, value: unknown) => {\n    repoUpdateInfo(repo, key, value);\n  });\n}\n\nfunction repoUpdateInfo(repo: Repo, pathString: string, value: unknown): void {\n  const path = new Path('/.info/' + pathString);\n  const newNode = nodeFromJSON(value);\n  repo.infoData_.updateSnapshot(path, newNode);\n  const events = syncTreeApplyServerOverwrite(\n    repo.infoSyncTree_,\n    path,\n    newNode\n  );\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n}\n\nfunction repoGetNextWriteId(repo: Repo): number {\n  return repo.nextWriteId_++;\n}\n\n/**\n * The purpose of `getValue` is to return the latest known value\n * satisfying `query`.\n *\n * This method will first check for in-memory cached values\n * belonging to active listeners. If they are found, such values\n * are considered to be the most up-to-date.\n *\n * If the client is not connected, this method will try to\n * establish a connection and request the value for `query`. If\n * the client is not able to retrieve the query result, it reports\n * an error.\n *\n * @param query - The query to surface a value for.\n */\nexport function repoGetValue(repo: Repo, query: QueryContext): Promise<Node> {\n  // Only active queries are cached. There is no persisted cache.\n  const cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\n  if (cached != null) {\n    return Promise.resolve(cached);\n  }\n  return repo.server_.get(query).then(\n    payload => {\n      const node = nodeFromJSON(payload as string).withIndex(\n        query._queryParams.getIndex()\n      );\n      const events = syncTreeApplyServerOverwrite(\n        repo.serverSyncTree_,\n        query._path,\n        node\n      );\n      eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n      return Promise.resolve(node);\n    },\n    err => {\n      repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\n      return Promise.reject(new Error(err as string));\n    }\n  );\n}\n\nexport function repoSetWithPriority(\n  repo: Repo,\n  path: Path,\n  newVal: unknown,\n  newPriority: number | string | null,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'set', {\n    path: path.toString(),\n    value: newVal,\n    priority: newPriority\n  });\n\n  // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n  // (b) store unresolved paths on JSON parse\n  const serverValues = repoGenerateServerValues(repo);\n  const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\n  const existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\n  const newNode = resolveDeferredValueSnapshot(\n    newNodeUnresolved,\n    existing,\n    serverValues\n  );\n\n  const writeId = repoGetNextWriteId(repo);\n  const events = syncTreeApplyUserOverwrite(\n    repo.serverSyncTree_,\n    path,\n    newNode,\n    writeId,\n    true\n  );\n  eventQueueQueueEvents(repo.eventQueue_, events);\n  repo.server_.put(\n    path.toString(),\n    newNodeUnresolved.val(/*export=*/ true),\n    (status, errorReason) => {\n      const success = status === 'ok';\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      const clearEvents = syncTreeAckUserWrite(\n        repo.serverSyncTree_,\n        writeId,\n        !success\n      );\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n  const affectedPath = repoAbortTransactions(repo, path);\n  repoRerunTransactions(repo, affectedPath);\n  // We queued the events above, so just flush the queue here\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\n}\n\nexport function repoUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\n\n  // Start with our existing data and merge each child into it.\n  let empty = true;\n  const serverValues = repoGenerateServerValues(repo);\n  const changedChildren: { [k: string]: Node } = {};\n  each(childrenToMerge, (changedKey: string, changedValue: unknown) => {\n    empty = false;\n    changedChildren[changedKey] = resolveDeferredValueTree(\n      pathChild(path, changedKey),\n      nodeFromJSON(changedValue),\n      repo.serverSyncTree_,\n      serverValues\n    );\n  });\n\n  if (!empty) {\n    const writeId = repoGetNextWriteId(repo);\n    const events = syncTreeApplyUserMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren,\n      writeId\n    );\n    eventQueueQueueEvents(repo.eventQueue_, events);\n    repo.server_.merge(\n      path.toString(),\n      childrenToMerge,\n      (status, errorReason) => {\n        const success = status === 'ok';\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        const clearEvents = syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          writeId,\n          !success\n        );\n        const affectedPath =\n          clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          affectedPath,\n          clearEvents\n        );\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n      }\n    );\n\n    each(childrenToMerge, (changedPath: string) => {\n      const affectedPath = repoAbortTransactions(\n        repo,\n        pathChild(path, changedPath)\n      );\n      repoRerunTransactions(repo, affectedPath);\n    });\n\n    // We queued the events above, so just flush the queue here\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\n  } else {\n    log(\"update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n  }\n}\n\n/**\n * Applies all of the changes stored up in the onDisconnect_ tree.\n */\nfunction repoRunOnDisconnectEvents(repo: Repo): void {\n  repoLog(repo, 'onDisconnectEvents');\n\n  const serverValues = repoGenerateServerValues(repo);\n  const resolvedOnDisconnectTree = newSparseSnapshotTree();\n  sparseSnapshotTreeForEachTree(\n    repo.onDisconnect_,\n    newEmptyPath(),\n    (path, node) => {\n      const resolved = resolveDeferredValueTree(\n        path,\n        node,\n        repo.serverSyncTree_,\n        serverValues\n      );\n      sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\n    }\n  );\n  let events: Event[] = [];\n\n  sparseSnapshotTreeForEachTree(\n    resolvedOnDisconnectTree,\n    newEmptyPath(),\n    (path, snap) => {\n      events = events.concat(\n        syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap)\n      );\n      const affectedPath = repoAbortTransactions(repo, path);\n      repoRerunTransactions(repo, affectedPath);\n    }\n  );\n\n  repo.onDisconnect_ = newSparseSnapshotTree();\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\n}\n\nexport function repoOnDisconnectCancel(\n  repo: Repo,\n  path: Path,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repo.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\n    if (status === 'ok') {\n      sparseSnapshotTreeForget(repo.onDisconnect_, path);\n    }\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nexport function repoOnDisconnectSet(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectSetWithPriority(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  priority: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value, priority);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  if (isEmpty(childrenToMerge)) {\n    log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n    return;\n  }\n\n  repo.server_.onDisconnectMerge(\n    path.toString(),\n    childrenToMerge,\n    (status, errorReason) => {\n      if (status === 'ok') {\n        each(childrenToMerge, (childName: string, childNode: unknown) => {\n          const newChildNode = nodeFromJSON(childNode);\n          sparseSnapshotTreeRemember(\n            repo.onDisconnect_,\n            pathChild(path, childName),\n            newChildNode\n          );\n        });\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoAddEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeAddEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeAddEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoRemoveEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n  // a little bit by handling the return values anyways.\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeRemoveEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeRemoveEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoInterrupt(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.interrupt(INTERRUPT_REASON);\n  }\n}\n\nexport function repoResume(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.resume(INTERRUPT_REASON);\n  }\n}\n\nexport function repoStats(repo: Repo, showDelta: boolean = false): void {\n  if (typeof console === 'undefined') {\n    return;\n  }\n\n  let stats: { [k: string]: unknown };\n  if (showDelta) {\n    if (!repo.statsListener_) {\n      repo.statsListener_ = new StatsListener(repo.stats_);\n    }\n    stats = repo.statsListener_.get();\n  } else {\n    stats = repo.stats_.get();\n  }\n\n  const longestName = Object.keys(stats).reduce(\n    (previousValue, currentValue) =>\n      Math.max(currentValue.length, previousValue),\n    0\n  );\n\n  each(stats, (stat: string, value: unknown) => {\n    let paddedStat = stat;\n    // pad stat names to be the same length (plus 2 extra spaces).\n    for (let i = stat.length; i < longestName + 2; i++) {\n      paddedStat += ' ';\n    }\n    console.log(paddedStat + value);\n  });\n}\n\nexport function repoStatsIncrementCounter(repo: Repo, metric: string): void {\n  repo.stats_.incrementCounter(metric);\n  statsReporterIncludeStat(repo.statsReporter_, metric);\n}\n\nfunction repoLog(repo: Repo, ...varArgs: unknown[]): void {\n  let prefix = '';\n  if (repo.persistentConnection_) {\n    prefix = repo.persistentConnection_.id + ':';\n  }\n  log(prefix, ...varArgs);\n}\n\nexport function repoCallOnCompleteCallback(\n  repo: Repo,\n  callback: ((status: Error | null, errorReason?: string) => void) | null,\n  status: string,\n  errorReason?: string | null\n): void {\n  if (callback) {\n    exceptionGuard(() => {\n      if (status === 'ok') {\n        callback(null);\n      } else {\n        const code = (status || 'error').toUpperCase();\n        let message = code;\n        if (errorReason) {\n          message += ': ' + errorReason;\n        }\n\n        const error = new Error(message);\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (error as any).code = code;\n        callback(error);\n      }\n    });\n  }\n}\n\n/**\n * Creates a new transaction, adds it to the transactions we're tracking, and\n * sends it to the server if possible.\n *\n * @param path - Path at which to do transaction.\n * @param transactionUpdate - Update callback.\n * @param onComplete - Completion callback.\n * @param unwatcher - Function that will be called when the transaction no longer\n * need data updates for `path`.\n * @param applyLocally - Whether or not to make intermediate results visible\n */\nexport function repoStartTransaction(\n  repo: Repo,\n  path: Path,\n  transactionUpdate: (a: unknown) => unknown,\n  onComplete: ((error: Error, committed: boolean, node: Node) => void) | null,\n  unwatcher: () => void,\n  applyLocally: boolean\n): void {\n  repoLog(repo, 'transaction on ' + path);\n\n  // Initialize transaction.\n  const transaction: Transaction = {\n    path,\n    update: transactionUpdate,\n    onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out\n    // which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  };\n\n  // Run transaction initially.\n  const currentState = repoGetLatestState(repo, path, undefined);\n  transaction.currentInputSnapshot = currentState;\n  const newVal = transaction.update(currentState.val());\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n    if (transaction.onComplete) {\n      transaction.onComplete(null, false, transaction.currentInputSnapshot);\n    }\n  } else {\n    validateFirebaseData(\n      'transaction failed: Data returned ',\n      newVal,\n      transaction.path\n    );\n\n    // Mark as run and add to our queue.\n    transaction.status = TransactionStatus.RUN;\n    const queueNode = treeSubTree(repo.transactionQueueTree_, path);\n    const nodeQueue = treeGetValue(queueNode) || [];\n    nodeQueue.push(transaction);\n\n    treeSetValue(queueNode, nodeQueue);\n\n    // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our\n    // transaction state, since the user could start new transactions from the\n    // event callbacks.\n    let priorityForNode;\n    if (\n      typeof newVal === 'object' &&\n      newVal !== null &&\n      contains(newVal, '.priority')\n    ) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal as any, '.priority');\n      assert(\n        isValidPriority(priorityForNode),\n        'Invalid priority returned by transaction. ' +\n          'Priority must be a valid string, finite number, server value, or null.'\n      );\n    } else {\n      const currentNode =\n        syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\n        ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    const serverValues = repoGenerateServerValues(repo);\n    const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\n    const newNode = resolveDeferredValueSnapshot(\n      newNodeUnresolved,\n      currentState,\n      serverValues\n    );\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = repoGetNextWriteId(repo);\n\n    const events = syncTreeApplyUserOverwrite(\n      repo.serverSyncTree_,\n      path,\n      newNode,\n      transaction.currentWriteId,\n      transaction.applyLocally\n    );\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n  }\n}\n\n/**\n * @param excludeSets - A specific set to exclude\n */\nfunction repoGetLatestState(\n  repo: Repo,\n  path: Path,\n  excludeSets?: number[]\n): Node {\n  return (\n    syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\n    ChildrenNode.EMPTY_NODE\n  );\n}\n\n/**\n * Sends any already-run transactions that aren't waiting for outstanding\n * transactions to complete.\n *\n * Externally it's called with no arguments, but it calls itself recursively\n * with a particular transactionQueueTree node to recurse through the tree.\n *\n * @param node - transactionQueueTree node to start at.\n */\nfunction repoSendReadyTransactions(\n  repo: Repo,\n  node: Tree<Transaction[]> = repo.transactionQueueTree_\n): void {\n  // Before recursing, make sure any completed transactions are removed.\n  if (!node) {\n    repoPruneCompletedTransactionsBelowNode(repo, node);\n  }\n\n  if (treeGetValue(node)) {\n    const queue = repoBuildTransactionQueue(repo, node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n\n    const allRun = queue.every(\n      (transaction: Transaction) => transaction.status === TransactionStatus.RUN\n    );\n\n    // If they're all run (and not sent), we can send them.  Else, we must wait.\n    if (allRun) {\n      repoSendTransactionQueue(repo, treeGetPath(node), queue);\n    }\n  } else if (treeHasChildren(node)) {\n    treeForEachChild(node, childNode => {\n      repoSendReadyTransactions(repo, childNode);\n    });\n  }\n}\n\n/**\n * Given a list of run transactions, send them to the server and then handle\n * the result (success or failure).\n *\n * @param path - The location of the queue.\n * @param queue - Queue of transactions under the specified location.\n */\nfunction repoSendTransactionQueue(\n  repo: Repo,\n  path: Path,\n  queue: Transaction[]\n): void {\n  // Mark transactions as sent and increment retry count!\n  const setsToIgnore = queue.map(txn => {\n    return txn.currentWriteId;\n  });\n  const latestState = repoGetLatestState(repo, path, setsToIgnore);\n  let snapToSend = latestState;\n  const latestHash = latestState.hash();\n  for (let i = 0; i < queue.length; i++) {\n    const txn = queue[i];\n    assert(\n      txn.status === TransactionStatus.RUN,\n      'tryToSendTransactionQueue_: items in queue should all be run.'\n    );\n    txn.status = TransactionStatus.SENT;\n    txn.retryCount++;\n    const relativePath = newRelativePath(path, txn.path);\n    // If we've gotten to this point, the output snapshot must be defined.\n    snapToSend = snapToSend.updateChild(\n      relativePath /** @type {!Node} */,\n      txn.currentOutputSnapshotRaw\n    );\n  }\n\n  const dataToSend = snapToSend.val(true);\n  const pathToSend = path;\n\n  // Send the put.\n  repo.server_.put(\n    pathToSend.toString(),\n    dataToSend,\n    (status: string) => {\n      repoLog(repo, 'transaction put response', {\n        path: pathToSend.toString(),\n        status\n      });\n\n      let events: Event[] = [];\n      if (status === 'ok') {\n        // Queue up the callbacks and fire them after cleaning up all of our\n        // transaction state, since the callback could trigger more\n        // transactions or sets.\n        const callbacks = [];\n        for (let i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.COMPLETED;\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId)\n          );\n          if (queue[i].onComplete) {\n            // We never unset the output snapshot, and given that this\n            // transaction is complete, it should be set\n            callbacks.push(() =>\n              queue[i].onComplete(\n                null,\n                true,\n                queue[i].currentOutputSnapshotResolved\n              )\n            );\n          }\n          queue[i].unwatcher();\n        }\n\n        // Now remove the completed transactions.\n        repoPruneCompletedTransactionsBelowNode(\n          repo,\n          treeSubTree(repo.transactionQueueTree_, path)\n        );\n        // There may be pending transactions that we can now send.\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n        // Finally, trigger onComplete callbacks.\n        for (let i = 0; i < callbacks.length; i++) {\n          exceptionGuard(callbacks[i]);\n        }\n      } else {\n        // transactions are no longer sent.  Update their status appropriately.\n        if (status === 'datastale') {\n          for (let i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n              queue[i].status = TransactionStatus.NEEDS_ABORT;\n            } else {\n              queue[i].status = TransactionStatus.RUN;\n            }\n          }\n        } else {\n          warn(\n            'transaction at ' + pathToSend.toString() + ' failed: ' + status\n          );\n          for (let i = 0; i < queue.length; i++) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n            queue[i].abortReason = status;\n          }\n        }\n\n        repoRerunTransactions(repo, path);\n      }\n    },\n    latestHash\n  );\n}\n\n/**\n * Finds all transactions dependent on the data at changedPath and reruns them.\n *\n * Should be called any time cached data changes.\n *\n * Return the highest path that was affected by rerunning transactions. This\n * is the path at which events need to be raised for.\n *\n * @param changedPath - The path in mergedData that changed.\n * @returns The rootmost path that was affected by rerunning transactions.\n */\nfunction repoRerunTransactions(repo: Repo, changedPath: Path): Path {\n  const rootMostTransactionNode = repoGetAncestorTransactionNode(\n    repo,\n    changedPath\n  );\n  const path = treeGetPath(rootMostTransactionNode);\n\n  const queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\n  repoRerunTransactionQueue(repo, queue, path);\n\n  return path;\n}\n\n/**\n * Does all the work of rerunning transactions (as well as cleans up aborted\n * transactions and whatnot).\n *\n * @param queue - The queue of transactions to run.\n * @param path - The path the queue is for.\n */\nfunction repoRerunTransactionQueue(\n  repo: Repo,\n  queue: Transaction[],\n  path: Path\n): void {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  }\n\n  // Queue up the callbacks and fire them after cleaning up all of our\n  // transaction state, since the callback could trigger more transactions or\n  // sets.\n  const callbacks = [];\n  let events: Event[] = [];\n  // Ignore all of the sets we're going to re-run.\n  const txnsToRerun = queue.filter(q => {\n    return q.status === TransactionStatus.RUN;\n  });\n  const setsToIgnore = txnsToRerun.map(q => {\n    return q.currentWriteId;\n  });\n  for (let i = 0; i < queue.length; i++) {\n    const transaction = queue[i];\n    const relativePath = newRelativePath(path, transaction.path);\n    let abortTransaction = false,\n      abortReason;\n    assert(\n      relativePath !== null,\n      'rerunTransactionsUnderNode_: relativePath should not be null.'\n    );\n\n    if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(\n        syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          transaction.currentWriteId,\n          true\n        )\n      );\n    } else if (transaction.status === TransactionStatus.RUN) {\n      if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            transaction.currentWriteId,\n            true\n          )\n        );\n      } else {\n        // This code reruns a transaction\n        const currentNode = repoGetLatestState(\n          repo,\n          transaction.path,\n          setsToIgnore\n        );\n        transaction.currentInputSnapshot = currentNode;\n        const newData = queue[i].update(currentNode.val());\n        if (newData !== undefined) {\n          validateFirebaseData(\n            'transaction failed: Data returned ',\n            newData,\n            transaction.path\n          );\n          let newDataNode = nodeFromJSON(newData);\n          const hasExplicitPriority =\n            typeof newData === 'object' &&\n            newData != null &&\n            contains(newData, '.priority');\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          const oldWriteId = transaction.currentWriteId;\n          const serverValues = repoGenerateServerValues(repo);\n          const newNodeResolved = resolveDeferredValueSnapshot(\n            newDataNode,\n            currentNode,\n            serverValues\n          );\n\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = repoGetNextWriteId(repo);\n          // Mutates setsToIgnore in place\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(\n            syncTreeApplyUserOverwrite(\n              repo.serverSyncTree_,\n              transaction.path,\n              newNodeResolved,\n              transaction.currentWriteId,\n              transaction.applyLocally\n            )\n          );\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true)\n          );\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(\n            syncTreeAckUserWrite(\n              repo.serverSyncTree_,\n              transaction.currentWriteId,\n              true\n            )\n          );\n        }\n      }\n    }\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    events = [];\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = TransactionStatus.COMPLETED;\n\n      // Removing a listener can trigger pruning which can muck with\n      // mergedData/visibleData (as it prunes data). So defer the unwatcher\n      // until we're done.\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          callbacks.push(() =>\n            queue[i].onComplete(null, false, queue[i].currentInputSnapshot)\n          );\n        } else {\n          callbacks.push(() =>\n            queue[i].onComplete(new Error(abortReason), false, null)\n          );\n        }\n      }\n    }\n  }\n\n  // Clean up completed transactions.\n  repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\n\n  // Now fire callbacks, now that we're in a good, known state.\n  for (let i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  }\n\n  // Try to send the transaction result to the server.\n  repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n}\n\n/**\n * Returns the rootmost ancestor node of the specified path that has a pending\n * transaction on it, or just returns the node for the given path if there are\n * no pending transactions on any ancestor.\n *\n * @param path - The location to start at.\n * @returns The rootmost node with a transaction.\n */\nfunction repoGetAncestorTransactionNode(\n  repo: Repo,\n  path: Path\n): Tree<Transaction[]> {\n  let front;\n\n  // Start at the root and walk deeper into the tree towards path until we\n  // find a node with pending transactions.\n  let transactionNode = repo.transactionQueueTree_;\n  front = pathGetFront(path);\n  while (front !== null && treeGetValue(transactionNode) === undefined) {\n    transactionNode = treeSubTree(transactionNode, front);\n    path = pathPopFront(path);\n    front = pathGetFront(path);\n  }\n\n  return transactionNode;\n}\n\n/**\n * Builds the queue of all transactions at or below the specified\n * transactionNode.\n *\n * @param transactionNode\n * @returns The generated queue.\n */\nfunction repoBuildTransactionQueue(\n  repo: Repo,\n  transactionNode: Tree<Transaction[]>\n): Transaction[] {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  const transactionQueue: Transaction[] = [];\n  repoAggregateTransactionQueuesForNode(\n    repo,\n    transactionNode,\n    transactionQueue\n  );\n\n  // Sort them by the order the transactions were created.\n  transactionQueue.sort((a, b) => a.order - b.order);\n\n  return transactionQueue;\n}\n\nfunction repoAggregateTransactionQueuesForNode(\n  repo: Repo,\n  node: Tree<Transaction[]>,\n  queue: Transaction[]\n): void {\n  const nodeQueue = treeGetValue(node);\n  if (nodeQueue) {\n    for (let i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  treeForEachChild(node, child => {\n    repoAggregateTransactionQueuesForNode(repo, child, queue);\n  });\n}\n\n/**\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\n */\nfunction repoPruneCompletedTransactionsBelowNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    let to = 0;\n    for (let from = 0; from < queue.length; from++) {\n      if (queue[from].status !== TransactionStatus.COMPLETED) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n    queue.length = to;\n    treeSetValue(node, queue.length > 0 ? queue : undefined);\n  }\n\n  treeForEachChild(node, childNode => {\n    repoPruneCompletedTransactionsBelowNode(repo, childNode);\n  });\n}\n\n/**\n * Aborts all transactions on ancestors or descendants of the specified path.\n * Called when doing a set() or update() since we consider them incompatible\n * with transactions.\n *\n * @param path - Path for which we want to abort related transactions.\n */\nfunction repoAbortTransactions(repo: Repo, path: Path): Path {\n  const affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\n\n  const transactionNode = treeSubTree(repo.transactionQueueTree_, path);\n\n  treeForEachAncestor(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  repoAbortTransactionsOnNode(repo, transactionNode);\n\n  treeForEachDescendant(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  return affectedPath;\n}\n\n/**\n * Abort transactions stored in this transaction queue node.\n *\n * @param node - Node to abort transactions for.\n */\nfunction repoAbortTransactionsOnNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions\n    // or sets.\n    const callbacks = [];\n\n    // Go through queue.  Any already-sent transactions must be marked for\n    // abort, while the unsent ones can be immediately aborted and removed.\n    let events: Event[] = [];\n    let lastSent = -1;\n    for (let i = 0; i < queue.length; i++) {\n      if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n        // Already marked.  No action needed.\n      } else if (queue[i].status === TransactionStatus.SENT) {\n        assert(\n          lastSent === i - 1,\n          'All SENT items should be at beginning of queue.'\n        );\n        lastSent = i;\n        // Mark transaction for abort when it comes back.\n        queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n        queue[i].abortReason = 'set';\n      } else {\n        assert(\n          queue[i].status === TransactionStatus.RUN,\n          'Unexpected transaction status in abort'\n        );\n        // We can abort it immediately.\n        queue[i].unwatcher();\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            queue[i].currentWriteId,\n            true\n          )\n        );\n        if (queue[i].onComplete) {\n          callbacks.push(\n            queue[i].onComplete.bind(null, new Error('set'), false, null)\n          );\n        }\n      }\n    }\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      treeSetValue(node, undefined);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    }\n\n    // Now fire the callbacks.\n    eventQueueRaiseEventsForChangedPath(\n      repo.eventQueue_,\n      treeGetPath(node),\n      events\n    );\n    for (let i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../../RepoInfo';\nimport { Path } from '../Path';\nimport { warnIfPageIsSecure, warn, fatal } from '../util';\n\nfunction decodePath(pathString: string): string {\n  let pathStringDecoded = '';\n  const pieces = pathString.split('/');\n  for (let i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      let piece = pieces[i];\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n      pathStringDecoded += '/' + piece;\n    }\n  }\n  return pathStringDecoded;\n}\n\n/**\n * @returns key value hash\n */\nfunction decodeQuery(queryString: string): { [key: string]: string } {\n  const results = {};\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n  for (const segment of queryString.split('&')) {\n    if (segment.length === 0) {\n      continue;\n    }\n    const kv = segment.split('=');\n    if (kv.length === 2) {\n      results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n    } else {\n      warn(`Invalid query segment '${segment}' in query '${queryString}'`);\n    }\n  }\n  return results;\n}\n\nexport const parseRepoInfo = function (\n  dataURL: string,\n  nodeAdmin: boolean\n): { repoInfo: RepoInfo; path: Path } {\n  const parsedUrl = parseDatabaseURL(dataURL),\n    namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(\n      parsedUrl.host +\n        ' is no longer supported. ' +\n        'Please use <YOUR FIREBASE>.firebaseio.com instead'\n    );\n  }\n\n  // Catch common error of uninitialized namespace value.\n  if (\n    (!namespace || namespace === 'undefined') &&\n    parsedUrl.domain !== 'localhost'\n  ) {\n    fatal(\n      'Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com'\n    );\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n\n  return {\n    repoInfo: new RepoInfo(\n      parsedUrl.host,\n      parsedUrl.secure,\n      namespace,\n      nodeAdmin,\n      webSocketOnly,\n      /*persistenceKey=*/ '',\n      /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain\n    ),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nexport const parseDatabaseURL = function (dataURL: string): {\n  host: string;\n  port: number;\n  domain: string;\n  subdomain: string;\n  secure: boolean;\n  scheme: string;\n  pathString: string;\n  namespace: string;\n} {\n  // Default to empty strings in the event of a malformed string.\n  let host = '',\n    domain = '',\n    subdomain = '',\n    pathString = '',\n    namespace = '';\n\n  // Always default to SSL, unless otherwise specified.\n  let secure = true,\n    scheme = 'https',\n    port = 443;\n\n  // Don't do any validation here. The caller is responsible for validating the result of parsing.\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    let colonInd = dataURL.indexOf('//');\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    }\n\n    // Parse host, path, and query string.\n    let slashInd = dataURL.indexOf('/');\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n    let questionMarkInd = dataURL.indexOf('?');\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n    const queryParams = decodeQuery(\n      dataURL.substring(Math.min(dataURL.length, questionMarkInd))\n    );\n\n    // If we have a port, use scheme for determining if it's secure.\n    colonInd = host.indexOf(':');\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    const hostWithoutPort = host.slice(0, colonInd);\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      const dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1);\n      // Normalize namespaces to lowercase to share storage / connection.\n      namespace = subdomain;\n    }\n    // Always treat the value of the `ns` as the namespace name if it is present.\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host,\n    port,\n    domain,\n    subdomain,\n    secure,\n    scheme,\n    pathString,\n    namespace\n  };\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringify } from '@firebase/util';\n\nimport { DataSnapshot as ExpDataSnapshot } from '../../api/Reference_impl';\nimport { Path } from '../util/Path';\n\nimport { EventRegistration } from './EventRegistration';\n\n/**\n * Encapsulates the data needed to raise an event\n * @interface\n */\nexport interface Event {\n  getPath(): Path;\n\n  getEventType(): string;\n\n  getEventRunner(): () => void;\n\n  toString(): string;\n}\n\n/**\n * One of the following strings: \"value\", \"child_added\", \"child_changed\",\n * \"child_removed\", or \"child_moved.\"\n */\nexport type EventType =\n  | 'value'\n  | 'child_added'\n  | 'child_changed'\n  | 'child_moved'\n  | 'child_removed';\n\n/**\n * Encapsulates the data needed to raise an event\n */\nexport class DataEvent implements Event {\n  /**\n   * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\n   * @param eventRegistration - The function to call to with the event data. User provided\n   * @param snapshot - The data backing the event\n   * @param prevName - Optional, the name of the previous child for child_* events.\n   */\n  constructor(\n    public eventType: EventType,\n    public eventRegistration: EventRegistration,\n    public snapshot: ExpDataSnapshot,\n    public prevName?: string | null\n  ) {}\n  getPath(): Path {\n    const ref = this.snapshot.ref;\n    if (this.eventType === 'value') {\n      return ref._path;\n    } else {\n      return ref.parent._path;\n    }\n  }\n  getEventType(): string {\n    return this.eventType;\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return (\n      this.getPath().toString() +\n      ':' +\n      this.eventType +\n      ':' +\n      stringify(this.snapshot.exportVal())\n    );\n  }\n}\n\nexport class CancelEvent implements Event {\n  constructor(\n    public eventRegistration: EventRegistration,\n    public error: Error,\n    public path: Path\n  ) {}\n  getPath(): Path {\n    return this.path;\n  }\n  getEventType(): string {\n    return 'cancel';\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return this.path.toString() + ':cancel';\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { DataSnapshot } from '../../api/Reference_impl';\nimport { Repo } from '../Repo';\nimport { Path } from '../util/Path';\n\nimport { Change } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport { QueryParams } from './QueryParams';\n\n/**\n * A user callback. Callbacks issues from the Legacy SDK maintain references\n * to the original user-issued callbacks, which allows equality\n * comparison by reference even though this callbacks are wrapped before\n * they can be passed to the firebase@exp SDK.\n *\n * @internal\n */\nexport interface UserCallback {\n  (dataSnapshot: DataSnapshot, previousChildName?: string | null): unknown;\n  userCallback?: unknown;\n  context?: object | null;\n}\n\n/**\n * A wrapper class that converts events from the database@exp SDK to the legacy\n * Database SDK. Events are not converted directly as event registration relies\n * on reference comparison of the original user callback (see `matches()`) and\n * relies on equality of the legacy SDK's `context` object.\n */\nexport class CallbackContext {\n  constructor(\n    private readonly snapshotCallback: UserCallback,\n    private readonly cancelCallback?: (error: Error) => unknown\n  ) {}\n\n  onValue(\n    expDataSnapshot: DataSnapshot,\n    previousChildName?: string | null\n  ): void {\n    this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\n  }\n\n  onCancel(error: Error): void {\n    assert(\n      this.hasCancelCallback,\n      'Raising a cancel event on a listener with no cancel callback'\n    );\n    return this.cancelCallback.call(null, error);\n  }\n\n  get hasCancelCallback(): boolean {\n    return !!this.cancelCallback;\n  }\n\n  matches(other: CallbackContext): boolean {\n    return (\n      this.snapshotCallback === other.snapshotCallback ||\n      (this.snapshotCallback.userCallback !== undefined &&\n        this.snapshotCallback.userCallback ===\n          other.snapshotCallback.userCallback &&\n        this.snapshotCallback.context === other.snapshotCallback.context)\n    );\n  }\n}\n\nexport interface QueryContext {\n  readonly _queryIdentifier: string;\n  readonly _queryObject: object;\n  readonly _repo: Repo;\n  readonly _path: Path;\n  readonly _queryParams: QueryParams;\n}\n\n/**\n * An EventRegistration is basically an event type ('value', 'child_added', etc.) and a callback\n * to be notified of that type of event.\n *\n * That said, it can also contain a cancel callback to be notified if the event is canceled.  And\n * currently, this code is organized around the idea that you would register multiple child_ callbacks\n * together, as a single EventRegistration.  Though currently we don't do that.\n */\nexport interface EventRegistration {\n  /**\n   * True if this container has a callback to trigger for this event type\n   */\n  respondsTo(eventType: string): boolean;\n\n  createEvent(change: Change, query: QueryContext): Event;\n\n  /**\n   * Given event data, return a function to trigger the user's callback\n   */\n  getEventRunner(eventData: Event): () => void;\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null;\n\n  matches(other: EventRegistration): boolean;\n\n  /**\n   * False basically means this is a \"dummy\" callback container being used as a sentinel\n   * to remove all callback containers of a particular type.  (e.g. if the user does\n   * ref.off('value') without specifying a specific callback).\n   *\n   * (TODO: Rework this, since it's hacky)\n   *\n   */\n  hasAnyCallback(): boolean;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoOnDisconnectCancel,\n  repoOnDisconnectSet,\n  repoOnDisconnectSetWithPriority,\n  repoOnDisconnectUpdate\n} from '../core/Repo';\nimport { Path } from '../core/util/Path';\nimport {\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validatePriority,\n  validateWritablePath\n} from '../core/util/validation';\n\n/**\n * The `onDisconnect` class allows you to write or clear data when your client\n * disconnects from the Database server. These updates occur whether your\n * client disconnects cleanly or not, so you can rely on them to clean up data\n * even if a connection is dropped or a client crashes.\n *\n * The `onDisconnect` class is most commonly used to manage presence in\n * applications where it is useful to detect how many clients are connected and\n * when other clients disconnect. See\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information.\n *\n * To avoid problems when a connection is dropped before the requests can be\n * transferred to the Database server, these functions should be called before\n * writing any data.\n *\n * Note that `onDisconnect` operations are only triggered once. If you want an\n * operation to occur each time a disconnect occurs, you'll need to re-establish\n * the `onDisconnect` operations each time you reconnect.\n */\nexport class OnDisconnect {\n  /** @hideconstructor */\n  constructor(private _repo: Repo, private _path: Path) {}\n\n  /**\n   * Cancels all previously queued `onDisconnect()` set or update events for this\n   * location and all children.\n   *\n   * If a write has been queued for this location via a `set()` or `update()` at a\n   * parent location, the write at this location will be canceled, though writes\n   * to sibling locations will still occur.\n   *\n   * @returns Resolves when synchronization to the server is complete.\n   */\n  cancel(): Promise<void> {\n    const deferred = new Deferred<void>();\n    repoOnDisconnectCancel(\n      this._repo,\n      this._path,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is deleted when the client is disconnected\n   * (due to closing the browser, navigating to a new page, or network issues).\n   *\n   * @returns Resolves when synchronization to the server is complete.\n   */\n  remove(): Promise<void> {\n    validateWritablePath('OnDisconnect.remove', this._path);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSet(\n      this._repo,\n      this._path,\n      null,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is set to the specified value when the\n   * client is disconnected (due to closing the browser, navigating to a new page,\n   * or network issues).\n   *\n   * `set()` is especially useful for implementing \"presence\" systems, where a\n   * value should be changed or cleared when a user disconnects so that they\n   * appear \"offline\" to other users. See\n   * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n   * for more information.\n   *\n   * Note that `onDisconnect` operations are only triggered once. If you want an\n   * operation to occur each time a disconnect occurs, you'll need to re-establish\n   * the `onDisconnect` operations each time.\n   *\n   * @param value - The value to be written to this location on disconnect (can\n   * be an object, array, string, number, boolean, or null).\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  set(value: unknown): Promise<void> {\n    validateWritablePath('OnDisconnect.set', this._path);\n    validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSet(\n      this._repo,\n      this._path,\n      value,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is set to the specified value and priority\n   * when the client is disconnected (due to closing the browser, navigating to a\n   * new page, or network issues).\n   *\n   * @param value - The value to be written to this location on disconnect (can\n   * be an object, array, string, number, boolean, or null).\n   * @param priority - The priority to be written (string, number, or null).\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  setWithPriority(\n    value: unknown,\n    priority: number | string | null\n  ): Promise<void> {\n    validateWritablePath('OnDisconnect.setWithPriority', this._path);\n    validateFirebaseDataArg(\n      'OnDisconnect.setWithPriority',\n      value,\n      this._path,\n      false\n    );\n    validatePriority('OnDisconnect.setWithPriority', priority, false);\n\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSetWithPriority(\n      this._repo,\n      this._path,\n      value,\n      priority,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Writes multiple values at this location when the client is disconnected (due\n   * to closing the browser, navigating to a new page, or network issues).\n   *\n   * The `values` argument contains multiple property-value pairs that will be\n   * written to the Database together. Each child property can either be a simple\n   * property (for example, \"name\") or a relative path (for example, \"name/first\")\n   * from the current location to the data to update.\n   *\n   * As opposed to the `set()` method, `update()` can be use to selectively update\n   * only the referenced properties at the current location (instead of replacing\n   * all the child properties at the current location).\n   *\n   * @param values - Object containing multiple values.\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  update(values: object): Promise<void> {\n    validateWritablePath('OnDisconnect.update', this._path);\n    validateFirebaseMergeDataArg(\n      'OnDisconnect.update',\n      values,\n      this._path,\n      false\n    );\n    const deferred = new Deferred<void>();\n    repoOnDisconnectUpdate(\n      this._repo,\n      this._path,\n      values as Record<string, unknown>,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, getModularInstance, Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoAddEventCallbackForQuery,\n  repoGetValue,\n  repoRemoveEventCallbackForQuery,\n  repoServerTime,\n  repoSetWithPriority,\n  repoUpdate\n} from '../core/Repo';\nimport { ChildrenNode } from '../core/snap/ChildrenNode';\nimport { Index } from '../core/snap/indexes/Index';\nimport { KEY_INDEX } from '../core/snap/indexes/KeyIndex';\nimport { PathIndex } from '../core/snap/indexes/PathIndex';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../core/snap/indexes/ValueIndex';\nimport { Node } from '../core/snap/Node';\nimport { syncPointSetReferenceConstructor } from '../core/SyncPoint';\nimport { syncTreeSetReferenceConstructor } from '../core/SyncTree';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { nextPushId } from '../core/util/NextPushId';\nimport {\n  Path,\n  pathChild,\n  pathEquals,\n  pathGetBack,\n  pathGetFront,\n  pathIsEmpty,\n  pathParent,\n  pathToUrlEncodedString\n} from '../core/util/Path';\nimport {\n  fatal,\n  MAX_NAME,\n  MIN_NAME,\n  ObjectToUniqueKey\n} from '../core/util/util';\nimport {\n  isValidPriority,\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validateKey,\n  validatePathString,\n  validatePriority,\n  validateRootPathString,\n  validateUrl,\n  validateWritablePath\n} from '../core/util/validation';\nimport { Change } from '../core/view/Change';\nimport { CancelEvent, DataEvent, EventType } from '../core/view/Event';\nimport {\n  CallbackContext,\n  EventRegistration,\n  QueryContext,\n  UserCallback\n} from '../core/view/EventRegistration';\nimport {\n  QueryParams,\n  queryParamsEndAt,\n  queryParamsEndBefore,\n  queryParamsGetQueryObject,\n  queryParamsLimitToFirst,\n  queryParamsLimitToLast,\n  queryParamsOrderBy,\n  queryParamsStartAfter,\n  queryParamsStartAt\n} from '../core/view/QueryParams';\n\nimport { Database } from './Database';\nimport { OnDisconnect } from './OnDisconnect';\nimport {\n  ListenOptions,\n  Query as Query,\n  DatabaseReference,\n  Unsubscribe,\n  ThenableReference\n} from './Reference';\n\n/**\n * @internal\n */\nexport class QueryImpl implements Query, QueryContext {\n  /**\n   * @hideconstructor\n   */\n  constructor(\n    readonly _repo: Repo,\n    readonly _path: Path,\n    readonly _queryParams: QueryParams,\n    readonly _orderByCalled: boolean\n  ) {}\n\n  get key(): string | null {\n    if (pathIsEmpty(this._path)) {\n      return null;\n    } else {\n      return pathGetBack(this._path);\n    }\n  }\n\n  get ref(): DatabaseReference {\n    return new ReferenceImpl(this._repo, this._path);\n  }\n\n  get _queryIdentifier(): string {\n    const obj = queryParamsGetQueryObject(this._queryParams);\n    const id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  }\n\n  /**\n   * An object representation of the query parameters used by this Query.\n   */\n  get _queryObject(): object {\n    return queryParamsGetQueryObject(this._queryParams);\n  }\n\n  isEqual(other: QueryImpl | null): boolean {\n    other = getModularInstance(other);\n    if (!(other instanceof QueryImpl)) {\n      return false;\n    }\n\n    const sameRepo = this._repo === other._repo;\n    const samePath = pathEquals(this._path, other._path);\n    const sameQueryIdentifier =\n      this._queryIdentifier === other._queryIdentifier;\n\n    return sameRepo && samePath && sameQueryIdentifier;\n  }\n\n  toJSON(): string {\n    return this.toString();\n  }\n\n  toString(): string {\n    return this._repo.toString() + pathToUrlEncodedString(this._path);\n  }\n}\n\n/**\n * Validates that no other order by call has been made\n */\nfunction validateNoPreviousOrderByCall(query: QueryImpl, fnName: string) {\n  if (query._orderByCalled === true) {\n    throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n  }\n}\n\n/**\n * Validates start/end values for queries.\n */\nfunction validateQueryEndpoints(params: QueryParams) {\n  let startNode = null;\n  let endNode = null;\n  if (params.hasStart()) {\n    startNode = params.getIndexStartValue();\n  }\n  if (params.hasEnd()) {\n    endNode = params.getIndexEndValue();\n  }\n\n  if (params.getIndex() === KEY_INDEX) {\n    const tooManyArgsError =\n      'Query: When ordering by key, you may only pass one argument to ' +\n      'startAt(), endAt(), or equalTo().';\n    const wrongArgTypeError =\n      'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\n      'endAt(), endBefore(), or equalTo() must be a string.';\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      if (startName !== MIN_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof startNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      if (endName !== MAX_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof endNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n  } else if (params.getIndex() === PRIORITY_INDEX) {\n    if (\n      (startNode != null && !isValidPriority(startNode)) ||\n      (endNode != null && !isValidPriority(endNode))\n    ) {\n      throw new Error(\n        'Query: When ordering by priority, the first argument passed to startAt(), ' +\n          'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\n          '(null, a number, or a string).'\n      );\n    }\n  } else {\n    assert(\n      params.getIndex() instanceof PathIndex ||\n        params.getIndex() === VALUE_INDEX,\n      'unknown index type.'\n    );\n    if (\n      (startNode != null && typeof startNode === 'object') ||\n      (endNode != null && typeof endNode === 'object')\n    ) {\n      throw new Error(\n        'Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\n          'equalTo() cannot be an object.'\n      );\n    }\n  }\n}\n\n/**\n * Validates that limit* has been called with the correct combination of parameters\n */\nfunction validateLimit(params: QueryParams) {\n  if (\n    params.hasStart() &&\n    params.hasEnd() &&\n    params.hasLimit() &&\n    !params.hasAnchoredLimit()\n  ) {\n    throw new Error(\n      \"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\n        'limitToFirst() or limitToLast() instead.'\n    );\n  }\n}\n\n/**\n * @internal\n */\nexport class ReferenceImpl extends QueryImpl implements DatabaseReference {\n  /** @hideconstructor */\n  constructor(repo: Repo, path: Path) {\n    super(repo, path, new QueryParams(), false);\n  }\n\n  get parent(): ReferenceImpl | null {\n    const parentPath = pathParent(this._path);\n    return parentPath === null\n      ? null\n      : new ReferenceImpl(this._repo, parentPath);\n  }\n\n  get root(): ReferenceImpl {\n    let ref: ReferenceImpl = this;\n    while (ref.parent !== null) {\n      ref = ref.parent;\n    }\n    return ref;\n  }\n}\n\n/**\n * A `DataSnapshot` contains data from a Database location.\n *\n * Any time you read data from the Database, you receive the data as a\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\n * JavaScript object by calling the `val()` method. Alternatively, you can\n * traverse into the snapshot by calling `child()` to return child snapshots\n * (which you could then call `val()` on).\n *\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\n * a Database location. It cannot be modified and will never change (to modify\n * data, you always call the `set()` method on a `Reference` directly).\n */\nexport class DataSnapshot {\n  /**\n   * @param _node - A SnapshotNode to wrap.\n   * @param ref - The location this snapshot came from.\n   * @param _index - The iteration order for this snapshot\n   * @hideconstructor\n   */\n  constructor(\n    readonly _node: Node,\n    /**\n     * The location of this DataSnapshot.\n     */\n    readonly ref: DatabaseReference,\n    readonly _index: Index\n  ) {}\n\n  /**\n   * Gets the priority value of the data in this `DataSnapshot`.\n   *\n   * Applications need not use priority but can order collections by\n   * ordinary properties (see\n   * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\n   * ).\n   */\n  get priority(): string | number | null {\n    // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n    return this._node.getPriority().val() as string | number | null;\n  }\n\n  /**\n   * The key (last part of the path) of the location of this `DataSnapshot`.\n   *\n   * The last token in a Database location is considered its key. For example,\n   * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\n   * `DataSnapshot` will return the key for the location that generated it.\n   * However, accessing the key on the root URL of a Database will return\n   * `null`.\n   */\n  get key(): string | null {\n    return this.ref.key;\n  }\n\n  /** Returns the number of child properties of this `DataSnapshot`. */\n  get size(): number {\n    return this._node.numChildren();\n  }\n\n  /**\n   * Gets another `DataSnapshot` for the location at the specified relative path.\n   *\n   * Passing a relative path to the `child()` method of a DataSnapshot returns\n   * another `DataSnapshot` for the location at the specified relative path. The\n   * relative path can either be a simple child name (for example, \"ada\") or a\n   * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\n   * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\n   * whose value is `null`) is returned.\n   *\n   * @param path - A relative path to the location of child data.\n   */\n  child(path: string): DataSnapshot {\n    const childPath = new Path(path);\n    const childRef = child(this.ref, path);\n    return new DataSnapshot(\n      this._node.getChild(childPath),\n      childRef,\n      PRIORITY_INDEX\n    );\n  }\n  /**\n   * Returns true if this `DataSnapshot` contains any data. It is slightly more\n   * efficient than using `snapshot.val() !== null`.\n   */\n  exists(): boolean {\n    return !this._node.isEmpty();\n  }\n\n  /**\n   * Exports the entire contents of the DataSnapshot as a JavaScript object.\n   *\n   * The `exportVal()` method is similar to `val()`, except priority information\n   * is included (if available), making it suitable for backing up your data.\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exportVal(): any {\n    return this._node.val(true);\n  }\n\n  /**\n   * Enumerates the top-level children in the `DataSnapshot`.\n   *\n   * Because of the way JavaScript objects work, the ordering of data in the\n   * JavaScript object returned by `val()` is not guaranteed to match the\n   * ordering on the server nor the ordering of `onChildAdded()` events. That is\n   * where `forEach()` comes in handy. It guarantees the children of a\n   * `DataSnapshot` will be iterated in their query order.\n   *\n   * If no explicit `orderBy*()` method is used, results are returned\n   * ordered by key (unless priorities are used, in which case, results are\n   * returned by priority).\n   *\n   * @param action - A function that will be called for each child DataSnapshot.\n   * The callback can return true to cancel further enumeration.\n   * @returns true if enumeration was canceled due to your callback returning\n   * true.\n   */\n  forEach(action: (child: DataSnapshot) => boolean | void): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    }\n\n    const childrenNode = this._node as ChildrenNode;\n    // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n    return !!childrenNode.forEachChild(this._index, (key, node) => {\n      return action(\n        new DataSnapshot(node, child(this.ref, key), PRIORITY_INDEX)\n      );\n    });\n  }\n\n  /**\n   * Returns true if the specified child path has (non-null) data.\n   *\n   * @param path - A relative path to the location of a potential child.\n   * @returns `true` if data exists at the specified child path; else\n   *  `false`.\n   */\n  hasChild(path: string): boolean {\n    const childPath = new Path(path);\n    return !this._node.getChild(childPath).isEmpty();\n  }\n\n  /**\n   * Returns whether or not the `DataSnapshot` has any non-`null` child\n   * properties.\n   *\n   * You can use `hasChildren()` to determine if a `DataSnapshot` has any\n   * children. If it does, you can enumerate them using `forEach()`. If it\n   * doesn't, then either this snapshot contains a primitive value (which can be\n   * retrieved with `val()`) or it is empty (in which case, `val()` will return\n   * `null`).\n   *\n   * @returns true if this snapshot has any children; else false.\n   */\n  hasChildren(): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    } else {\n      return !this._node.isEmpty();\n    }\n  }\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   */\n  toJSON(): object | null {\n    return this.exportVal();\n  }\n\n  /**\n   * Extracts a JavaScript value from a `DataSnapshot`.\n   *\n   * Depending on the data in a `DataSnapshot`, the `val()` method may return a\n   * scalar type (string, number, or boolean), an array, or an object. It may\n   * also return null, indicating that the `DataSnapshot` is empty (contains no\n   * data).\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  val(): any {\n    return this._node.val();\n  }\n}\n/**\n *\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided path. If no path is provided, the `Reference`\n * will point to the root of the Database.\n *\n * @param db - The database instance to obtain a reference for.\n * @param path - Optional path representing the location the returned\n *   `Reference` will point. If not provided, the returned `Reference` will\n *   point to the root of the Database.\n * @returns If a path is provided, a `Reference`\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\n *   root of the Database.\n */\nexport function ref(db: Database, path?: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('ref');\n  return path !== undefined ? child(db._root, path) : db._root;\n}\n\n/**\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided Firebase URL.\n *\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\n * has a different domain than the current `Database` instance.\n *\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\n * and are not applied to the returned `Reference`.\n *\n * @param db - The database instance to obtain a reference for.\n * @param url - The Firebase URL at which the returned `Reference` will\n *   point.\n * @returns A `Reference` pointing to the provided\n *   Firebase URL.\n */\nexport function refFromURL(db: Database, url: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('refFromURL');\n  const parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\n  validateUrl('refFromURL', parsedURL);\n\n  const repoInfo = parsedURL.repoInfo;\n  if (\n    !db._repo.repoInfo_.isCustomHost() &&\n    repoInfo.host !== db._repo.repoInfo_.host\n  ) {\n    fatal(\n      'refFromURL' +\n        ': Host name does not match the current database: ' +\n        '(found ' +\n        repoInfo.host +\n        ' but expected ' +\n        db._repo.repoInfo_.host +\n        ')'\n    );\n  }\n\n  return ref(db, parsedURL.path.toString());\n}\n\n/**\n * Gets a `Reference` for the location at the specified relative path.\n *\n * The relative path can either be a simple child name (for example, \"ada\") or\n * a deeper slash-separated path (for example, \"ada/name/first\").\n *\n * @param parent - The parent location.\n * @param path - A relative path from this location to the desired child\n *   location.\n * @returns The specified child location.\n */\nexport function child(\n  parent: DatabaseReference,\n  path: string\n): DatabaseReference {\n  parent = getModularInstance(parent);\n  if (pathGetFront(parent._path) === null) {\n    validateRootPathString('child', 'path', path, false);\n  } else {\n    validatePathString('child', 'path', path, false);\n  }\n  return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\n}\n\n/**\n * Returns an `OnDisconnect` object - see\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information on how to use it.\n *\n * @param ref - The reference to add OnDisconnect triggers for.\n */\nexport function onDisconnect(ref: DatabaseReference): OnDisconnect {\n  ref = getModularInstance(ref) as ReferenceImpl;\n  return new OnDisconnect(ref._repo, ref._path);\n}\n\nexport interface ThenableReferenceImpl\n  extends ReferenceImpl,\n    Pick<Promise<ReferenceImpl>, 'then' | 'catch'> {}\n\n/**\n * Generates a new child location using a unique key and returns its\n * `Reference`.\n *\n * This is the most common pattern for adding data to a collection of items.\n *\n * If you provide a value to `push()`, the value is written to the\n * generated location. If you don't pass a value, nothing is written to the\n * database and the child remains empty (but you can use the `Reference`\n * elsewhere).\n *\n * The unique keys generated by `push()` are ordered by the current time, so the\n * resulting list of items is chronologically sorted. The keys are also\n * designed to be unguessable (they contain 72 random bits of entropy).\n *\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}\n * </br>See {@link ttps://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}\n *\n * @param parent - The parent location.\n * @param value - Optional value to be written at the generated location.\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\n * but can be used immediately as the `Reference` to the child location.\n */\nexport function push(\n  parent: DatabaseReference,\n  value?: unknown\n): ThenableReference {\n  parent = getModularInstance(parent);\n  validateWritablePath('push', parent._path);\n  validateFirebaseDataArg('push', value, parent._path, true);\n  const now = repoServerTime(parent._repo);\n  const name = nextPushId(now);\n\n  // push() returns a ThennableReference whose promise is fulfilled with a\n  // regular Reference. We use child() to create handles to two different\n  // references. The first is turned into a ThennableReference below by adding\n  // then() and catch() methods and is used as the return value of push(). The\n  // second remains a regular Reference and is used as the fulfilled value of\n  // the first ThennableReference.\n  const thennablePushRef: Partial<ThenableReferenceImpl> = child(\n    parent,\n    name\n  ) as ReferenceImpl;\n  const pushRef = child(parent, name) as ReferenceImpl;\n\n  let promise: Promise<ReferenceImpl>;\n  if (value != null) {\n    promise = set(pushRef, value).then(() => pushRef);\n  } else {\n    promise = Promise.resolve(pushRef);\n  }\n\n  thennablePushRef.then = promise.then.bind(promise);\n  thennablePushRef.catch = promise.then.bind(promise, undefined);\n  return thennablePushRef as ThenableReferenceImpl;\n}\n\n/**\n * Removes the data at this Database location.\n *\n * Any data at child locations will also be deleted.\n *\n * The effect of the remove will be visible immediately and the corresponding\n * event 'value' will be triggered. Synchronization of the remove to the\n * Firebase servers will also be started, and the returned Promise will resolve\n * when complete. If provided, the onComplete callback will be called\n * asynchronously after synchronization has finished.\n *\n * @param ref - The location to remove.\n * @returns Resolves when remove on server is complete.\n */\nexport function remove(ref: DatabaseReference): Promise<void> {\n  validateWritablePath('remove', ref._path);\n  return set(ref, null);\n}\n\n/**\n * Writes data to this Database location.\n *\n * This will overwrite any data at this location and all child locations.\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\n * all data at this location and all child locations will be deleted.\n *\n * `set()` will remove any priority stored at this location, so if priority is\n * meant to be preserved, you need to use `setWithPriority()` instead.\n *\n * Note that modifying data with `set()` will cancel any pending transactions\n * at that location, so extreme care should be taken if mixing `set()` and\n * `transaction()` to modify the same data.\n *\n * A single `set()` will generate a single \"value\" event at the location where\n * the `set()` was performed.\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function set(ref: DatabaseReference, value: unknown): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('set', ref._path);\n  validateFirebaseDataArg('set', value, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    /*priority=*/ null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Sets a priority for the data at this Database location.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setPriority(\n  ref: DatabaseReference,\n  priority: string | number | null\n): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('setPriority', ref._path);\n  validatePriority('setPriority', priority, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    pathChild(ref._path, '.priority'),\n    priority,\n    null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes data the Database location. Like `set()` but also specifies the\n * priority for that data.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setWithPriority(\n  ref: DatabaseReference,\n  value: unknown,\n  priority: string | number | null\n): Promise<void> {\n  validateWritablePath('setWithPriority', ref._path);\n  validateFirebaseDataArg('setWithPriority', value, ref._path, false);\n  validatePriority('setWithPriority', priority, false);\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    priority,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes multiple values to the Database at once.\n *\n * The `values` argument contains multiple property-value pairs that will be\n * written to the Database together. Each child property can either be a simple\n * property (for example, \"name\") or a relative path (for example,\n * \"name/first\") from the current location to the data to update.\n *\n * As opposed to the `set()` method, `update()` can be use to selectively update\n * only the referenced properties at the current location (instead of replacing\n * all the child properties at the current location).\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * A single `update()` will generate a single \"value\" event at the location\n * where the `update()` was performed, regardless of how many children were\n * modified.\n *\n * Note that modifying data with `update()` will cancel any pending\n * transactions at that location, so extreme care should be taken if mixing\n * `update()` and `transaction()` to modify the same data.\n *\n * Passing `null` to `update()` will remove the data at this location.\n *\n * See\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\n *\n * @param ref - The location to write to.\n * @param values - Object containing multiple values.\n * @returns Resolves when update on server is complete.\n */\nexport function update(ref: DatabaseReference, values: object): Promise<void> {\n  validateFirebaseMergeDataArg('update', values, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoUpdate(\n    ref._repo,\n    ref._path,\n    values as Record<string, unknown>,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Gets the most up-to-date result for this query.\n *\n * @param query - The query to run.\n * @returns A `Promise` which resolves to the resulting DataSnapshot if a value is\n * available, or rejects if the client is unable to return a value (e.g., if the\n * server is unreachable and there is nothing cached).\n */\nexport function get(query: Query): Promise<DataSnapshot> {\n  query = getModularInstance(query) as QueryImpl;\n  return repoGetValue(query._repo, query).then(node => {\n    return new DataSnapshot(\n      node,\n      new ReferenceImpl(query._repo, query._path),\n      query._queryParams.getIndex()\n    );\n  });\n}\n\n/**\n * Represents registration for 'value' events.\n */\nexport class ValueEventRegistration implements EventRegistration {\n  constructor(private callbackContext: CallbackContext) {}\n\n  respondsTo(eventType: string): boolean {\n    return eventType === 'value';\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      'value',\n      this,\n      new DataSnapshot(\n        change.snapshotNode,\n        new ReferenceImpl(query._repo, query._path),\n        index\n      )\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue((eventData as DataEvent).snapshot, null);\n    }\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callbackContext || !this.callbackContext) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callbackContext.matches(this.callbackContext);\n    }\n  }\n\n  hasAnyCallback(): boolean {\n    return this.callbackContext !== null;\n  }\n}\n\n/**\n * Represents the registration of a child_x event.\n */\nexport class ChildEventRegistration implements EventRegistration {\n  constructor(\n    private eventType: string,\n    private callbackContext: CallbackContext | null\n  ) {}\n\n  respondsTo(eventType: string): boolean {\n    let eventToCheck =\n      eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck =\n      eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return this.eventType === eventToCheck;\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    assert(change.childName != null, 'Child events should have a childName.');\n    const childRef = child(\n      new ReferenceImpl(query._repo, query._path),\n      change.childName\n    );\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      change.type as EventType,\n      this,\n      new DataSnapshot(change.snapshotNode, childRef, index),\n      change.prevName\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue(\n          (eventData as DataEvent).snapshot,\n          (eventData as DataEvent).prevName\n        );\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (other instanceof ChildEventRegistration) {\n      return (\n        this.eventType === other.eventType &&\n        (!this.callbackContext ||\n          !other.callbackContext ||\n          this.callbackContext.matches(other.callbackContext))\n      );\n    }\n\n    return false;\n  }\n\n  hasAnyCallback(): boolean {\n    return !!this.callbackContext;\n  }\n}\n\nfunction addEventListener(\n  query: Query,\n  eventType: EventType,\n  callback: UserCallback,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n) {\n  let cancelCallback: ((error: Error) => unknown) | undefined;\n  if (typeof cancelCallbackOrListenOptions === 'object') {\n    cancelCallback = undefined;\n    options = cancelCallbackOrListenOptions;\n  }\n  if (typeof cancelCallbackOrListenOptions === 'function') {\n    cancelCallback = cancelCallbackOrListenOptions;\n  }\n\n  if (options && options.onlyOnce) {\n    const userCallback = callback;\n    const onceCallback: UserCallback = (dataSnapshot, previousChildName) => {\n      repoRemoveEventCallbackForQuery(query._repo, query, container);\n      userCallback(dataSnapshot, previousChildName);\n    };\n    onceCallback.userCallback = callback.userCallback;\n    onceCallback.context = callback.context;\n    callback = onceCallback;\n  }\n\n  const callbackContext = new CallbackContext(\n    callback,\n    cancelCallback || undefined\n  );\n  const container =\n    eventType === 'value'\n      ? new ValueEventRegistration(callbackContext)\n      : new ChildEventRegistration(eventType, callbackContext);\n  repoAddEventCallbackForQuery(query._repo, query, container);\n  return () => repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'value',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_added',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_changed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_moved',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_removed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\nexport { EventType };\n\n/**\n * Detaches a callback previously attached with `on()`.\n *\n * Detach a callback previously attached with `on()`. Note that if `on()` was\n * called multiple times with the same eventType and callback, the callback\n * will be called multiple times for each event, and `off()` must be called\n * multiple times to remove the callback. Calling `off()` on a parent listener\n * will not automatically remove listeners registered on child nodes, `off()`\n * must also be called on any child listeners to remove the callback.\n *\n * If a callback is not specified, all callbacks for the specified eventType\n * will be removed. Similarly, if no eventType is specified, all callbacks\n * for the `Reference` will be removed.\n *\n * Individual listeners can also be removed by invoking their unsubscribe\n * callbacks.\n *\n * @param query - The query that the listener was registered with.\n * @param eventType - One of the following strings: \"value\", \"child_added\",\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\n * for the `Reference` will be removed.\n * @param callback - The callback function that was passed to `on()` or\n * `undefined` to remove all callbacks.\n */\nexport function off(\n  query: Query,\n  eventType?: EventType,\n  callback?: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown\n): void {\n  let container: EventRegistration | null = null;\n  const expCallback = callback ? new CallbackContext(callback) : null;\n  if (eventType === 'value') {\n    container = new ValueEventRegistration(expCallback);\n  } else if (eventType) {\n    container = new ChildEventRegistration(eventType, expCallback);\n  }\n  repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/** Describes the different query constraints available in this SDK. */\nexport type QueryConstraintType =\n  | 'endAt'\n  | 'endBefore'\n  | 'startAt'\n  | 'startAfter'\n  | 'limitToFirst'\n  | 'limitToLast'\n  | 'orderByChild'\n  | 'orderByKey'\n  | 'orderByPriority'\n  | 'orderByValue'\n  | 'equalTo';\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\n * {@link orderByValue}  or {@link equalTo} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nexport abstract class QueryConstraint {\n  /** The type of this query constraints */\n  abstract readonly type: QueryConstraintType;\n\n  /**\n   * Takes the provided `Query` and returns a copy of the `Query` with this\n   * `QueryConstraint` applied.\n   */\n  abstract _apply<T>(query: QueryImpl): QueryImpl;\n}\n\nclass QueryEndAtConstraint extends QueryConstraint {\n  readonly type: 'endAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endAt', this._value, query._path, true);\n    const newParams = queryParamsEndAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endAt: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name less than or equal\n * to the specified key.\n *\n * You can read more about `endAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to end at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end at, among the children with the previously\n * specified priority. This argument is only allowed if ordering by child,\n * value, or priority.\n */\nexport function endAt(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endAt', 'key', key, true);\n  return new QueryEndAtConstraint(value, key);\n}\n\nclass QueryEndBeforeConstraint extends QueryConstraint {\n  readonly type: 'endBefore';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endBefore', this._value, query._path, false);\n    const newParams = queryParamsEndBefore(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endBefore: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is exclusive. If only a value is provided, children\n * with a value less than the specified value will be included in the query.\n * If a key is specified, then children must have a value lesss than or equal\n * to the specified value and a a key name less than the specified key.\n *\n * @param value - The value to end before. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end before, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function endBefore(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endBefore', 'key', key, true);\n  return new QueryEndBeforeConstraint(value, key);\n}\n\nclass QueryStartAtConstraint extends QueryConstraint {\n  readonly type: 'startAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAt', this._value, query._path, true);\n    const newParams = queryParamsStartAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAt: Starting point was already set (by another call to startAt, ' +\n          'startBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name greater than or\n * equal to the specified key.\n *\n * You can read more about `startAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to start at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAt(\n  value: number | string | boolean | null = null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAt', 'key', key, true);\n  return new QueryStartAtConstraint(value, key);\n}\n\nclass QueryStartAfterConstraint extends QueryConstraint {\n  readonly type: 'startAfter';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAfter', this._value, query._path, false);\n    const newParams = queryParamsStartAfter(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAfter: Starting point was already set (by another call to startAt, ' +\n          'startAfter, or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is exclusive. If only a value is provided, children\n * with a value greater than the specified value will be included in the query.\n * If a key is specified, then children must have a value greater than or equal\n * to the specified value and a a key name greater than the specified key.\n *\n * @param value - The value to start after. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start after. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAfter(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAfter', 'key', key, true);\n  return new QueryStartAfterConstraint(value, key);\n}\n\nclass QueryLimitToFirstConstraint extends QueryConstraint {\n  readonly type: 'limitToFirst';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToFirst: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToFirst(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that if limited to the first specific number\n * of children.\n *\n * The `limitToFirst()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the first 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToFirst()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToFirst(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToFirst: First argument must be a positive integer.');\n  }\n  return new QueryLimitToFirstConstraint(limit);\n}\n\nclass QueryLimitToLastConstraint extends QueryConstraint {\n  readonly type: 'limitToLast';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToLast: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToLast(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that is limited to return only the last\n * specified number of children.\n *\n * The `limitToLast()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the last 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToLast()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToLast(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToLast: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToLastConstraint(limit);\n}\n\nclass QueryOrderByChildConstraint extends QueryConstraint {\n  readonly type: 'orderByChild';\n\n  constructor(private readonly _path: string) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByChild');\n    const parsedPath = new Path(this._path);\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error(\n        'orderByChild: cannot pass in empty path. Use orderByValue() instead.'\n      );\n    }\n    const index = new PathIndex(parsedPath);\n    const newParams = queryParamsOrderBy(query._queryParams, index);\n    validateQueryEndpoints(newParams);\n\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the specified child key.\n *\n * Queries can only order by one key at a time. Calling `orderByChild()`\n * multiple times on the same query is an error.\n *\n * Firebase queries allow you to order your data by any child key on the fly.\n * However, if you know in advance what your indexes will be, you can define\n * them via the .indexOn rule in your Security Rules for better performance. See\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\n * rule for more information.\n *\n * You can read more about `orderByChild()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n *\n * @param path - The path to order by.\n */\nexport function orderByChild(path: string): QueryConstraint {\n  if (path === '$key') {\n    throw new Error(\n      'orderByChild: \"$key\" is invalid.  Use orderByKey() instead.'\n    );\n  } else if (path === '$priority') {\n    throw new Error(\n      'orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.'\n    );\n  } else if (path === '$value') {\n    throw new Error(\n      'orderByChild: \"$value\" is invalid.  Use orderByValue() instead.'\n    );\n  }\n  validatePathString('orderByChild', 'path', path, false);\n  return new QueryOrderByChildConstraint(path);\n}\n\nclass QueryOrderByKeyConstraint extends QueryConstraint {\n  readonly type: 'orderByKey';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByKey');\n    const newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the key.\n *\n * Sorts the results of a query by their (ascending) key values.\n *\n * You can read more about `orderByKey()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByKey(): QueryConstraint {\n  return new QueryOrderByKeyConstraint();\n}\n\nclass QueryOrderByPriorityConstraint extends QueryConstraint {\n  readonly type: 'orderByPriority';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByPriority');\n    const newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by priority.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\n * for alternatives to priority.\n */\nexport function orderByPriority(): QueryConstraint {\n  return new QueryOrderByPriorityConstraint();\n}\n\nclass QueryOrderByValueConstraint extends QueryConstraint {\n  readonly type: 'orderByValue';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByValue');\n    const newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by value.\n *\n * If the children of a query are all scalar values (string, number, or\n * boolean), you can order the results by their (ascending) values.\n *\n * You can read more about `orderByValue()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByValue(): QueryConstraint {\n  return new QueryOrderByValueConstraint();\n}\n\nclass QueryEqualToValueConstraint extends QueryConstraint {\n  readonly type: 'equalTo';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('equalTo', this._value, query._path, false);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\n          'equalTo).'\n      );\n    }\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\n          'equalTo).'\n      );\n    }\n    return new QueryEndAtConstraint(this._value, this._key)._apply(\n      new QueryStartAtConstraint(this._value, this._key)._apply(query)\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` that includes children that match the specified\n * value.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The optional key argument can be used to further limit the range of the\n * query. If it is specified, then children that have exactly the specified\n * value must also have exactly the specified key as their key name. This can be\n * used to filter result sets with many matches for the same value.\n *\n * You can read more about `equalTo()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to match for. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function equalTo(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('equalTo', 'key', key, true);\n  return new QueryEqualToValueConstraint(value, key);\n}\n\n/**\n * Creates a new immutable instance of `Query` that is extended to also include\n * additional query constraints.\n *\n * @param query - The Query instance to use as a base for the new constraints.\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\nexport function query(\n  query: Query,\n  ...queryConstraints: QueryConstraint[]\n): Query {\n  let queryImpl = getModularInstance(query) as QueryImpl;\n  for (const constraint of queryConstraints) {\n    queryImpl = constraint._apply(queryImpl);\n  }\n  return queryImpl;\n}\n\n/**\n * Define reference constructor in various modules\n *\n * We are doing this here to avoid several circular\n * dependency issues\n */\nsyncPointSetReferenceConstructor(ReferenceImpl);\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _FirebaseService,\n  _getProvider,\n  FirebaseApp,\n  getApp\n} from '@firebase/app';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\nimport {\n  getModularInstance,\n  createMockUserToken,\n  EmulatorMockTokenOptions\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from '../core/AppCheckTokenProvider';\nimport {\n  AuthTokenProvider,\n  EmulatorTokenProvider,\n  FirebaseAuthTokenProvider\n} from '../core/AuthTokenProvider';\nimport { Repo, repoInterrupt, repoResume, repoStart } from '../core/Repo';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { newEmptyPath, pathIsEmpty } from '../core/util/Path';\nimport {\n  fatal,\n  log,\n  enableLogging as enableLoggingImpl\n} from '../core/util/util';\nimport { validateUrl } from '../core/util/validation';\n\nimport { ReferenceImpl } from './Reference_impl';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n/**\n * This variable is also defined in the firebase Node.js Admin SDK. Before\n * modifying this definition, consult the definition in:\n *\n * https://github.com/firebase/firebase-admin-node\n *\n * and make sure the two are consistent.\n */\nconst FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\n/**\n * Creates and caches `Repo` instances.\n */\nconst repos: {\n  [appName: string]: {\n    [dbUrl: string]: Repo;\n  };\n} = {};\n\n/**\n * If true, any new `Repo` will be created to use `ReadonlyRestClient` (for testing purposes).\n */\nlet useRestClient = false;\n\n/**\n * Update an existing `Repo` in place to point to a new host/port.\n */\nfunction repoManagerApplyEmulatorSettings(\n  repo: Repo,\n  host: string,\n  port: number,\n  tokenProvider?: AuthTokenProvider\n): void {\n  repo.repoInfo_ = new RepoInfo(\n    `${host}:${port}`,\n    /* secure= */ false,\n    repo.repoInfo_.namespace,\n    repo.repoInfo_.webSocketOnly,\n    repo.repoInfo_.nodeAdmin,\n    repo.repoInfo_.persistenceKey,\n    repo.repoInfo_.includeNamespaceInQueryParams\n  );\n\n  if (tokenProvider) {\n    repo.authTokenProvider_ = tokenProvider;\n  }\n}\n\n/**\n * This function should only ever be called to CREATE a new database instance.\n * @internal\n */\nexport function repoManagerDatabaseFromApp(\n  app: FirebaseApp,\n  authProvider: Provider<FirebaseAuthInternalName>,\n  appCheckProvider?: Provider<AppCheckInternalComponentName>,\n  url?: string,\n  nodeAdmin?: boolean\n): Database {\n  let dbUrl: string | undefined = url || app.options.databaseURL;\n  if (dbUrl === undefined) {\n    if (!app.options.projectId) {\n      fatal(\n        \"Can't determine Firebase Database URL. Be sure to include \" +\n          ' a Project ID when calling firebase.initializeApp().'\n      );\n    }\n\n    log('Using default host for project ', app.options.projectId);\n    dbUrl = `${app.options.projectId}-default-rtdb.firebaseio.com`;\n  }\n\n  let parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n  let repoInfo = parsedUrl.repoInfo;\n\n  let isEmulator: boolean;\n\n  let dbEmulatorHost: string | undefined = undefined;\n  if (typeof process !== 'undefined') {\n    dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n  }\n\n  if (dbEmulatorHost) {\n    isEmulator = true;\n    dbUrl = `http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;\n    parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    repoInfo = parsedUrl.repoInfo;\n  } else {\n    isEmulator = !parsedUrl.repoInfo.secure;\n  }\n\n  const authTokenProvider =\n    nodeAdmin && isEmulator\n      ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\n      : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\n\n  validateUrl('Invalid Firebase Database URL', parsedUrl);\n  if (!pathIsEmpty(parsedUrl.path)) {\n    fatal(\n      'Database URL must point to the root of a Firebase Database ' +\n        '(not including a child path).'\n    );\n  }\n\n  const repo = repoManagerCreateRepo(\n    repoInfo,\n    app,\n    authTokenProvider,\n    new AppCheckTokenProvider(app.name, appCheckProvider)\n  );\n  return new Database(repo, app);\n}\n\n/**\n * Remove the repo and make sure it is disconnected.\n *\n */\nfunction repoManagerDeleteRepo(repo: Repo, appName: string): void {\n  const appRepos = repos[appName];\n  // This should never happen...\n  if (!appRepos || appRepos[repo.key] !== repo) {\n    fatal(`Database ${appName}(${repo.repoInfo_}) has already been deleted.`);\n  }\n  repoInterrupt(repo);\n  delete appRepos[repo.key];\n}\n\n/**\n * Ensures a repo doesn't already exist and then creates one using the\n * provided app.\n *\n * @param repoInfo - The metadata about the Repo\n * @returns The Repo object for the specified server / repoName.\n */\nfunction repoManagerCreateRepo(\n  repoInfo: RepoInfo,\n  app: FirebaseApp,\n  authTokenProvider: AuthTokenProvider,\n  appCheckProvider: AppCheckTokenProvider\n): Repo {\n  let appRepos = repos[app.name];\n\n  if (!appRepos) {\n    appRepos = {};\n    repos[app.name] = appRepos;\n  }\n\n  let repo = appRepos[repoInfo.toURLString()];\n  if (repo) {\n    fatal(\n      'Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.'\n    );\n  }\n  repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\n  appRepos[repoInfo.toURLString()] = repo;\n\n  return repo;\n}\n\n/**\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\n */\nexport function repoManagerForceRestClient(forceRestClient: boolean): void {\n  useRestClient = forceRestClient;\n}\n\n/**\n * Class representing a Firebase Realtime Database.\n */\nexport class Database implements _FirebaseService {\n  /** Represents a `Database` instance. */\n  readonly 'type' = 'database';\n\n  /** Track if the instance has been used (root or repo accessed) */\n  _instanceStarted: boolean = false;\n\n  /** Backing state for root_ */\n  private _rootInternal?: ReferenceImpl;\n\n  /** @hideconstructor */\n  constructor(\n    public _repoInternal: Repo,\n    /** The {@link @firebase/app#FirebaseApp} associated with this Realtime Database instance. */\n    readonly app: FirebaseApp\n  ) {}\n\n  get _repo(): Repo {\n    if (!this._instanceStarted) {\n      repoStart(\n        this._repoInternal,\n        this.app.options.appId,\n        this.app.options['databaseAuthVariableOverride']\n      );\n      this._instanceStarted = true;\n    }\n    return this._repoInternal;\n  }\n\n  get _root(): ReferenceImpl {\n    if (!this._rootInternal) {\n      this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\n    }\n    return this._rootInternal;\n  }\n\n  _delete(): Promise<void> {\n    if (this._rootInternal !== null) {\n      repoManagerDeleteRepo(this._repo, this.app.name);\n      this._repoInternal = null;\n      this._rootInternal = null;\n    }\n    return Promise.resolve();\n  }\n\n  _checkNotDeleted(apiName: string) {\n    if (this._rootInternal === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }\n}\n\n/**\n * Returns the instance of the Realtime Database SDK that is associated\n * with the provided {@link @firebase/app#FirebaseApp}. Initializes a new instance with\n * with default settings if no instance exists or if the existing instance uses\n * a custom database URL.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned Realtime\n * Database instance is associated with.\n * @param url - The URL of the Realtime Database instance to connect to. If not\n * provided, the SDK connects to the default instance of the Firebase App.\n * @returns The `Database` instance of the provided app.\n */\nexport function getDatabase(\n  app: FirebaseApp = getApp(),\n  url?: string\n): Database {\n  return _getProvider(app, 'database').getImmediate({\n    identifier: url\n  }) as Database;\n}\n\n/**\n * Modify the provided instance to communicate with the Realtime Database\n * emulator.\n *\n * <p>Note: This method must be called before performing any other operation.\n *\n * @param db - The instance to modify.\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 8080)\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\n */\nexport function connectDatabaseEmulator(\n  db: Database,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('useEmulator');\n  if (db._instanceStarted) {\n    fatal(\n      'Cannot call useEmulator() after instance has already been initialized.'\n    );\n  }\n\n  const repo = db._repoInternal;\n  let tokenProvider: EmulatorTokenProvider | undefined = undefined;\n  if (repo.repoInfo_.nodeAdmin) {\n    if (options.mockUserToken) {\n      fatal(\n        'mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".'\n      );\n    }\n    tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\n  } else if (options.mockUserToken) {\n    const token =\n      typeof options.mockUserToken === 'string'\n        ? options.mockUserToken\n        : createMockUserToken(options.mockUserToken, db.app.options.projectId);\n    tokenProvider = new EmulatorTokenProvider(token);\n  }\n\n  // Modify the repo to apply emulator settings\n  repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\n}\n\n/**\n * Disconnects from the server (all Database operations will be completed\n * offline).\n *\n * The client automatically maintains a persistent connection to the Database\n * server, which will remain active indefinitely and reconnect when\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\n * to control the client connection in cases where a persistent connection is\n * undesirable.\n *\n * While offline, the client will no longer receive data updates from the\n * Database. However, all Database operations performed locally will continue to\n * immediately fire events, allowing your application to continue behaving\n * normally. Additionally, each operation performed locally will automatically\n * be queued and retried upon reconnection to the Database server.\n *\n * To reconnect to the Database and begin receiving remote events, see\n * `goOnline()`.\n *\n * @param db - The instance to disconnect.\n */\nexport function goOffline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOffline');\n  repoInterrupt(db._repo);\n}\n\n/**\n * Reconnects to the server and synchronizes the offline Database state\n * with the server state.\n *\n * This method should be used after disabling the active connection with\n * `goOffline()`. Once reconnected, the client will transmit the proper data\n * and fire the appropriate events so that your client \"catches up\"\n * automatically.\n *\n * @param db - The instance to reconnect.\n */\nexport function goOnline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOnline');\n  repoResume(db._repo);\n}\n\n/**\n * Logs debugging information to the console.\n *\n * @param enabled - Enables logging if `true`, disables logging if `false`.\n * @param persistent - Remembers the logging state between page refreshes if\n * `true`.\n */\nexport function enableLogging(enabled: boolean, persistent?: boolean);\n\n/**\n * Logs debugging information to the console.\n *\n * @param logger - A custom logger function to control how things get logged.\n */\nexport function enableLogging(logger: (message: string) => unknown);\n\nexport function enableLogging(\n  logger: boolean | ((message: string) => unknown),\n  persistent?: boolean\n): void {\n  enableLoggingImpl(logger, persistent);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\nimport { Component, ComponentType } from '@firebase/component';\n\nimport { name, version } from '../package.json';\nimport { setSDKVersion } from '../src/core/version';\n\nimport { repoManagerDatabaseFromApp } from './api/Database';\n\nexport function registerDatabase(variant?: string): void {\n  setSDKVersion(SDK_VERSION);\n  _registerComponent(\n    new Component(\n      'database',\n      (container, { instanceIdentifier: url }) => {\n        const app = container.getProvider('app').getImmediate()!;\n        const authProvider = container.getProvider('auth-internal');\n        const appCheckProvider = container.getProvider('app-check-internal');\n        return repoManagerDatabaseFromApp(\n          app,\n          authProvider,\n          appCheckProvider,\n          url\n        );\n      },\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst SERVER_TIMESTAMP = {\n  '.sv': 'timestamp'\n};\n\n/**\n * Returns a placeholder value for auto-populating the current timestamp (time\n * since the Unix epoch, in milliseconds) as determined by the Firebase\n * servers.\n */\nexport function serverTimestamp(): object {\n  return SERVER_TIMESTAMP;\n}\n\n/**\n * Returns a placeholder value that can be used to atomically increment the\n * current database value by the provided delta.\n *\n * @param delta - the amount to modify the current value atomically.\n * @returns A placeholder value for modifying data atomically server-side.\n */\nexport function increment(delta: number): object {\n  return {\n    '.sv': {\n      'increment': delta\n    }\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModularInstance, Deferred } from '@firebase/util';\n\nimport { repoStartTransaction } from '../core/Repo';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { Node } from '../core/snap/Node';\nimport { validateWritablePath } from '../core/util/validation';\n\nimport { DatabaseReference } from './Reference';\nimport { DataSnapshot, onValue, ReferenceImpl } from './Reference_impl';\n\n/** An options object to configure transactions. */\nexport interface TransactionOptions {\n  /**\n   * By default, events are raised each time the transaction update function\n   * runs. So if it is run multiple times, you may see intermediate states. You\n   * can set this to false to suppress these intermediate states and instead\n   * wait until the transaction has completed before events are raised.\n   */\n  readonly applyLocally?: boolean;\n}\n\n/**\n * A type for the resolve value of {@link runTransaction}.\n */\nexport class TransactionResult {\n  /** @hideconstructor */\n  constructor(\n    /** Whether the transaction was successfully committed. */\n    readonly committed: boolean,\n    /** The resulting data snapshot. */\n    readonly snapshot: DataSnapshot\n  ) {}\n\n  /** Returns a JSON-serializable representation of this object. */\n  toJSON(): object {\n    return { committed: this.committed, snapshot: this.snapshot.toJSON() };\n  }\n}\n\n/**\n * Atomically modifies the data at this location.\n *\n * Atomically modify the data at this location. Unlike a normal `set()`, which\n * just overwrites the data regardless of its previous value, `runTransaction()` is\n * used to modify the existing value to a new value, ensuring there are no\n * conflicts with other clients writing to the same location at the same time.\n *\n * To accomplish this, you pass `runTransaction()` an update function which is\n * used to transform the current value into a new value. If another client\n * writes to the location before your new value is successfully written, your\n * update function will be called again with the new current value, and the\n * write will be retried. This will happen repeatedly until your write succeeds\n * without conflict or you abort the transaction by not returning a value from\n * your update function.\n *\n * Note: Modifying data with `set()` will cancel any pending transactions at\n * that location, so extreme care should be taken if mixing `set()` and\n * `runTransaction()` to update the same data.\n *\n * Note: When using transactions with Security and Firebase Rules in place, be\n * aware that a client needs `.read` access in addition to `.write` access in\n * order to perform a transaction. This is because the client-side nature of\n * transactions requires the client to read the data in order to transactionally\n * update it.\n *\n * @param ref - The location to atomically modify.\n * @param transactionUpdate - A developer-supplied function which will be passed\n * the current data stored at this location (as a JavaScript object). The\n * function should return the new value it would like written (as a JavaScript\n * object). If `undefined` is returned (i.e. you return with no arguments) the\n * transaction will be aborted and the data at this location will not be\n * modified.\n * @param options - An options object to configure transactions.\n * @returns A `Promise` that can optionally be used instead of the `onComplete`\n * callback to handle success and failure.\n */\nexport function runTransaction(\n  ref: DatabaseReference,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  transactionUpdate: (currentData: any) => unknown,\n  options?: TransactionOptions\n): Promise<TransactionResult> {\n  ref = getModularInstance(ref);\n\n  validateWritablePath('Reference.transaction', ref._path);\n\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw (\n      'Reference.transaction failed: ' + ref.key + ' is a read-only object.'\n    );\n  }\n\n  const applyLocally = options?.applyLocally ?? true;\n  const deferred = new Deferred<TransactionResult>();\n\n  const promiseComplete = (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => {\n    let dataSnapshot: DataSnapshot | null = null;\n    if (error) {\n      deferred.reject(error);\n    } else {\n      dataSnapshot = new DataSnapshot(\n        node,\n        new ReferenceImpl(ref._repo, ref._path),\n        PRIORITY_INDEX\n      );\n      deferred.resolve(new TransactionResult(committed, dataSnapshot));\n    }\n  };\n\n  // Add a watch to make sure we get server updates.\n  const unwatcher = onValue(ref, () => {});\n\n  repoStartTransaction(\n    ref._repo,\n    ref._path,\n    transactionUpdate,\n    promiseComplete,\n    unwatcher,\n    applyLocally\n  );\n\n  return deferred.promise;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PersistentConnection } from '../core/PersistentConnection';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { Connection } from '../realtime/Connection';\n\nimport { repoManagerForceRestClient } from './Database';\n\nexport const DataConnection = PersistentConnection;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).simpleListen = function (\n  pathString: string,\n  onComplete: (a: unknown) => void\n) {\n  this.sendRequest('q', { p: pathString }, onComplete);\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).echo = function (\n  data: unknown,\n  onEcho: (a: unknown) => void\n) {\n  this.sendRequest('echo', { d: data }, onEcho);\n};\n\n// RealTimeConnection properties that we use in tests.\nexport const RealTimeConnection = Connection;\n\n/**\n * @internal\n */\nexport const hijackHash = function (newHash: () => string) {\n  const oldPut = PersistentConnection.prototype.put;\n  PersistentConnection.prototype.put = function (\n    pathString,\n    data,\n    onComplete,\n    hash\n  ) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nexport const ConnectionTarget = RepoInfo;\n\n/**\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\n * @internal\n */\nexport const forceRestClient = function (forceRestClient: boolean) {\n  repoManagerForceRestClient(forceRestClient);\n};\n","/**\n * Firebase Realtime Database\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Database } from './api/Database';\nimport { registerDatabase } from './register';\n\nexport * from './api';\n\nregisterDatabase();\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'database': Database;\n  }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n"],"names":["appName","appCompatName","analyticsName","analyticsCompatName","appCheckName","appCheckCompatName","authName","authCompatName","databaseName","databaseCompatName","functionsName","functionsCompatName","installationsName","installationsCompatName","messagingName","messagingCompatName","performanceName","performanceCompatName","remoteConfigName","remoteConfigCompatName","storageName","storageCompatName","firestoreName","firestoreCompatName","packageName","setLogLevelImpl","name","version","stringToByteArray","enableLogging","MAX_NODE","setMaxNode","nodeFromJSON","setPriorityMaxNode","referenceConstructor","errorPrefixFxn","errorPrefix","enableLoggingImpl","SDK_VERSION"],"version":3,"file":"index.036e810b.js.map","sourceRoot":"/__parcel_source_root/"}